{"version":3,"file":"main.c1f25b6a.js","mappings":"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AA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;YAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;QAAA;UAAA;YAAA;UAAA;UAAA;YAAA;UAAA;QAAA;MAAA;MAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;QAAA;MAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA;IAAA;MAAA;QAAA;QAAA;MAAA;QAAA;MAAA;MAAA;MAAA;MAAA;QAAA;UAAA;QAAA;MAAA;MAAA;QAAA;QAAA;QAAA;UAAA;YAAA;UAAA;YA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A,IAAI;WACJ;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;WACD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA,sGAAsG;WACtG;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA,EAAE;WACF;WACA;;;;;WChEA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sDAAsD;WACtD,sCAAsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA,8BAA8B,mhFAAmhF;WACjjF;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;;;;;WCVA;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCVA;;;;;WCAA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA,CAAC;;WAED;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCxDA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;WCrFA;;;;;UEAA;UACA;UACA;UACA;UACA;UACA;UACA;UACA","sources":["webpack://@nepoche/stats-dapp/./src/App.tsx","webpack://@nepoche/stats-dapp/./src/components/Footer/Footer.tsx","webpack://@nepoche/stats-dapp/./src/components/Footer/index.ts","webpack://@nepoche/stats-dapp/./src/components/Header/Header.tsx","webpack://@nepoche/stats-dapp/./src/components/Header/index.ts","webpack://@nepoche/stats-dapp/./src/components/index.ts","webpack://@nepoche/stats-dapp/./src/constants/index.ts","webpack://@nepoche/stats-dapp/./src/containers/AuthoritiesTable/AuthoritiesTable.tsx","webpack://@nepoche/stats-dapp/./src/containers/AuthoritiesTable/index.ts","webpack://@nepoche/stats-dapp/./src/containers/AuthorityDetail/AuthorityDetail.tsx","webpack://@nepoche/stats-dapp/./src/containers/AuthorityDetail/index.ts","webpack://@nepoche/stats-dapp/./src/containers/BridgeInputsShowCase/BridgeInputsShowCase.tsx","webpack://@nepoche/stats-dapp/./src/containers/BridgeInputsShowCase/index.ts","webpack://@nepoche/stats-dapp/./src/containers/DonutChartContainer/DonutChartContainer.tsx","webpack://@nepoche/stats-dapp/./src/containers/DonutChartContainer/index.ts","webpack://@nepoche/stats-dapp/./src/containers/DonutChartContainer/types.ts","webpack://@nepoche/stats-dapp/./src/containers/KeyDetail/KeyDetail.tsx","webpack://@nepoche/stats-dapp/./src/containers/KeyDetail/index.ts","webpack://@nepoche/stats-dapp/./src/containers/KeyStatusCardContainer/KeyStatusCardContainer.tsx","webpack://@nepoche/stats-dapp/./src/containers/KeyStatusCardContainer/index.ts","webpack://@nepoche/stats-dapp/./src/containers/KeygenTable/KeygenTable.tsx","webpack://@nepoche/stats-dapp/./src/containers/KeygenTable/index.ts","webpack://@nepoche/stats-dapp/./src/containers/Layout/Layout.tsx","webpack://@nepoche/stats-dapp/./src/containers/Layout/index.ts","webpack://@nepoche/stats-dapp/./src/containers/ProposalDetail/ProposalDetail.tsx","webpack://@nepoche/stats-dapp/./src/containers/ProposalDetail/index.ts","webpack://@nepoche/stats-dapp/./src/containers/ProposalsTable/ProposalsTable.tsx","webpack://@nepoche/stats-dapp/./src/containers/ProposalsTable/index.ts","webpack://@nepoche/stats-dapp/./src/containers/ProposersTable/ProposersTable.tsx","webpack://@nepoche/stats-dapp/./src/containers/ProposersTable/index.ts","webpack://@nepoche/stats-dapp/./src/containers/index.ts","webpack://@nepoche/stats-dapp/./src/generated/graphql.tsx","webpack://@nepoche/stats-dapp/./src/hooks/index.ts","webpack://@nepoche/stats-dapp/./src/hooks/useAuthoritiesSeedData.ts","webpack://@nepoche/stats-dapp/./src/hooks/useDonutColor.ts","webpack://@nepoche/stats-dapp/./src/hooks/useProposalsSeedData.ts","webpack://@nepoche/stats-dapp/./src/index.tsx","webpack://@nepoche/stats-dapp/./src/provider/hooks/index.ts","webpack://@nepoche/stats-dapp/./src/provider/hooks/types.ts","webpack://@nepoche/stats-dapp/./src/provider/hooks/useAuthorities.ts","webpack://@nepoche/stats-dapp/./src/provider/hooks/useCurrentMetaData.ts","webpack://@nepoche/stats-dapp/./src/provider/hooks/useKeys.ts","webpack://@nepoche/stats-dapp/./src/provider/hooks/useProposals.ts","webpack://@nepoche/stats-dapp/./src/provider/stats-provider.tsx","webpack://@nepoche/stats-dapp/./src/routes/index.tsx","webpack://@nepoche/stats-dapp/./src/utils/getChipColorByKeyType.ts","webpack://@nepoche/stats-dapp/./src/utils/getChipColorByProposalType.ts","webpack://@nepoche/stats-dapp/./src/utils/index.ts","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/RouterProvider.tsx","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/SettingProvider.tsx","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/app-mode.ts","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/arkworks-proving-manager.worker.ts","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/circom-proving-manager.worker.ts","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/index.ts","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/store/createStore.ts","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/store/index.tsx","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/store/modules/api-query.ts","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/store/modules/ui.ts","webpack://@nepoche/stats-dapp/../../libs/react-environment/src/store/useMemorized.ts","webpack://@nepoche/stats-dapp/../../libs/ui-hooks/src/index.ts","webpack://@nepoche/stats-dapp/../../libs/ui-hooks/src/useCopyable.ts","webpack://@nepoche/stats-dapp/../../libs/ui-hooks/src/useModal.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Avatar/Avatar.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Avatar/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Avatar/utils.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/AvatarGroup/AvatarGroup.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/AvatarGroup/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/BridgeInputs/AmountInput.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/BridgeInputs/ChainInput.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/BridgeInputs/FixedAmount.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/BridgeInputs/InputWrapper.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/BridgeInputs/RecipientInput.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/BridgeInputs/RelayerInput.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/BridgeInputs/ShieldedAssetInput.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/BridgeInputs/TokenInput.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/BridgeInputs/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Button/Button.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Button/ButtonSpinner.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Button/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Button/use-button-props.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Button/utils.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Card/Card.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Card/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/CardTable/CardTable.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/CardTable/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/CheckBox/Checkbox.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/CheckBox/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Chip/Chip.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Chip/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Chip/utils.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Collapsible/Collapsible.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Collapsible/CollapsibleButton.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Collapsible/CollapsibleContent.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Collapsible/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/CopyWithTooltip/CopyWithTooltip.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/CopyWithTooltip/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Divider/Divider.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Divider/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Drawer/Drawer.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Drawer/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Dropdown/Dropdown.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Dropdown/DropdownBasicButton.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Dropdown/DropdownBody.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Dropdown/DropdownButton.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Dropdown/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/DropdownMenu/DropdownMenu.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/DropdownMenu/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Filter/Filter.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Filter/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Filter/utils.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Input/Input.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Input/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/KeyCard/KeyCard.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/KeyCard/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/KeyStatusCard/KeyStatusCard.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/KeyStatusCard/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/KeyStatusCard/useKeyStatusSeedData.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/KeyValueWithButton/KeyValueWithButton.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/KeyValueWithButton/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Label/Label.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Label/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/LabelWithValue/LabelWithValue.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/LabelWithValue/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Logo/Logo.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Logo/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/MenuItem/MenuItem.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/MenuItem/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/NetworkThresholdsCard/NetworkThresholdsCard.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/NetworkThresholdsCard/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/NetworkThresholdsCard/useNetworkThresholdsSeedData.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Pagination/Pagination.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Pagination/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Progress/Progress.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Progress/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Slider/Slider.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Slider/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Stats/Stats.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Stats/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Switcher/Switcher.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Switcher/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Table/TData.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Table/THeader.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Table/Table.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Table/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Tabs/Tabs.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Tabs/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/ThemeSwitcher/ThemeSwitcherButton.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/ThemeSwitcher/ThemeSwitcherMenuItem.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/ThemeSwitcher/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/TimeLine/TimeLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/TimeLine/TimeLineItem.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/TimeLine/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/TimeProgress/TimeProgress.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/TimeProgress/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/TitleWithInfo/TitleWithInfo.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/TitleWithInfo/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/TokenSelector/TokenSelector.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/TokenSelector/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Tooltip/Tooltip.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/Tooltip/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/components/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/containers/WebbUIErrorBoudary/WebbUIErrorBoudary.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/containers/WebbUIErrorBoudary/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/containers/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/hooks/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/hooks/useCopyable.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/hooks/useDarkMode.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/hooks/useDynamicSVGImport.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/hooks/useKeygenSeedData.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/hooks/useSeedData.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/hooks/useWebbUI.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ArrowDropDownFill.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ArrowDropUpFill.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ArrowLeft.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ArrowRight.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/AuctionLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/BankLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Block.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/CheckboxBlankCircleLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/CheckboxCircleLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/CheckboxFill.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ChevronDown.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ChevronLeft.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ChevronRight.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ChevronUp.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Close.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Coin.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/CommonWealth.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Copyright.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/DefaultTokenIcon.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/DiscordFill.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/EditLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ExchangeFunds.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ExchangeLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Expand.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ExternalLinkLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/FileCopyLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/FilterIcon.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/GithubFill.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Graph.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/InformationLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Key.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Link.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Mail.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Memu.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/MoonLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/QRCode.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Search.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/ShuffleLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/Spinner.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/SunLine.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/TelegramFill.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/TokenIcon.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/TwitterFill.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/create-icon.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/icons/utils.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/provider/index.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/typography/Typography/Typography.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/typography/Typography/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/typography/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/typography/utils/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/arrayFrom.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/calculateDateProgress.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/formatDateToUtc.tsx","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/getPaginationItems.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/getRoundedAmountString.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/index.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/randAccount32.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/randomEnum.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/range.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/shortenHex.ts","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/utils/shorttenString.ts","webpack://@nepoche/stats-dapp/ ^\\.\\/.*\\.svg$ namespace object","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/css/layer-base.css","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/css/layer-components.css","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/tailwind.css","webpack://@nepoche/stats-dapp/../../libs/webb-ui-components/src/tailwind.css?8224","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/@ethersproject/bignumber/node_modules/bn.js/lib|buffer","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/@ethersproject/signing-key/node_modules/bn.js/lib|buffer","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/@noble/secp256k1/lib/esm|crypto","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/@polkadot/react-identicon/node_modules/bn.js/lib|buffer","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/@polkadot/util/node_modules/bn.js/lib|buffer","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/blake-hash/node_modules/readable-stream/lib/internal/streams|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/blake-hash/node_modules/readable-stream/lib|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/bn.js/lib|buffer","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/brorand|crypto","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/browserify-rsa/node_modules/bn.js/lib|buffer","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/browserify-sign/node_modules/bn.js/lib|buffer","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/browserify-sign/node_modules/readable-stream/lib|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/ejs/lib|fs","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/fastfile/src|constants","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/fastfile/src|fs","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/hash-base/node_modules/readable-stream/lib|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/keccak/node_modules/readable-stream/lib/internal/streams|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/keccak/node_modules/readable-stream/lib|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/readline|fs","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/rlp/node_modules/bn.js/lib|buffer","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/seedrandom|crypto","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/stream-browserify/node_modules/readable-stream/lib|util","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/tweetnacl-util|buffer","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/tweetnacl|crypto","webpack://@nepoche/stats-dapp/ignored|/Users/nathanbarnavon/workspace/test/nepoche/webb-frontends/node_modules/web3-utils/node_modules/bn.js/lib|buffer","webpack://@nepoche/stats-dapp/webpack/bootstrap","webpack://@nepoche/stats-dapp/webpack/runtime/amd define","webpack://@nepoche/stats-dapp/webpack/runtime/amd options","webpack://@nepoche/stats-dapp/webpack/runtime/async module","webpack://@nepoche/stats-dapp/webpack/runtime/chunk loaded","webpack://@nepoche/stats-dapp/webpack/runtime/compat get default export","webpack://@nepoche/stats-dapp/webpack/runtime/create fake namespace object","webpack://@nepoche/stats-dapp/webpack/runtime/define property getters","webpack://@nepoche/stats-dapp/webpack/runtime/ensure chunk","webpack://@nepoche/stats-dapp/webpack/runtime/get javascript chunk filename","webpack://@nepoche/stats-dapp/webpack/runtime/get mini-css chunk filename","webpack://@nepoche/stats-dapp/webpack/runtime/global","webpack://@nepoche/stats-dapp/webpack/runtime/harmony module decorator","webpack://@nepoche/stats-dapp/webpack/runtime/hasOwnProperty shorthand","webpack://@nepoche/stats-dapp/webpack/runtime/load script","webpack://@nepoche/stats-dapp/webpack/runtime/make namespace object","webpack://@nepoche/stats-dapp/webpack/runtime/node module decorator","webpack://@nepoche/stats-dapp/webpack/runtime/wasm loading","webpack://@nepoche/stats-dapp/webpack/runtime/publicPath","webpack://@nepoche/stats-dapp/webpack/runtime/react refresh","webpack://@nepoche/stats-dapp/webpack/runtime/jsonp chunk loading","webpack://@nepoche/stats-dapp/webpack/runtime/nonce","webpack://@nepoche/stats-dapp/webpack/before-startup","webpack://@nepoche/stats-dapp/webpack/startup","webpack://@nepoche/stats-dapp/webpack/after-startup"],"sourcesContent":["import { RouterProvider } from '@nepoche/react-environment';\nimport { WebbUIProvider } from '@nepoche/webb-ui-components';\nimport { FC } from 'react';\n\nimport { routes } from './routes';\n\nconst App: FC = () => {\n  return (\n    <WebbUIProvider hasErrorBoudary>\n      <RouterProvider config={routes} />\n    </WebbUIProvider>\n  );\n};\n\nexport default App;\n","import * as constants from '../../constants';\nimport { Divider, Logo } from '@nepoche/webb-ui-components/components';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { ExternalLink, Link } from '../../../types';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n/**\n * The statistic `Footer` for `Layout` container\n */\nexport const Footer: FC = () => {\n  return (\n    <footer className='flex flex-col max-w-[1160px] mx-auto mt-6 pt-8 pb-16 space-y-4 bg-mono-20 dark:bg-mono-200'>\n      <div className='flex justify-between'>\n        <NavLink className='block' to={constants.logoConfig.path}>\n          <Logo />\n        </NavLink>\n\n        {Object.keys(constants.footerNavs).map((key, idx) => {\n          return <FooterNavItem key={`${key}-${idx}`} header={key} links={constants.footerNavs[key]} />;\n        })}\n      </div>\n\n      <Divider />\n\n      {/** Social platforms */}\n      <div className='flex items-center justify-end space-x-8'>\n        {constants.socialConfigs.map(({ Icon, name, ...linkProps }) => (\n          <a key={name} {...linkProps} className='text-mono-100 hover:text-mono-200 dark:hover:text-mono-40'>\n            <Icon size='lg' className='!fill-current' />\n          </a>\n        ))}\n      </div>\n\n      <div className='flex justify-between'>\n        <Typography variant='body2' className='!text-mono-100'>\n          Apache 2.0\n        </Typography>\n\n        <div className='flex items-center space-x-12'>\n          {constants.bottomLinks.map(({ name, ...link }) => (\n            <a key={name} {...link} className='group'>\n              <Typography variant='body2' className='!text-mono-100 group-hover:underline'>\n                {name}\n              </Typography>\n            </a>\n          ))}\n        </div>\n      </div>\n    </footer>\n  );\n};\n\n/***********************\n * Internal components *\n ***********************/\n\nconst FooterNavItem: FC<{ header: string; links: Array<Link | ExternalLink> }> = ({ header, links }) => (\n  <div className='flex flex-col space-y-4'>\n    <Typography component='span' variant='body1' className='!text-mono-100 inline-block capitalize' fw='bold'>\n      {header}\n    </Typography>\n\n    <ul className='flex flex-col space-y-1'>\n      {links.map((link, idx) => {\n        const { name, ...restLink } = link;\n\n        return (\n          <li key={`${name}${idx}`}>\n            {'path' in restLink ? (\n              <NavLink to={restLink.path}>\n                <Typography\n                  component='span'\n                  variant='body2'\n                  className='!text-mono-100 group-hover:underline capitalize'\n                >\n                  {name}\n                </Typography>\n              </NavLink>\n            ) : (\n              <a {...restLink} className='group'>\n                <Typography\n                  component='span'\n                  variant='body2'\n                  className='!text-mono-100 group-hover:underline capitalize'\n                >\n                  {name}\n                </Typography>\n              </a>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  </div>\n);\n","export * from './Footer';\n","import * as constants from '../../constants';\nimport {\n  Button,\n  Collapsible,\n  CollapsibleButton,\n  CollapsibleContent,\n  Dropdown,\n  DropdownBasicButton,\n  DropdownBody,\n  Input,\n  Logo,\n  MenuItem,\n  ThemeSwitcherMenuItem,\n} from '@nepoche/webb-ui-components/components';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport cx from 'classnames';\nimport { FC, useCallback, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype HeaderProps = {\n  connectedEndpoint: string;\n  setConnectedEndpoint: (endpoint: string) => Promise<void>;\n};\n\n/**\n * The statistic `Header` for `Layout` container\n */\nexport const Header: FC<HeaderProps> = ({ connectedEndpoint, setConnectedEndpoint }) => {\n  const { name, ...webbApiConfig } = constants.webbApiConfig;\n\n  // This state variable tracks the user input of the 'Custom Data Source'\n  const [endpointUserInput, setEndpointUserInput] = useState(connectedEndpoint);\n\n  // A function to verify the user input before setting the connection.\n  const verifyEndpoint = async (maybeEndpoint: string) => {\n    // verify graphql service at endpoint:\n    const req = await fetch(`${maybeEndpoint}?query=%7B__typename%7D`);\n    if (req.ok) {\n      return true;\n    } else {\n      throw false;\n    }\n  };\n\n  const setEndpoint = useCallback(\n    async (endpoint: string) => {\n      const verified = await verifyEndpoint(endpoint);\n      if (verified) {\n        localStorage.setItem('statsEndpoint', endpoint);\n        await setConnectedEndpoint(endpoint);\n      } else {\n        setEndpointUserInput(connectedEndpoint);\n      }\n    },\n    [connectedEndpoint, setConnectedEndpoint]\n  );\n\n  return (\n    <header className='bg-mono-0 dark:bg-mono-180'>\n      <div className='relative flex items-center justify-between py-4 mb-6 max-w-[1160px] mx-auto'>\n        <NavLink to={constants.logoConfig.path}>\n          <Logo />\n        </NavLink>\n\n        {/** Center the nav */}\n        <nav className='absolute -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2'>\n          <ul className='flex items-center space-x-9'>\n            {constants.headerNavs.map(({ name, path }) => (\n              <NavButton key={`${name}-${path}`} path={path}>\n                {name}\n              </NavButton>\n            ))}\n          </ul>\n        </nav>\n\n        <div className='flex items-center space-x-4'>\n          <Button size='sm' className='block' {...webbApiConfig}>\n            <Typography variant='body1' fw='bold' className='!text-inherit' component='span'>\n              {name}\n            </Typography>\n          </Button>\n\n          <div>\n            <Dropdown className='flex items-center justify-center'>\n              <DropdownBasicButton>\n                <svg\n                  width={24}\n                  height={24}\n                  className='fill-mono-180 dark:fill-mono-0'\n                  xmlns='http://www.w3.org/2000/svg'\n                >\n                  <path d='M12 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 14c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-7c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z' />\n                </svg>\n              </DropdownBasicButton>\n\n              <DropdownBody\n                className='pt-2 pb-4 mt-6'\n                onInteractOutside={async () => await setEndpoint(endpointUserInput)}\n              >\n                <SettingItem>\n                  <Typography variant='h5' fw='bold'>\n                    Settings\n                  </Typography>\n                </SettingItem>\n\n                <ThemeSwitcherMenuItem />\n\n                <MenuItem\n                  icon={\n                    <svg width={24} height={24} className='fill-current' xmlns='http://www.w3.org/2000/svg'>\n                      <path d='M13 21v2h-2v-2H3a1 1 0 01-1-1V4a1 1 0 011-1h6a3.99 3.99 0 013 1.354A3.99 3.99 0 0115 3h6a1 1 0 011 1v16a1 1 0 01-1 1h-8zm7-2V5h-5a2 2 0 00-2 2v12h7zm-9 0V7a2 2 0 00-2-2H4v14h7z' />\n                    </svg>\n                  }\n                  onClick={() => {\n                    window.open('https://docs.webb.tools', '_blank');\n                  }}\n                >\n                  Docs\n                </MenuItem>\n\n                <Collapsible>\n                  <CollapsibleButton>Keygen Threshold</CollapsibleButton>\n                  <CollapsibleContent className='p-0'>\n                    <div className='flex items-center justify-between px-4 py-2'>\n                      <Typography variant='body1'>Custom Data Source</Typography>\n\n                      <Button\n                        size='sm'\n                        variant='link'\n                        onClick={() => {\n                          setEndpointUserInput(connectedEndpoint);\n                        }}\n                      >\n                        Reset\n                      </Button>\n                    </div>\n\n                    <Input\n                      id='endpoint'\n                      className='px-4 py-2'\n                      onChange={(val) => setEndpointUserInput(val.toString())}\n                      value={endpointUserInput}\n                    />\n                  </CollapsibleContent>\n                </Collapsible>\n              </DropdownBody>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nconst SettingItem: FC<{ children: React.ReactNode }> = ({ children }) => (\n  <div className='px-4 py-2 w-[298px] flex items-center justify-between text-mono-180 dark:text-mono-0'>{children}</div>\n);\n\n/***********************\n * Internal components *\n ***********************/\n\nconst NavButton: FC<{ children: React.ReactNode; path: string }> = ({ children, path }) => (\n  <li>\n    <NavLink to={path}>\n      {({ isActive }) => (\n        <span\n          className={cx(\n            'px-3 py-1 font-bold rounded-full body1',\n            'bg-mono-0 dark:bg-mono-180',\n            isActive ? 'text-blue dark:text-blue-40' : 'text-mono-160 dark:text-mono-40',\n            isActive && 'pointer-events-none',\n            !isActive && ' hover:bg-blue-0 dark:hover:bg-blue-120 dark:hover:text-blue-10 ',\n            !isActive && 'active:bg-blue-0 active:text-blue dark:active:bg-blue-120 dark:active:text-blue-30'\n          )}\n        >\n          {children}\n        </span>\n      )}\n    </NavLink>\n  </li>\n);\n","export * from './Header';\n","export * from './Header';\nexport * from './Footer';\n","import { ExternalLink, FooterNavsType, Link, SocialConfigsType } from '../../types';\nimport { CommonWealth, DiscordFill, GithubFill, TelegramFill, TwitterFill } from '@nepoche/webb-ui-components/icons';\n\nconst commonExternalProps = {\n  target: '_blank' as const,\n};\n\nexport const logoConfig: Link = {\n  name: 'Logo',\n  path: '/',\n};\n\nexport const webbApiConfig: ExternalLink = {\n  name: 'Webb App',\n  href: 'https://app.webb.tools',\n  ...commonExternalProps,\n};\n\nexport const headerNavs: Link[] = [\n  {\n    name: 'Proposals',\n    path: 'proposals',\n  },\n  {\n    name: 'Authorities',\n    path: 'authorities',\n  },\n  {\n    name: 'Keys',\n    path: 'keys',\n  },\n];\n\nexport const footerNavs: FooterNavsType = {\n  dapp: [\n    {\n      name: 'bridge',\n      href: 'https://app.webb.tools/#/bridge',\n      ...commonExternalProps,\n    },\n    {\n      name: 'wrap',\n      href: 'https://app.webb.tools/#/wrap-unwrap',\n      ...commonExternalProps,\n    },\n  ],\n  network: [\n    {\n      name: 'statistics',\n      href: 'https://www.stats-dev.webb.tools/',\n      ...commonExternalProps,\n    },\n    {\n      name: 'tangle',\n      href: 'https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fstandalone.webb.tools#/explorer',\n      ...commonExternalProps,\n    },\n  ],\n  developer: [\n    {\n      name: 'documentation',\n      href: 'https://docs.webb.tools/v1/getting-started/overview/',\n      ...commonExternalProps,\n    },\n    {\n      name: 'source code',\n      href: 'https://github.com/webb-tools',\n      ...commonExternalProps,\n    },\n  ],\n  resources: [\n    {\n      name: 'community',\n      href: 'https://docs.webb.tools/v1/getting-started/overview/#join-the-community',\n      ...commonExternalProps,\n    },\n    {\n      name: 'FAQs',\n      href: '#',\n      ...commonExternalProps,\n    },\n  ],\n  company: [\n    {\n      name: 'about us',\n      href: 'https://www.webb.tools/',\n      ...commonExternalProps,\n    },\n    {\n      name: 'jobs',\n      href: 'https://angel.co/company/webb-4/jobs',\n      ...commonExternalProps,\n    },\n  ],\n};\n\nexport const bottomLinks: ExternalLink[] = [\n  {\n    name: 'Terms of Service',\n    href: '#',\n    ...commonExternalProps,\n  },\n  {\n    name: 'Privacy Policy',\n    href: '#',\n    ...commonExternalProps,\n  },\n  {\n    name: 'Security',\n    href: '#',\n    ...commonExternalProps,\n  },\n];\n\nexport const socialConfigs: Array<SocialConfigsType> = [\n  {\n    name: 'telagram',\n    Icon: TelegramFill,\n    href: 'https://t.me/webbprotocol',\n    ...commonExternalProps,\n  },\n  {\n    name: 'discord',\n    Icon: DiscordFill,\n    href: 'https://discord.com/invite/cv8EfJu3Tn',\n    ...commonExternalProps,\n  },\n  {\n    name: 'twitter',\n    Icon: TwitterFill,\n    href: 'https://twitter.com/webbprotocol',\n    ...commonExternalProps,\n  },\n  {\n    name: 'github',\n    Icon: GithubFill,\n    href: 'https://github.com/webb-tools',\n    ...commonExternalProps,\n  },\n  {\n    name: 'commonwealth',\n    Icon: CommonWealth,\n    href: 'https://commonwealth.im/webb',\n    ...commonExternalProps,\n  },\n];\n\nconst isDev = process.env.NODE_ENV === 'development';\n\nexport const defaultEndpoint = isDev ? 'http://localhost:4000' : 'https://subquery-dev.webb.tools/graphql';\n","import {\n  ColumnDef,\n  createColumnHelper,\n  getCoreRowModel,\n  getPaginationRowModel,\n  PaginationState,\n  Table as RTTable,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { AuthorityListItem, PageInfoQuery, useAuthorities } from '../../provider/hooks';\nimport {\n  Avatar,\n  Button,\n  CardTable,\n  KeyValueWithButton,\n  Progress,\n  Table,\n} from '@nepoche/webb-ui-components/components';\nimport { fuzzyFilter } from '@nepoche/webb-ui-components/components/Filter/utils';\nimport { Typography } from '@nepoche/webb-ui-components';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nimport { FC, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { AuthoritiesTableProps } from './types';\n\nconst columnHelper = createColumnHelper<AuthorityListItem>();\n\nconst columns: ColumnDef<AuthorityListItem, any>[] = [\n  columnHelper.accessor('id', {\n    header: 'Participant',\n    cell: (props) => (\n      <div className='flex items-center space-x-2'>\n        <Avatar sourceVariant={'address'} value={props.getValue<string>()} />\n        <KeyValueWithButton keyValue={props.getValue<string>()} size='sm' isHiddenLabel />\n      </div>\n    ),\n  }),\n\n  columnHelper.accessor('location', {\n    header: 'Location',\n    cell: (props) => (\n      <Typography variant='h5' fw='bold' component='span' className='!text-inherit'>\n        {getUnicodeFlagIcon(props.getValue())}\n      </Typography>\n    ),\n  }),\n\n  columnHelper.accessor('uptime', {\n    header: 'Uptime',\n    cell: (props) => <Progress size='sm' value={parseInt(props.getValue())} className='w-[100px]' suffixLabel='%' />,\n  }),\n\n  columnHelper.accessor('reputation', {\n    header: 'Reputation',\n    cell: (props) => <Progress size='sm' value={parseInt(props.getValue())} className='w-[100px]' suffixLabel='%' />,\n  }),\n\n  columnHelper.accessor('id', {\n    header: '',\n    id: 'details',\n    cell: (props) => (\n      <Button variant='link' size='sm'>\n        <Link to={`/authorities/drawer/${props.getValue<string>()}`}>Details</Link>\n      </Button>\n    ),\n  }),\n];\n\nexport const AuthoritiesTable: FC<AuthoritiesTableProps> = ({ data: dataProp }) => {\n  const [{ pageIndex, pageSize }, setPagination] = useState<PaginationState>({\n    pageIndex: 0,\n    pageSize: 10,\n  });\n\n  const pagination = useMemo(\n    () => ({\n      pageIndex,\n      pageSize,\n    }),\n    [pageIndex, pageSize]\n  );\n  const query = useMemo<PageInfoQuery>(\n    () => ({\n      offset: pageIndex * pageSize,\n      perPage: pageSize,\n      filter: null,\n    }),\n    [pageIndex, pageSize]\n  );\n\n  const authorities = useAuthorities(query);\n  const totalItems = useMemo(() => authorities.val?.pageInfo.count ?? 0, [authorities]);\n  const pageCount = useMemo(() => Math.ceil(totalItems / pageSize), [pageSize, totalItems]);\n  const data = useMemo(() => authorities.val?.items ?? [], [authorities]);\n  const table = useReactTable<AuthorityListItem>({\n    data: data ?? ([] as AuthorityListItem[]),\n    columns,\n    pageCount,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    state: {\n      pagination,\n    },\n    filterFns: {\n      fuzzy: fuzzyFilter,\n    },\n    onPaginationChange: setPagination,\n    manualPagination: dataProp === undefined,\n  });\n\n  return (\n    <CardTable\n      titleProps={{\n        title: 'DKG Authorities',\n        info: 'DKG Authorities',\n        variant: 'h5',\n      }}\n    >\n      <Table tableProps={table as RTTable<unknown>} isPaginated totalRecords={totalItems} />\n    </CardTable>\n  );\n};\n","export * from './AuthoritiesTable';\n","import {\n  ColumnDef,\n  createColumnHelper,\n  getCoreRowModel,\n  getPaginationRowModel,\n  PaginationState,\n  Table as RTTable,\n  useReactTable,\n} from '@tanstack/react-table';\nimport {\n  AuthorityQuery,\n  AuthorityStats,\n  DiscreteList,\n  KeyGenKeyListItem,\n  useAuthority,\n} from '../../provider/hooks';\nimport { useStatsContext } from '../../provider/stats-provider';\nimport {\n  Avatar,\n  AvatarGroup,\n  Button,\n  CardTable,\n  Divider,\n  DrawerCloseButton,\n  KeyValueWithButton,\n  Progress,\n  Table,\n  TitleWithInfo,\n} from '@nepoche/webb-ui-components/components';\nimport { fuzzyFilter } from '@nepoche/webb-ui-components/components/Filter/utils';\nimport {\n  ArrowLeft,\n  CheckboxBlankCircleLine,\n  Close,\n  Expand,\n  Key,\n  Link as LinkIcon,\n  Mail,\n  QRCode,\n  Spinner,\n  TwitterFill,\n} from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { shortenString } from '@nepoche/webb-ui-components/utils';\nimport cx from 'classnames';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nimport { FC, useMemo, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { twMerge } from 'tailwind-merge';\n\nimport { headerConfig } from '../KeygenTable';\n\nconst columnHelper = createColumnHelper<KeyGenKeyListItem>();\n\nconst columns: ColumnDef<KeyGenKeyListItem, any>[] = [\n  columnHelper.accessor('height', {\n    header: () => <TitleWithInfo {...headerConfig['common']} {...headerConfig['height']} />,\n    enableColumnFilter: false,\n  }),\n\n  columnHelper.accessor('session', {\n    header: () => <TitleWithInfo {...headerConfig['common']} {...headerConfig['session']} />,\n    enableColumnFilter: false,\n  }),\n\n  columnHelper.accessor('publicKey', {\n    header: () => <TitleWithInfo {...headerConfig['common']} {...headerConfig['key']} />,\n    cell: (props) => (\n      <KeyValueWithButton valueVariant='body1' isHiddenLabel keyValue={props.getValue<string>()} size='sm' />\n    ),\n    enableColumnFilter: false,\n  }),\n\n  columnHelper.accessor('authority', {\n    header: () => <TitleWithInfo {...headerConfig['common']} {...headerConfig['authorities']} />,\n    cell: (props) => {\n      const authorities = props.getValue<DiscreteList>();\n      return (\n        <AvatarGroup total={authorities.count}>\n          {authorities.firstElements.map((au, idx) => (\n            <Avatar sourceVariant={'address'} key={`${au}${idx}`} value={au} />\n          ))}\n        </AvatarGroup>\n      );\n    },\n    enableColumnFilter: false,\n  }),\n\n  columnHelper.accessor('id', {\n    header: '',\n    cell: (props) => {\n      const id = props.row.original.publicKey;\n      return (\n        <Link to={`/keys/drawer/${id}`}>\n          <Button variant='link' as='span' size='sm'>\n            Details\n          </Button>\n        </Link>\n      );\n    },\n    enableColumnFilter: false,\n  }),\n];\n\nexport const AuthorityDetail = () => {\n  const { pathname } = useLocation();\n  const { authorityId = '' } = useParams<{ authorityId: string }>();\n  const {\n    metaData: { activeSession },\n  } = useStatsContext();\n\n  const isPage = useMemo(() => !pathname.includes('drawer'), [pathname]);\n  const [{ pageIndex, pageSize }, setPagination] = useState<PaginationState>({\n    pageIndex: 0,\n    pageSize: 10,\n  });\n  const authorityQuery: AuthorityQuery = useMemo(() => {\n    return {\n      offset: pageIndex * pageSize,\n      perPage: pageSize,\n      filter: {\n        authorityId,\n      },\n    };\n  }, [authorityId, pageSize, pageIndex]);\n  const authority = useAuthority(authorityQuery);\n\n  const stats = useMemo(() => authority.stats.val, [authority]);\n\n  const isStatsLoading = useMemo(() => authority.stats.isLoading || stats === null, [authority.stats.isLoading, stats]);\n\n  const pagination = useMemo(\n    () => ({\n      pageIndex,\n      pageSize,\n    }),\n    [pageIndex, pageSize]\n  );\n\n  const totalItems = useMemo(() => authority.keyGens.val?.pageInfo.count ?? 0, [authority]);\n  const pageCount = useMemo(() => Math.ceil(totalItems / pageSize), [pageSize, totalItems]);\n\n  const keyGens = useMemo(() => authority.keyGens.val?.items ?? [], [authority]);\n  const table = useReactTable<KeyGenKeyListItem>({\n    data: keyGens,\n    columns,\n    pageCount,\n    getCoreRowModel: getCoreRowModel(),\n    state: {\n      pagination,\n    },\n    onPaginationChange: setPagination,\n    manualPagination: true,\n    getPaginationRowModel: getPaginationRowModel(),\n    filterFns: {\n      fuzzy: fuzzyFilter,\n    },\n  });\n\n  return (\n    <div className='flex flex-col p-6 space-y-6'>\n      <DetailsView id={authorityId} isPage={isPage} stats={stats} isLoading={isStatsLoading} />\n\n      {/** Keygen table */}\n      <CardTable\n        titleProps={{\n          title: 'List of Keygens',\n          info: 'List of Keygens',\n          variant: 'h5',\n        }}\n      >\n        <Table tableProps={table as RTTable<unknown>} isPaginated={true} />\n      </CardTable>\n    </div>\n  );\n};\n\n/***********************\n * Internal components *\n ***********************/\n\nconst DetailsView: FC<{ stats: AuthorityStats | null; isLoading?: boolean; isPage: boolean; id: string }> = ({\n  id,\n  isLoading,\n  isPage,\n  stats,\n}) => {\n  const location = 'EG';\n  const account = id;\n\n  return (\n    <div\n      className={cx('overflow-hidden rounded-lg bg-mono-0 dark:bg-mono-180', 'flex flex-col space-y-6', {\n        'px-4 py-6': isPage,\n      })}\n    >\n      <div className={cx('flex items-center justify-between', { hidden: isPage })} hidden={isPage}>\n        <Link to={`/authorities/${id}`} className='inline-block'>\n          <Expand size='lg' />\n        </Link>\n\n        {!isPage && (\n          <DrawerCloseButton>\n            <Close size='lg' />\n          </DrawerCloseButton>\n        )}\n      </div>\n\n      {(isLoading || stats === null) && (\n        <div className='flex items-center justify-center min-w-full min-h-[320px]'>\n          <Spinner size='xl' />\n        </div>\n      )}\n\n      {!isLoading && stats !== null && (\n        <>\n          {/** Title */}\n          <div className='flex'>\n            <div className='flex items-start grow'>\n              <Link to={'/authorities'} className={cx('mr-4 inline-block', { hidden: !isPage })} hidden={!isPage}>\n                <ArrowLeft size='lg' />\n              </Link>\n              <div className='flex items-center space-x-2'>\n                <Avatar value={id} size='lg' />\n                <div className='flex flex-col space-y-1'>\n                  <Typography variant='h5' fw='bold'>\n                    {`${shortenString(id, 4)} ${getUnicodeFlagIcon(location)}`}\n                  </Typography>\n                  <KeyValueWithButton hasShortenValue={false} keyValue={account} size='sm' isHiddenLabel />\n                </div>\n              </div>\n\n              <div className={cx('flex items-center p-1 space-x-2 text-mono-120 dark:text-mono-80 grow justify-end')}>\n                <Key className='!fill-current' />\n                <TwitterFill className='!fill-current' />\n                <LinkIcon className='!fill-current' />\n                <Mail className='!fill-current' />\n                <QRCode className='!fill-current' />\n              </div>\n            </div>\n          </div>\n\n          {/** Content */}\n          <div className='flex space-x-3'>\n            <div className='flex flex-col p-3 space-y-3 rounded-md grow shrink basis-0 bg-mono-20 dark:bg-mono-160'>\n              <Row>\n                <Col />\n                <Col className='text-center'>Keygen Threshold</Col>\n                <Col className='text-center'>Keygen Authority</Col>\n              </Row>\n              <Row hasDivider>\n                <Col className='justify-start'>Current</Col>\n                <Col className='text-center'>{stats.keyGenThreshold.val}</Col>\n                <Col className='text-center'>\n                  {stats.keyGenThreshold.inTheSet ? (\n                    <CheckboxBlankCircleLine size='lg' className='!fill-green-60' />\n                  ) : (\n                    '-'\n                  )}\n                </Col>\n              </Row>\n              <Row hasDivider>\n                <Col className='justify-start'>Next</Col>\n                <Col className='text-center'>{stats.nextKeyGenThreshold.val}</Col>\n                <Col className='text-center'>\n                  {stats.nextKeyGenThreshold.inTheSet ? (\n                    <CheckboxBlankCircleLine size='lg' className='!fill-green-60' />\n                  ) : (\n                    '-'\n                  )}\n                </Col>\n              </Row>\n            </div>\n\n            <div className='flex flex-col space-y-3 grow shrink basis-0'>\n              <div className='bg-mono-20 dark:bg-mono-160 rounded-md p-3 flex flex-col space-y-1.5 justify-center items-center'>\n                <Typography variant='body1' fw='bold' className='opacity-60'>\n                  {stats.numberOfKeys}\n                </Typography>\n                <Typography variant='body3' fw='bold' className='!text-mono-100'>\n                  # of keygens\n                </Typography>\n              </div>\n\n              <Progress value={stats.uptime} size='lg' prefixLabel='UPTIME ' suffixLabel='%' />\n\n              <Progress value={stats.reputation} size='lg' prefixLabel='REPUTATION ' suffixLabel='%' />\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst Row: FC<{ children: React.ReactNode, hasDivider?: boolean }> = ({ children, hasDivider }) => (\n  <div className='flex flex-col grow shrink basis-0'>\n    {hasDivider && <Divider />}\n    <div className='flex justify-end px-3 space-x-2 grow'>{children}</div>\n  </div>\n);\n\nconst Col: FC<{ children?: React.ReactNode, className?: string }> = ({ children, className }) => (\n  <Typography\n    variant='body2'\n    fw='bold'\n    className={twMerge('flex items-center justify-center grow shrink basis-0', className)}\n  >\n    {children}\n  </Typography>\n);\n","export * from './AuthorityDetail';\n","import {\n  AmountInput,\n  Card,\n  ChainInput,\n  FixedAmount,\n  RecipientInput,\n  RelayerInput,\n  ShieldedAssetInput,\n  TitleWithInfo,\n  TokenInput,\n} from '@nepoche/webb-ui-components';\nimport { FC, useState } from 'react';\n\nimport { ShowcaseProps } from './types';\n\nconst values = [0.1, 0.25, 0.5, 1];\n\nexport const BridgeInputsShowCase = () => {\n  const fixedValue = useState<number | undefined>(values[0]);\n\n  const recipientValue = useState<string | undefined>('');\n\n  return (\n    <div className='flex space-x-4'>\n      <Showcase fixedAmountState={fixedValue} recipientState={recipientValue} />\n\n      <div className='w-full dark'>\n        <Showcase fixedAmountState={fixedValue} recipientState={recipientValue} />\n      </div>\n    </div>\n  );\n};\n\nconst Showcase: FC<ShowcaseProps> = ({ fixedAmountState, recipientState }) => {\n  const [value, setValue] = fixedAmountState;\n  const [recipient, setRecipient] = recipientState;\n\n  return (\n    <Card>\n      <TitleWithInfo title='Inputs' variant='h4' />\n      <div className='flex flex-col items-center space-y-4'>\n        <ChainInput chainType='source' />\n        <ChainInput chainType='dest' chain={{ name: 'Optimism', symbol: 'op' }} />\n\n        <TokenInput />\n        <TokenInput token={{ symbol: 'eth', balance: 1.2, balanceInUsd: 1000 }} />\n\n        <AmountInput />\n        <AmountInput id='Custom amount' info='Custom amount' />\n\n        <FixedAmount info='Fix amount' values={values} value={value as number} onChange={(nextVal) => setValue(nextVal)} />\n\n        <RecipientInput value={recipient as string} onChange={(nextVal) => setRecipient(nextVal.toString())} />\n\n        <ShieldedAssetInput />\n\n        <ShieldedAssetInput asset={{ token1Symbol: 'webb', token2Symbol: 'eth', balance: 2.1, balanceInUsd: 1000 }} />\n\n        <RelayerInput />\n        <RelayerInput\n          relayerAddress='5DJEpHVVxSpaWGfdAzep11MK458y5JkHA5YvYm3dp3eawuXi'\n          externalLink='https://webb.tools'\n        />\n      </div>\n    </Card>\n  );\n};\n","export * from './BridgeInputsShowCase';\n","import { useDonutColor } from '../../hooks';\nimport { ProposalStatus } from '../../provider/hooks';\nimport { Card, DropdownMenu, Label, TitleWithInfo } from '@nepoche/webb-ui-components/components';\nimport { Spinner } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { FC, useMemo } from 'react';\nimport { ChartProps, Doughnut } from 'react-chartjs-2';\n\nimport { DonutDataType } from './types';\n\nconst data = [9, 2, 3, 5];\nexport type TimeRange = 'Day' | 'Week' | 'Year' | 'All Time';\n\ntype ProposalsOverviewProps = {\n  statsMap: Record<ProposalStatus, number>;\n  isLoading: boolean;\n  timeRange: TimeRange;\n  setTimeRange: (timeRange: TimeRange) => void;\n};\nexport const DonutChartContainer: FC<ProposalsOverviewProps> = ({ isLoading, setTimeRange, statsMap, timeRange }) => {\n  const menuOptions = useMemo<TimeRange[]>(() => ['Day', 'Week', 'Year', 'All Time'], []);\n  const selectIndex = useMemo(() => menuOptions.indexOf(timeRange), [menuOptions, timeRange]);\n\n  const donutColors = useDonutColor();\n  const labels = useMemo(\n    () => Object.keys(statsMap).filter((i: any) => DonutDataType[i as DonutDataType]) as DonutDataType[],\n    [statsMap]\n  );\n  const chartData = useMemo(() => {\n    return {\n      labels,\n      datasets: [\n        {\n          label: 'Dataset',\n          data: labels.map((label) => statsMap[label]),\n          backgroundColor: labels.map((label) => donutColors[label].bg),\n          borderColor: labels.map((label) => donutColors[label].borderColor),\n          borderWidth: 1,\n        },\n      ],\n    };\n  }, [donutColors, labels, statsMap]);\n\n  const chartOpts = useMemo<ChartProps['options']>(() => {\n    return {\n      responsive: true,\n      plugins: {\n        legend: {\n          display: false,\n          position: 'top',\n        },\n        title: {\n          display: false,\n          text: 'Proposals Types and Status',\n        },\n      },\n    };\n  }, []);\n\n  return (\n    <Card className='max-w-[450px]'>\n      <div className='flex items-center justify-between'>\n        <TitleWithInfo title='Proposal Types' variant='h5' />\n\n        <DropdownMenu\n          size='sm'\n          menuOptions={menuOptions.map((opt) => ({ value: opt }))}\n          value={menuOptions[selectIndex]}\n          onChange={(nextVal) => setTimeRange(nextVal as TimeRange)}\n        />\n      </div>\n      {isLoading ? (\n        <div className='flex items-center justify-center min-w-full min-h-[242px]'>\n          <Spinner size='xl' />\n        </div>\n      ) : (\n        <>\n          <div className='flex items-center justify-center grow'>\n            <div className='w-[196px] h-[196px]'>\n              <Doughnut data={chartData} options={chartOpts} />\n            </div>\n          </div>\n\n          <div className='flex items-center justify-between'>\n            {labels.map((label, idx) => (\n              <ChartLabel\n                key={`${label}-${idx}`}\n                label={label}\n                value={statsMap[label].toString()}\n                color={donutColors[label].textColor}\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </Card>\n  );\n};\n\n/***********************\n * Internal components *\n ***********************/\n\nconst ChartLabel: FC<{ label: string; value: string; color: string }> = (props) => {\n  return (\n    <div>\n      <Typography variant='h5' fw='bold' className='inline-block mr-2' style={{ color: props.color }}>\n        {props.value}\n      </Typography>\n      <Label style={{ color: props.color }}>{props.label}</Label>\n    </div>\n  );\n};\n","export * from './DonutChartContainer';\n","export enum DonutDataType {\n  Open = 'Open',\n  Rejected = 'Rejected',\n  Signed = 'Signed',\n  Accepted = 'Accepted',\n}\n","import {\n  ColumnDef,\n  createColumnHelper,\n  getCoreRowModel,\n  getPaginationRowModel,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { Table as RTTable } from '@tanstack/table-core';\nimport { KeyGenAuthority, SessionKeyStatus, useKey } from '../../provider/hooks';\nimport { useSubQLtime } from '../../provider/stats-provider';\nimport {\n  Avatar,\n  AvatarGroup,\n  Button,\n  CardTable,\n  Chip,\n  DrawerCloseButton,\n  KeyCard,\n  KeyValueWithButton,\n  LabelWithValue,\n  Progress,\n  Table,\n  TimeLine,\n  TimeLineItem,\n  TimeProgress,\n  TitleWithInfo,\n} from '@nepoche/webb-ui-components/components';\nimport { fuzzyFilter } from '@nepoche/webb-ui-components/components/Filter/utils';\nimport { ArrowLeft, ArrowRight, Close, Expand, Spinner } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport cx from 'classnames';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nimport { forwardRef, useCallback, useMemo } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\n\nimport { KeyDetailProps, KeyGenAuthoredTableProps } from './types';\n\nexport const KeyDetail = forwardRef<HTMLDivElement, KeyDetailProps>(({ isPage }, ref) => {\n  const { keyId = '' } = useParams<{ keyId: string }>();\n  const navigate = useNavigate();\n\n  const { key, prevAndNextKey: prevAndNextKeyResp } = useKey(keyId);\n\n  const { error, isFailed, isLoading, val: keyDetail } = key;\n  const { val: prevAndNextKey } = prevAndNextKeyResp;\n\n  const commonCardClsx = useMemo(() => 'rounded-lg bg-mono-0 dark:bg-mono-180', []);\n  const time = useSubQLtime();\n\n  const onNextKey = useCallback(() => {\n    if (prevAndNextKey?.nextKeyId) {\n      navigate(`/keys${isPage ? '' : '/drawer'}/${prevAndNextKey.nextKeyId}`);\n    }\n  }, [isPage, navigate, prevAndNextKey]);\n\n  const onPreviousKey = useCallback(() => {\n    if (prevAndNextKey?.previousKeyId) {\n      navigate(`/keys${isPage ? '' : '/drawer'}/${prevAndNextKey.previousKeyId}`);\n    }\n  }, [isPage, navigate, prevAndNextKey]);\n\n  if (isLoading || keyDetail === null) {\n    return (\n      <div className='flex items-center justify-center min-w-full min-h-full'>\n        <Spinner size='xl' />\n      </div>\n    );\n  }\n\n  if (isFailed) {\n    return (\n      <div>\n        <Typography variant='body1' className='text-red-100 dark:text-red-10'>\n          {error ?? 'Unexpected error'}\n        </Typography>\n      </div>\n    );\n  }\n\n  if (!keyDetail) {\n    return null; // Not display anything\n  }\n\n  return (\n    <div className={cx('flex flex-col space-y-4', isPage ? '' : 'p-6 ')} ref={ref}>\n      {/** Key detail */}\n      <div className={cx('flex flex-col p-4 space-y-4', commonCardClsx)}>\n        {/** Title */}\n        <div className='flex items-center justify-between'>\n          {/** Title with info and expand button */}\n          <div className='flex items-center space-x-3'>\n            <Link to={isPage ? `/keys` : `/keys/${keyDetail.id}`}>\n              {isPage ? <ArrowLeft size='lg' /> : <Expand size='lg' />}\n            </Link>\n            <TitleWithInfo title='Key Details' variant='h4' info='Key Details' />\n          </div>\n\n          {/** Right buttons */}\n          <div>\n            <div className='flex items-center space-x-4'>\n              {/** Previous/Next Buttons */}\n              <div className='flex space-x-2'>\n                <Button\n                  size='sm'\n                  leftIcon={<ArrowLeft className='!fill-current' />}\n                  variant='utility'\n                  isDisabled={!prevAndNextKey || !prevAndNextKey.previousKeyId}\n                  onClick={onPreviousKey}\n                >\n                  Prev Key\n                </Button>\n                <Button\n                  size='sm'\n                  rightIcon={<ArrowRight className='!fill-current' />}\n                  variant='utility'\n                  isDisabled={!prevAndNextKey || !prevAndNextKey.nextKeyId}\n                  onClick={onNextKey}\n                >\n                  Next Key\n                </Button>\n              </div>\n\n              {/** Close modal */}\n              {!isPage && (\n                <DrawerCloseButton>\n                  <Close size='lg' />\n                </DrawerCloseButton>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/** Session number */}\n        <div className='flex items-center space-x-2'>\n          <Chip color='green'>{keyDetail.isDone ? 'History' : keyDetail.isCurrent ? 'Current' : 'Next'}</Chip>\n          <LabelWithValue label='Session: ' value={keyDetail.session} />\n        </div>\n\n        {/** Active Period */}\n        <div className='flex flex-col space-y-3'>\n          <TitleWithInfo title='Active Period' variant='body1' titleComponent='h6' info='Active period' />\n\n          <TimeProgress now={time} startTime={keyDetail.start ?? null} endTime={keyDetail.end ?? null} />\n        </div>\n\n        {/** Compressed/Uncompressed Keys */}\n        <div className='flex space-x-4'>\n          <KeyCard title='Compressed key' keyValue={keyDetail.compressed} className='grow shrink basis-0 max-w-none' />\n          <KeyCard\n            title='Uncompressed key'\n            keyValue={keyDetail.uncompressed}\n            className='grow shrink basis-0 max-w-none'\n          />\n        </div>\n      </div>\n\n      {/** Key history */}\n      <div className={cx('flex flex-col p-4 space-y-4', commonCardClsx)}>\n        <TitleWithInfo title='Key History' variant='h5' info='Key history' />\n\n        <TimeLine>\n          {keyDetail.history.map((hist, idx) => {\n            const { at, hash, status } = hist;\n\n            switch (status) {\n              case SessionKeyStatus.Generated: {\n                return (\n                  <TimeLineItem\n                    key={`${at.toString()}-${idx}`}\n                    title={status}\n                    time={at}\n                    txHash={hash}\n                    externalUrl='https://webb.tools' // TODO: Determine the external url\n                  />\n                );\n              }\n\n              case SessionKeyStatus.Signed: {\n                return (\n                  <TimeLineItem\n                    key={`${at.toString()}-${idx}`}\n                    title={status}\n                    time={at}\n                    txHash={hash}\n                    externalUrl='https://webb.tools' // TODO: Determine the external url\n                    extraContent={\n                      <div className='flex items-center space-x-2'>\n                        <KeyValueWithButton keyValue={keyDetail.uncompressed} size='sm' />\n                        <Button variant='link' size='sm'>\n                          Detail\n                        </Button>\n                      </div>\n                    }\n                  />\n                );\n              }\n\n              case SessionKeyStatus.Rotated: {\n                return (\n                  <TimeLineItem\n                    key={`${at.toString()}-${idx}`}\n                    title={status}\n                    time={at}\n                    txHash={hash}\n                    externalUrl='https://webb.tools'\n                    extraContent={\n                      <div className='flex items-center space-x-4'>\n                        <LabelWithValue label='Height' value={keyDetail.height} />\n                        {/** TODO: Proposal type */}\n                        <LabelWithValue label='Proposal' value='KeyRotation' />\n                        {keyDetail.authorities.length && (\n                          <LabelWithValue\n                            label='Proposers'\n                            value={\n                              <AvatarGroup total={keyDetail.authorities.length}>\n                                {keyDetail.authorities.map((author, idx) => (\n                                  <Avatar key={author.id} value={author.account} sourceVariant='address' />\n                                ))}\n                              </AvatarGroup>\n                            }\n                          />\n                        )}\n                        <Button size='sm' variant='link'>\n                          Details\n                        </Button>\n                      </div>\n                    }\n                  />\n                );\n              }\n\n              default: {\n                throw new Error('Unknown SessionKeyStatus in KeyDetail component');\n              }\n            }\n          })}\n        </TimeLine>\n      </div>\n\n      {/** Stats */}\n      <div className={cx('flex space-x-4 rounded-')}>\n        <div\n          className={cx(\n            'flex flex-col items-center justify-center py-3 space-y-1 rounded-lg grow',\n            isPage ? 'bg-mono-0 dark:bg-mono-180' : 'bg-mono-20 dark:bg-mono-160'\n          )}\n        >\n          <Typography variant='h4' fw='bold' className='block'>\n            {keyDetail.keyGenThreshold}\n          </Typography>\n          <Typography variant='body1' fw='bold' className='block'>\n            Threshold\n          </Typography>\n        </div>\n\n        <div\n          className={cx(\n            'flex flex-col items-center justify-center py-3 space-y-1 rounded-lg grow',\n            isPage ? 'bg-mono-0 dark:bg-mono-180' : 'bg-mono-20 dark:bg-mono-160'\n          )}\n        >\n          <Typography variant='h4' fw='bold' className='block'>\n            {keyDetail.numberOfValidators}\n          </Typography>\n          <Typography variant='body1' fw='bold' className='block'>\n            Validator\n          </Typography>\n        </div>\n      </div>\n\n      {/** Authorities Table */}\n      <CardTable\n        titleProps={{\n          title: 'DKG Authorities',\n          info: 'DKG Authorities',\n          variant: 'h5',\n        }}\n      >\n        <KeyGenAuthoredTable data={keyDetail.authorities} />\n      </CardTable>\n    </div>\n  );\n});\n\nconst columnHelper = createColumnHelper<KeyGenAuthority>();\n\nconst columns: ColumnDef<KeyGenAuthority, any>[] = [\n  columnHelper.accessor('id', {\n    header: 'Participant',\n    cell: (props) => (\n      <div className='flex items-center space-x-2'>\n        <Avatar sourceVariant={'address'} value={props.getValue<string>()} />\n        <KeyValueWithButton keyValue={props.getValue<string>()} size='sm' isHiddenLabel />\n      </div>\n    ),\n  }),\n\n  columnHelper.accessor('location', {\n    header: 'Location',\n    cell: (props) => (\n      <Typography variant='h5' fw='bold' component='span' className='!text-inherit'>\n        {getUnicodeFlagIcon(props.getValue())}\n      </Typography>\n    ),\n  }),\n\n  columnHelper.accessor('uptime', {\n    header: 'Uptime',\n    cell: (props) => <Progress size='sm' value={parseInt(props.getValue())} className='w-[100px]' suffixLabel='%' />,\n  }),\n\n  columnHelper.accessor('reputation', {\n    header: 'Reputation',\n    cell: (props) => <Progress size='sm' value={parseInt(props.getValue())} className='w-[100px]' suffixLabel='%' />,\n  }),\n\n  columnHelper.accessor('id', {\n    header: '',\n    id: 'detail',\n    cell: (props) => (\n      <Button variant='link' size='sm'>\n        <Link to={`/authorities/drawer/${props.getValue<string>()}`}>Details</Link>\n      </Button>\n    ),\n  }),\n];\n\nconst KeyGenAuthoredTable: React.FC<KeyGenAuthoredTableProps> = ({ data }) => {\n  const table = useReactTable<KeyGenAuthority>({\n    data: data,\n    columns,\n    pageCount: data.length,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n\n    filterFns: {\n      fuzzy: fuzzyFilter,\n    },\n    manualPagination: false,\n  });\n  return <Table tableProps={table as RTTable<unknown>} totalRecords={data.length} />;\n};\n","export * from './KeyDetail';\n","import { KeyStatusCard } from '@nepoche/webb-ui-components/components/KeyStatusCard';\nimport { KeyStatusCardProps } from '@nepoche/webb-ui-components/components/KeyStatusCard/types';\nimport { Spinner } from '@nepoche/webb-ui-components/icons';\nimport React, { FC, forwardRef, useMemo } from 'react';\n\nimport { KeyStatusCardContainerProps } from './types';\n\n/**\n * The wrapper of UI component. Handle logic and mapping fields between backend API and component API\n */\nexport const KeyStatusCardContainer: FC<KeyStatusCardContainerProps> = ({ data, keyType, now }) => {\n  const { title, titleInfo } = useMemo(\n    () => ({\n      title: keyType === 'current' ? 'Active Key' : 'Next Key',\n      titleInfo:\n        keyType === 'current'\n          ? 'The public key of the DKG protocol that is currently active.'\n          : 'The public key of the DKG protocol that will be active after the next authority set change.',\n    }),\n    [keyType]\n  );\n\n  const authorities = useMemo(\n    () =>\n      (data?.keyGenAuthorities ?? []).reduce((acc, cur) => {\n        acc.add(cur);\n        return acc;\n      }, new Set() as KeyStatusCardProps['authorities']) ?? new Set<string>(),\n    [data]\n  );\n\n  return (\n    <KeyStatusCard\n      title={title}\n      titleInfo={titleInfo}\n      instance={now}\n      sessionNumber={Number(data?.session)}\n      keyType={keyType}\n      keyVal={data?.compressed ?? ''}\n      startTime={data?.start ?? null}\n      endTime={data?.end ?? null}\n      authorities={authorities}\n      totalAuthorities={authorities.size}\n      fullDetailUrl={data ? `drawer/${data.id}` : ''}\n    />\n  );\n};\n","export * from './KeyStatusCardContainer';\n","import {\n  ColumnDef,\n  ColumnFiltersState,\n  createColumnHelper,\n  getCoreRowModel,\n  getFacetedMinMaxValues,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  PaginationState,\n  Table as RTTable,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { PageInfoQuery, useKeys } from '../../provider/hooks';\nimport {\n  Avatar,\n  AvatarGroup,\n  Button,\n  CardTable,\n  Collapsible,\n  CollapsibleButton,\n  CollapsibleContent,\n  Filter,\n  KeyValueWithButton,\n  Slider,\n  Table,\n  TitleWithInfo,\n} from '@nepoche/webb-ui-components/components';\nimport { fuzzyFilter } from '@nepoche/webb-ui-components/components/Filter/utils';\nimport { KeygenType } from '@nepoche/webb-ui-components/types';\nimport { FC, useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst columnHelper = createColumnHelper<KeygenType>();\n\nexport const headerConfig = {\n  common: {\n    titleComponent: 'span' as const,\n  },\n  height: {\n    title: 'Height',\n    info: 'Number of blocks',\n  },\n  session: {\n    title: 'Session',\n    info: 'A session is a period that has a constant set of validators. Validators can only join or exit the validator set at a session change.',\n  },\n  key: {\n    title: 'Key',\n    info: 'The public key of the DKG protocol that is currently active.',\n  },\n  signatureThreshold: {\n    title: 'Signature Threshold',\n    info: \"The 't' in (t-out-of-n) threshold signatures used in the DKG signing system. Required of DKG authorities to generate signatures.\",\n  },\n  authorities: {\n    title: 'Authority Set',\n    info: 'A set of DKG authorities',\n  },\n};\n\nconst columns: ColumnDef<KeygenType, any>[] = [\n  columnHelper.accessor('height', {\n    header: () => <TitleWithInfo {...headerConfig['common']} {...headerConfig['height']} />,\n    enableColumnFilter: false,\n  }),\n\n  columnHelper.accessor('session', {\n    header: () => <TitleWithInfo {...headerConfig['common']} {...headerConfig['session']} />,\n    enableColumnFilter: false,\n  }),\n\n  columnHelper.accessor('key', {\n    header: () => <TitleWithInfo {...headerConfig['common']} {...headerConfig['key']} />,\n    cell: (props) => <KeyValueWithButton isHiddenLabel keyValue={props.getValue<string>()} size='sm' />,\n    enableColumnFilter: false,\n  }),\n\n  columnHelper.accessor('keygenThreshold', {\n    header: 'Keygen Threshold',\n  }),\n\n  columnHelper.accessor('signatureThreshold', {\n    header: () => <TitleWithInfo {...headerConfig['common']} {...headerConfig['signatureThreshold']} />,\n  }),\n\n  columnHelper.accessor('authorities', {\n    header: () => <TitleWithInfo {...headerConfig['common']} {...headerConfig['authorities']} />,\n    cell: (props) => {\n      const auth = Array.from(props.getValue<Set<string>>());\n      if (auth.length === 0) {\n        return '-';\n      }\n      return (\n        <AvatarGroup total={props.row.original.totalAuthorities}>\n          {auth.map((au, idx) => (\n            <Avatar sourceVariant={'address'} key={`${au}${idx}`} value={au} />\n          ))}\n        </AvatarGroup>\n      );\n    },\n    enableColumnFilter: false,\n  }),\n\n  columnHelper.accessor('keyId', {\n    header: '',\n    cell: (props) => (\n      <Link to={`drawer/${props.getValue()}`}>\n        <Button variant='link' as='span' size='sm'>\n          Details\n        </Button>\n      </Link>\n    ),\n    enableColumnFilter: false,\n  }),\n];\n\nexport const KeygenTable: FC = () => {\n  // Filters\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([]);\n  const [globalFilter, setGlobalFilter] = useState('');\n\n  // Pagination state\n  const [{ pageIndex, pageSize }, setPagination] = useState<PaginationState>({\n    pageIndex: 0,\n    pageSize: 10,\n  });\n  const [totalItems, setTotalItems] = useState(0);\n\n  const pagination = useMemo(\n    () => ({\n      pageIndex,\n      pageSize,\n    }),\n    [pageIndex, pageSize]\n  );\n\n  const pageQuery: PageInfoQuery = useMemo(\n    () => ({\n      offset: pagination.pageIndex * pageSize,\n      perPage: pagination.pageSize,\n      filter: null,\n    }),\n    [pageSize, pagination.pageIndex, pagination.pageSize]\n  );\n\n  const pageCount = useMemo(() => Math.ceil(totalItems / pageSize), [pageSize, totalItems]);\n\n  const keysStats = useKeys(pageQuery);\n  const data = useMemo(() => {\n    if (keysStats.val) {\n      return keysStats.val.items.map(\n        (item): KeygenType => ({\n          height: Number(item.height),\n          session: Number(item.session),\n          key: item.compressed,\n          authorities: new Set(item.keyGenAuthorities),\n          keygenThreshold: item.keyGenThreshold,\n          keyId: item.uncompressed,\n          totalAuthorities: item.keyGenAuthorities.length,\n          signatureThreshold: item.signatureThreshold,\n          previousKeyId: item.previousKeyId,\n          nextKeyId: item.nextKeyId,\n        })\n      );\n    }\n    return [] as KeygenType[];\n  }, [keysStats]);\n\n  useEffect(() => {\n    if (keysStats.val) {\n      setTotalItems(keysStats.val.pageInfo.count);\n    }\n  }, [keysStats]);\n\n  const table = useReactTable<KeygenType>({\n    data,\n    columns,\n    pageCount,\n    getCoreRowModel: getCoreRowModel(),\n    state: {\n      pagination,\n      columnFilters,\n      globalFilter,\n    },\n    onPaginationChange: setPagination,\n    manualPagination: true,\n    onColumnFiltersChange: setColumnFilters,\n    onGlobalFilterChange: setGlobalFilter,\n    getFilteredRowModel: getFilteredRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues(),\n    getFacetedMinMaxValues: getFacetedMinMaxValues(),\n    filterFns: {\n      fuzzy: fuzzyFilter,\n    },\n    globalFilterFn: fuzzyFilter,\n  });\n\n  const headers = useMemo(\n    () => table.getHeaderGroups().map((headerGroup) => headerGroup.headers.map((header) => header)),\n    [table]\n  );\n\n  const [{ column: keygenFilterCol }, { column: signatureFilterCol }] = useMemo(\n    () => headers[0].filter((header) => header.column.getCanFilter()),\n    [headers]\n  );\n\n  return (\n    <CardTable\n      titleProps={{\n        title: 'List of Keygens',\n        info: 'List of Keygens',\n        variant: 'h5',\n      }}\n      leftTitle={\n        <Filter\n          clearAllFilters={() => {\n            table.setColumnFilters([]);\n            table.setGlobalFilter('');\n          }}\n          searchText={globalFilter}\n          onSearchChange={(nextValue: string | number) => {\n            setGlobalFilter(nextValue.toString());\n          }}\n        >\n          <Collapsible>\n            <CollapsibleButton>Keygen Threshold</CollapsibleButton>\n            <CollapsibleContent>\n              <Slider\n                max={keygenFilterCol.getFacetedMinMaxValues()?.[1]}\n                defaultValue={keygenFilterCol.getFacetedMinMaxValues()}\n                value={keygenFilterCol.getFilterValue() as [number, number]}\n                onChange={(nextValue) => keygenFilterCol.setFilterValue(nextValue)}\n                className='w-full min-w-0'\n                hasLabel\n              />\n            </CollapsibleContent>\n          </Collapsible>\n          <Collapsible>\n            <CollapsibleButton>Signature Threshold</CollapsibleButton>\n            <CollapsibleContent>\n              <Slider\n                max={signatureFilterCol.getFacetedMinMaxValues()?.[1]}\n                defaultValue={signatureFilterCol.getFacetedMinMaxValues()}\n                value={signatureFilterCol.getFilterValue() as [number, number]}\n                onChange={(nextValue) => signatureFilterCol.setFilterValue(nextValue)}\n                className='w-full min-w-0'\n                hasLabel\n              />\n            </CollapsibleContent>\n          </Collapsible>\n        </Filter>\n      }\n    >\n      <Table tableProps={table as RTTable<unknown>} totalRecords={totalItems} isPaginated />\n    </CardTable>\n  );\n};\n","export * from './KeygenTable';\n","import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { Footer, Header } from '../../components';\nimport { defaultEndpoint } from '../../constants';\nimport { StatsProvider } from '../../provider/stats-provider';\nimport { FC, useMemo, useState } from 'react';\n\nexport const Layout: FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [connectedEndpoint, setConnectedEndpoint] = useState((): string => {\n    const storedEndpoint = localStorage.getItem('statsEndpoint');\n    if (storedEndpoint) {\n      return storedEndpoint;\n    }\n    return defaultEndpoint;\n  });\n\n  const apolloClient = useMemo(() => {\n    return new ApolloClient({\n      cache: new InMemoryCache(),\n      uri: connectedEndpoint,\n    });\n  }, [connectedEndpoint]);\n\n  const setEndpoint = async (endpoint: string) => {\n    localStorage.setItem('statsEndpoint', endpoint);\n    setConnectedEndpoint(endpoint);\n  };\n\n  return (\n    <div className='min-w-full min-h-full'>\n      <Header connectedEndpoint={connectedEndpoint} setConnectedEndpoint={setEndpoint} />\n      <ApolloProvider client={apolloClient}>\n        <StatsProvider blockTime={6} sessionHeight={600}>\n          <main className='max-w-[1160px] mx-auto'>{children}</main>\n        </StatsProvider>\n      </ApolloProvider>\n      <Footer />\n    </div>\n  );\n};\n","export * from './Layout';\n","import { randNumber } from '@ngneat/falso';\nimport { useProposal } from '../../provider/hooks';\nimport { useStatsContext } from '../../provider/stats-provider';\nimport {\n  Button,\n  Chip,\n  DrawerCloseButton,\n  LabelWithValue,\n  Progress,\n  TimeLine,\n  TimeLineItem,\n} from '@nepoche/webb-ui-components/components';\nimport {\n  ArrowLeft,\n  ArrowRight,\n  Block,\n  Close,\n  ExchangeLine,\n  Expand,\n  ExternalLinkLine,\n  Spinner,\n  TokenIcon,\n} from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { shortenHex } from '@nepoche/webb-ui-components/utils';\nimport cx from 'classnames';\nimport { FC, useCallback, useMemo } from 'react';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\n\nimport { ProposersTable } from '../ProposersTable';\n\nexport const ProposalDetail = () => {\n  const { pathname } = useLocation();\n  const { proposalId = '' } = useParams<{ proposalId: string }>();\n  const {\n    metaData: { activeSession },\n  } = useStatsContext();\n  const query = useMemo<Parameters<typeof useProposal>>(() => {\n    return [\n      activeSession,\n      {\n        filter: {\n          proposalId,\n        },\n        perPage: 10,\n        offset: 0,\n      },\n    ];\n  }, [activeSession, proposalId]);\n  const proposalDetails = useProposal(...query);\n\n  const isPage = useMemo(() => {\n    return !pathname.includes('drawer');\n  }, [pathname]);\n\n  // Result threshold\n  const passThreshold = useMemo(() => randNumber({ min: 0, max: 100 }), []);\n  const status = useMemo(() => {\n    return proposalDetails.proposal.val?.status ?? null;\n  }, [proposalDetails]);\n  const counters = useMemo(() => {\n    if (proposalDetails.proposal.val) {\n      const details = proposalDetails.proposal.val;\n\n      return {\n        for: details.forCount,\n        abstain: details.abstainCount,\n        against: details.againstCount,\n        all: details.allCount,\n      };\n    }\n    return {\n      for: 0,\n      abstain: 0,\n      against: 0,\n      all: 0,\n    };\n  }, [proposalDetails]);\n  const nextProposalId = proposalDetails.nextAndPrevStatus.val?.nextProposalId;\n  const previousProposalId = proposalDetails.nextAndPrevStatus.val?.previousProposalId;\n  const navigate = useNavigate();\n\n  const handleNextProposal = useCallback(() => {\n    if (nextProposalId) {\n      navigate(`/proposals${isPage ? '' : '/drawer'}/${nextProposalId}`);\n    }\n  }, [isPage, navigate, nextProposalId]);\n\n  const handlePrevProposal = useCallback(() => {\n    if (previousProposalId) {\n      navigate(`/proposals${isPage ? '' : '/drawer'}/${previousProposalId}`);\n    }\n  }, [isPage, navigate, previousProposalId]);\n\n  const Overview = useMemo(() => {\n    if (proposalDetails.proposal.val) {\n      const {\n        abstainCount,\n        abstainPercentage,\n        againstCount,\n        againstPercentage,\n        chain,\n        data: proposalData,\n        forCount,\n        forPercentage,\n        height,\n        timeline,\n        txHash,\n      } = proposalDetails.proposal.val;\n      return (\n        <>\n          {/** Height, tx hash and chain data */}\n          <div className='flex items-center'>\n            <LabelWithValue\n              className='grow'\n              label='height:'\n              value={\n                <span className='flex items-center space-x-1'>\n                  <Block size='lg' />\n                  <Typography variant='mono1'>{height}</Typography>\n                </span>\n              }\n            />\n\n            <LabelWithValue\n              className='grow'\n              label='tx hash:'\n              value={\n                <span className='flex items-center space-x-1'>\n                  <ExchangeLine size='lg' />\n                  <div className='flex items-center space-x-1'>\n                    <LabelWithValue\n                      labelVariant='body3'\n                      label='tx hash:'\n                      isHiddenLabel\n                      value={shortenHex(txHash)}\n                      valueTooltip={txHash}\n                    />\n                    <a href='#'>\n                      <ExternalLinkLine />\n                    </a>\n                  </div>\n                </span>\n              }\n            />\n          </div>\n          <LabelWithValue\n            label='chain:'\n            value={\n              <span className='flex items-center p-2 space-x-2'>\n                <TokenIcon name={chain} size='lg' />\n                <Typography variant='body1' className='block uppercase'>\n                  {chain}\n                </Typography>\n              </span>\n            }\n          />\n          {/** Results */}\n          <Typography variant='h5' fw='bold'>\n            Results\n          </Typography>\n          <div>\n            <Progress value={passThreshold} />\n            <div className='flex justify-center mt-1'>\n              <div className='flex flex-col items-center justify-center'>\n                <div className='border-[1px] h-2 border-[#ccc] bg-[#ccc]' />\n                <Typography variant='utility' className='block uppercase'>\n                  Pass threshold\n                </Typography>\n              </div>\n            </div>\n          </div>\n          {/** Percentages */}\n          <div className='flex space-x-3'>\n            <PercentageCard type='for' percentValue={forPercentage} count={forCount} />\n            <PercentageCard type='against' percentValue={againstPercentage} count={againstCount} />\n            <PercentageCard type='abstain' percentValue={abstainPercentage} count={abstainCount} />\n          </div>\n          {/** Timeline */}\n          <Typography variant='h5' fw='bold'>\n            Timeline\n          </Typography>\n          <TimeLine className='translate-x-3'>\n            {timeline.map((time, idx) => (\n              <TimeLineItem\n                key={`${time.at.toString()}-${idx}`}\n                title={time.status}\n                time={time.at}\n                txHash={time.hash}\n                externalUrl='#'\n              />\n            ))}\n          </TimeLine>\n          {/** Detail */}\n          <Typography variant='h5' fw='bold'>\n            Details\n          </Typography>\n          <div className='p-4 break-all rounded-lg bg-mono-20 dark:bg-mono-160'>\n            <Typography variant='mono2' component='p'>\n              Type: {proposalData.type}\n            </Typography>\n            <br />\n            <Typography variant='mono2' component='p'>\n              Data: {proposalData.data}\n            </Typography>\n          </div>\n        </>\n      );\n    }\n\n    return (\n      <div className='flex items-center justify-center min-w-full min-h-[384px]'>\n        <Spinner size='xl' />\n      </div>\n    );\n  }, [proposalDetails, passThreshold]);\n\n  return (\n    <div className='flex flex-col p-6 space-y-6 rounded-lg bg-mono-0 dark:bg-mono-180'>\n      {/** The title */}\n      <div className='flex items-center justify-between'>\n        <div className='flex items-center space-x-2'>\n          <Link to={isPage ? '/proposals' : `/proposals/${proposalId}`}>\n            {isPage ? <ArrowLeft size='lg' /> : <Expand size='lg' />}\n          </Link>\n\n          {status && <Chip>{status}</Chip>}\n\n          <Typography variant='h4' fw='bold'>\n            Proposal Details\n          </Typography>\n\n          <Button variant='utility' size='sm'>\n            Open Governance\n          </Button>\n        </div>\n\n        <div className='flex items-center space-x-2'>\n          {/** Previous/Next Buttons */}\n          <Button\n            size='sm'\n            onClick={handlePrevProposal}\n            isDisabled={previousProposalId === null || previousProposalId === undefined}\n            leftIcon={<ArrowLeft className='!fill-current' />}\n            variant='utility'\n          >\n            Prev\n          </Button>\n          <Button\n            size='sm'\n            isDisabled={nextProposalId === null || nextProposalId === undefined}\n            onClick={handleNextProposal}\n            rightIcon={<ArrowRight className='!fill-current' />}\n            variant='utility'\n          >\n            Next\n          </Button>\n\n          {/** Close modal */}\n          {!isPage && (\n            <DrawerCloseButton>\n              <Close size='lg' />\n            </DrawerCloseButton>\n          )}\n        </div>\n      </div>\n      {Overview}\n      {/** All proposers */}\n      <ProposersTable counters={counters} proposalId={proposalId} />\n    </div>\n  );\n};\n\n/***********************\n * Internal components *\n ***********************/\n\nexport type VoteType = 'for' | 'against' | 'abstain';\n\nconst classNames = {\n  for: 'bg-green-10 dark:bg-green-120 text-green-70 dark:text-green-50',\n  against: 'bg-red-10 dark:bg-red-120 text-red-70 dark:text-red-50',\n  abstain: 'bg-blue-10 dark:bg-blue-120 text-blue-70 dark:text-blue-50',\n};\n\nconst PercentageCard: FC<{ type: VoteType; percentValue: number; count: number }> = (props) => {\n  const { count, percentValue, type } = props;\n\n  return (\n    <div className={cx('p-3 flex space-x-[6px] items-center rounded-lg grow', classNames[type])}>\n      <Typography variant='h5' fw='bold' className='!text-inherit'>\n        {percentValue}%\n      </Typography>\n      <Typography variant='utility' className='!text-inherit uppercase'>\n        {type} {count}\n      </Typography>\n    </div>\n  );\n};\n","export * from './ProposalDetail';\n","import {\n  ColumnDef,\n  createColumnHelper,\n  getCoreRowModel,\n  getPaginationRowModel,\n  PaginationState,\n  Table as RTTable,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { ProposalStatus } from '../../generated/graphql';\nimport { PageInfoQuery, ProposalListItem, useProposals } from '../../provider/hooks';\nimport { getChipColorByProposalType } from '../../utils';\nimport {\n  Avatar,\n  AvatarGroup,\n  Button,\n  CardTable,\n  Chip,\n  LabelWithValue,\n  Table,\n} from '@nepoche/webb-ui-components/components';\nimport { fuzzyFilter } from '@nepoche/webb-ui-components/components/Filter/utils';\nimport { ExternalLinkLine, TokenIcon } from '@nepoche/webb-ui-components/icons';\nimport { shortenHex } from '@nepoche/webb-ui-components/utils';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst columnHelper = createColumnHelper<ProposalListItem>();\n\nconst columns: ColumnDef<ProposalListItem, any>[] = [\n  columnHelper.accessor('status', {\n    header: 'Status',\n    cell: (props) => (\n      <Chip color={getChipColorByProposalType(props.getValue<ProposalStatus>())}>{props.getValue<string>()}</Chip>\n    ),\n  }),\n\n  columnHelper.accessor('height', {\n    header: 'Height',\n    cell: (props) => props.getValue<string>(),\n  }),\n\n  columnHelper.accessor('type', {\n    header: 'Type',\n  }),\n\n  columnHelper.accessor('txHash', {\n    header: 'Tx Hash',\n    cell: (props) => (\n      <div className='flex items-center space-x-1'>\n        <LabelWithValue\n          labelVariant='body3'\n          label='tx hash:'\n          isHiddenLabel\n          value={shortenHex(props.getValue<string>(), 3)}\n          valueTooltip={props.getValue<string>()}\n        />\n        <a href='#'>\n          <ExternalLinkLine />\n        </a>\n      </div>\n    ),\n  }),\n\n  columnHelper.accessor('proposers', {\n    header: 'Proposers',\n    cell: (props) => {\n      const proposers = props.getValue<ProposalListItem['proposers']>();\n      return (\n        <AvatarGroup total={proposers.count}>\n          {proposers.firstElements.map((item, idx) => (\n            <Avatar sourceVariant={'address'} value={item} key={`${idx}-${item}`} />\n          ))}\n        </AvatarGroup>\n      );\n    },\n  }),\n\n  columnHelper.accessor('chain', {\n    header: 'Chain',\n    cell: () => <TokenIcon name='eth' size='lg' />,\n  }),\n\n  columnHelper.accessor('id', {\n    header: '',\n    cell: (props) => (\n      <Button variant='link' size='sm'>\n        <Link to={`drawer/${props.getValue<string>()}`}>Details</Link>\n      </Button>\n    ),\n  }),\n];\n\nexport const ProposalsTable = () => {\n  // Pagination state\n  const [{ pageIndex, pageSize }, setPagination] = useState<PaginationState>({\n    pageIndex: 0,\n    pageSize: 10,\n  });\n  const [totalItems, setTotalItems] = useState(0);\n\n  const pagination = useMemo(\n    () => ({\n      pageIndex,\n      pageSize,\n    }),\n    [pageIndex, pageSize]\n  );\n  const pageQuery: PageInfoQuery = useMemo(\n    () => ({\n      offset: pagination.pageIndex * pageSize,\n      perPage: pagination.pageSize,\n      filter: null,\n    }),\n    [pageSize, pagination.pageIndex, pagination.pageSize]\n  );\n  const pageCount = useMemo(() => Math.ceil(totalItems / pageSize), [pageSize, totalItems]);\n\n  const proposalsStats = useProposals(pageQuery);\n  const data = useMemo(() => {\n    if (proposalsStats.val) {\n      return proposalsStats.val.items;\n    }\n    return [] as ProposalListItem[];\n  }, [proposalsStats]);\n  useEffect(() => {\n    if (proposalsStats.val) {\n      setTotalItems(proposalsStats.val.pageInfo.count);\n    }\n  }, [proposalsStats]);\n\n  const table = useReactTable<ProposalListItem>({\n    columns,\n    data: data,\n    pageCount: pageCount,\n    getCoreRowModel: getCoreRowModel(),\n    state: {\n      pagination,\n    },\n    onPaginationChange: setPagination,\n    manualPagination: true,\n    getPaginationRowModel: getPaginationRowModel(),\n    filterFns: {\n      fuzzy: fuzzyFilter,\n    },\n  });\n\n  return (\n    <CardTable\n      titleProps={{\n        title: 'All Proposals',\n      }}\n    >\n      <Table tableProps={table as RTTable<unknown>} isPaginated totalRecords={totalItems} />\n    </CardTable>\n  );\n};\n","export * from './ProposalsTable';\n","import {\n  ColumnDef,\n  createColumnHelper,\n  getCoreRowModel,\n  getFacetedMinMaxValues,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  Table as RTTable,\n  useReactTable,\n} from '@tanstack/react-table';\nimport { VoteStatus } from '../../generated/graphql';\nimport { useVotes, VoteListItem, VotesQuery } from '../../provider/hooks';\nimport { Avatar, Chip, Table, Tabs } from '@nepoche/webb-ui-components/components';\nimport { fuzzyFilter } from '@nepoche/webb-ui-components/components/Filter/utils';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { shortenString } from '@nepoche/webb-ui-components/utils';\nimport { formatDistanceToNow } from 'date-fns';\nimport { FC, useCallback, useMemo, useState } from 'react';\n\nconst columnHelper = createColumnHelper<VoteListItem>();\n\nconst columns: ColumnDef<VoteListItem, any>[] = [\n  columnHelper.accessor('voterId', {\n    header: 'Identity',\n    cell: (props) => (\n      <div className='flex items-center space-x-2'>\n        <Avatar value={props.getValue<string>()} />\n\n        <p>{shortenString(props.getValue<string>(), 10)}</p>\n      </div>\n    ),\n  }),\n\n  columnHelper.accessor('status', {\n    header: 'Vote',\n    cell: (props) => {\n      const vote = props.getValue<VoteStatus | undefined>();\n      switch (vote) {\n        case VoteStatus.Abstain:\n          return <Chip color='blue'>Abstain</Chip>;\n        case VoteStatus.Against:\n          return <Chip color='red'>Against</Chip>;\n        case VoteStatus.For:\n          return <Chip color='green'>For</Chip>;\n        default:\n          return '-';\n      }\n    },\n  }),\n\n  columnHelper.accessor('timestamp', {\n    header: 'Vote at',\n    cell: (props) => formatDistanceToNow(props.getValue<Date>(), { addSuffix: true }),\n  }),\n];\n\ntype ProposersTableProps = {\n  counters: {\n    for: number;\n    against: number;\n    all: number;\n    abstain: number;\n  };\n  proposalId: string;\n};\n\nexport const ProposersTable: FC<ProposersTableProps> = ({ counters, proposalId }) => {\n  const [pagination, setPagination] = useState({\n    pageIndex: 0,\n    pageSize: 10,\n  });\n  const [voteStatus, setVoteStatus] = useState<VoteStatus | undefined>(undefined);\n  const query = useMemo<VotesQuery>(() => {\n    return {\n      filter: {\n        proposalId,\n        status: voteStatus,\n      },\n      offset: pagination.pageSize * pagination.pageIndex,\n      perPage: pagination.pageSize,\n    };\n  }, [pagination, proposalId, voteStatus]);\n  const votes = useVotes(query);\n\n  const tabsValue = useMemo<Array<[VoteStatus | undefined, string]>>(() => {\n    return [\n      [undefined, `All (${counters.all})`],\n      [VoteStatus.For, `For (${counters.for})`],\n      [VoteStatus.Against, `Against (${counters.against})`],\n      [VoteStatus.Abstain, `Abstain (${counters.abstain})`],\n    ];\n  }, [counters]);\n\n  const tabsLabels = useMemo(() => tabsValue.map((i) => i[1]), [tabsValue]);\n  const totalItems = useMemo(() => votes.val?.pageInfo.count ?? 0, [votes]);\n  const pageCount = useMemo(() => Math.ceil(totalItems / pagination.pageSize), [pagination, totalItems]);\n\n  const data = useMemo(() => votes.val?.items ?? [], [votes]);\n\n  const onChange = useCallback(\n    (tab: string) => {\n      const selectedTab = tabsValue.find((item) => item[1] === tab);\n      setVoteStatus(selectedTab?.[0] ?? undefined);\n    },\n    [tabsValue]\n  );\n\n  const table = useReactTable<VoteListItem>({\n    data,\n    columns,\n    pageCount,\n    getCoreRowModel: getCoreRowModel(),\n    state: {\n      pagination,\n    },\n    onPaginationChange: setPagination,\n    manualPagination: true,\n    getFilteredRowModel: getFilteredRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues(),\n    getFacetedMinMaxValues: getFacetedMinMaxValues(),\n    filterFns: {\n      fuzzy: fuzzyFilter,\n    },\n  });\n\n  return (\n    <div>\n      <Typography variant='h5' fw='bold' className='mb-3'>\n        All Proposers\n      </Typography>\n\n      <Tabs onChange={onChange} value={tabsLabels} />\n\n      <Table tableProps={table as RTTable<unknown>} isPaginated totalRecords={totalItems} className='mt-2' />\n    </div>\n  );\n};\n","export * from './ProposersTable';\n","export * from './AuthoritiesTable';\nexport * from './AuthorityDetail';\nexport * from './BridgeInputsShowCase';\nexport * from './DonutChartContainer';\nexport * from './KeyDetail';\nexport * from './KeygenTable';\nexport * from './KeyStatusCardContainer';\nexport * from './Layout';\nexport * from './ProposalDetail';\nexport * from './ProposalsTable';\nexport * from './ProposersTable';\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nconst defaultOptions = {} as const;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  BigFloat: any;\n  BigInt: any;\n  Cursor: any;\n  Date: any;\n  Datetime: any;\n  JSON: any;\n};\n\nexport type Account = Node & {\n  __typename?: 'Account';\n  /** Reads and enables pagination through a set of `Account`. */\n  accountsByCreatorId: AccountsConnection;\n  /** Reads and enables pagination through a set of `Block`. */\n  blocksByAccountCreatorIdAndCreateAtBlockId: AccountBlocksByAccountCreatorIdAndCreateAtBlockIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `Block`. */\n  blocksByExtrinsicSignerIdAndBlockId: AccountBlocksByExtrinsicSignerIdAndBlockIdManyToManyConnection;\n  countryCode?: Maybe<Scalars['String']>;\n  /** Reads a single `Block` that is related to this `Account`. */\n  createAtBlock?: Maybe<Block>;\n  createAtBlockId?: Maybe<Scalars['String']>;\n  createdAt?: Maybe<Scalars['String']>;\n  /** Reads a single `Account` that is related to this `Account`. */\n  creator?: Maybe<Account>;\n  creatorId?: Maybe<Scalars['String']>;\n  display?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n  /** Reads and enables pagination through a set of `Extrinsic`. */\n  extrinsics: ExtrinsicsConnection;\n  id: Scalars['String'];\n  image?: Maybe<Scalars['String']>;\n  legal?: Maybe<Scalars['String']>;\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  pgpFingerprint?: Maybe<Scalars['String']>;\n  /** Reads and enables pagination through a set of `Proposer`. */\n  proposers: ProposersConnection;\n  riot?: Maybe<Scalars['String']>;\n  twitter?: Maybe<Scalars['String']>;\n  /** Reads and enables pagination through a set of `Validator`. */\n  validators: ValidatorsConnection;\n  web?: Maybe<Scalars['String']>;\n};\n\nexport type AccountAccountsByCreatorIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<AccountFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountsOrderBy>>;\n};\n\nexport type AccountBlocksByAccountCreatorIdAndCreateAtBlockIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<BlockFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<BlocksOrderBy>>;\n};\n\nexport type AccountBlocksByExtrinsicSignerIdAndBlockIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<BlockFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<BlocksOrderBy>>;\n};\n\nexport type AccountExtrinsicsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ExtrinsicFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;\n};\n\nexport type AccountProposersArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposersOrderBy>>;\n};\n\nexport type AccountValidatorsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ValidatorFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ValidatorsOrderBy>>;\n};\n\nexport type AccountAggregates = {\n  __typename?: 'AccountAggregates';\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<AccountDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n};\n\n/** A connection to a list of `Block` values, with data from `Account`. */\nexport type AccountBlocksByAccountCreatorIdAndCreateAtBlockIdManyToManyConnection = {\n  __typename?: 'AccountBlocksByAccountCreatorIdAndCreateAtBlockIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<BlockAggregates>;\n  /** A list of edges which contains the `Block`, info from the `Account`, and the cursor to aid in pagination. */\n  edges: Array<AccountBlocksByAccountCreatorIdAndCreateAtBlockIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<BlockAggregates>>;\n  /** A list of `Block` objects. */\n  nodes: Array<Maybe<Block>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Block` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Block` values, with data from `Account`. */\nexport type AccountBlocksByAccountCreatorIdAndCreateAtBlockIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<BlocksGroupBy>;\n  having?: InputMaybe<BlocksHavingInput>;\n};\n\n/** A `Block` edge in the connection, with data from `Account`. */\nexport type AccountBlocksByAccountCreatorIdAndCreateAtBlockIdManyToManyEdge = {\n  __typename?: 'AccountBlocksByAccountCreatorIdAndCreateAtBlockIdManyToManyEdge';\n  /** Reads and enables pagination through a set of `Account`. */\n  accountsByCreateAtBlockId: AccountsConnection;\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Block` at the end of the edge. */\n  node?: Maybe<Block>;\n};\n\n/** A `Block` edge in the connection, with data from `Account`. */\nexport type AccountBlocksByAccountCreatorIdAndCreateAtBlockIdManyToManyEdgeAccountsByCreateAtBlockIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<AccountFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountsOrderBy>>;\n};\n\n/** A connection to a list of `Block` values, with data from `Extrinsic`. */\nexport type AccountBlocksByExtrinsicSignerIdAndBlockIdManyToManyConnection = {\n  __typename?: 'AccountBlocksByExtrinsicSignerIdAndBlockIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<BlockAggregates>;\n  /** A list of edges which contains the `Block`, info from the `Extrinsic`, and the cursor to aid in pagination. */\n  edges: Array<AccountBlocksByExtrinsicSignerIdAndBlockIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<BlockAggregates>>;\n  /** A list of `Block` objects. */\n  nodes: Array<Maybe<Block>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Block` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Block` values, with data from `Extrinsic`. */\nexport type AccountBlocksByExtrinsicSignerIdAndBlockIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<BlocksGroupBy>;\n  having?: InputMaybe<BlocksHavingInput>;\n};\n\n/** A `Block` edge in the connection, with data from `Extrinsic`. */\nexport type AccountBlocksByExtrinsicSignerIdAndBlockIdManyToManyEdge = {\n  __typename?: 'AccountBlocksByExtrinsicSignerIdAndBlockIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** Reads and enables pagination through a set of `Extrinsic`. */\n  extrinsics: ExtrinsicsConnection;\n  /** The `Block` at the end of the edge. */\n  node?: Maybe<Block>;\n};\n\n/** A `Block` edge in the connection, with data from `Extrinsic`. */\nexport type AccountBlocksByExtrinsicSignerIdAndBlockIdManyToManyEdgeExtrinsicsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ExtrinsicFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;\n};\n\nexport type AccountDistinctCountAggregates = {\n  __typename?: 'AccountDistinctCountAggregates';\n  /** Distinct count of countryCode across the matching connection */\n  countryCode?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of createAtBlockId across the matching connection */\n  createAtBlockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of createdAt across the matching connection */\n  createdAt?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of creatorId across the matching connection */\n  creatorId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of display across the matching connection */\n  display?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of email across the matching connection */\n  email?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of image across the matching connection */\n  image?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of legal across the matching connection */\n  legal?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of pgpFingerprint across the matching connection */\n  pgpFingerprint?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of riot across the matching connection */\n  riot?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of twitter across the matching connection */\n  twitter?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of web across the matching connection */\n  web?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `Account` object types. All fields are combined with a logical ‘and.’ */\nexport type AccountFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<AccountFilter>>;\n  /** Filter by the object’s `countryCode` field. */\n  countryCode?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `createAtBlockId` field. */\n  createAtBlockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `createdAt` field. */\n  createdAt?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `creatorId` field. */\n  creatorId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `display` field. */\n  display?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `email` field. */\n  email?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `image` field. */\n  image?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `legal` field. */\n  legal?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<AccountFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<AccountFilter>>;\n  /** Filter by the object’s `pgpFingerprint` field. */\n  pgpFingerprint?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `riot` field. */\n  riot?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `twitter` field. */\n  twitter?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `web` field. */\n  web?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `Account` values. */\nexport type AccountsConnection = {\n  __typename?: 'AccountsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<AccountAggregates>;\n  /** A list of edges which contains the `Account` and cursor to aid in pagination. */\n  edges: Array<AccountsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<AccountAggregates>>;\n  /** A list of `Account` objects. */\n  nodes: Array<Maybe<Account>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Account` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Account` values. */\nexport type AccountsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<AccountsGroupBy>;\n  having?: InputMaybe<AccountsHavingInput>;\n};\n\n/** A `Account` edge in the connection. */\nexport type AccountsEdge = {\n  __typename?: 'AccountsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Account` at the end of the edge. */\n  node?: Maybe<Account>;\n};\n\n/** Grouping methods for `Account` for usage during aggregation. */\nexport enum AccountsGroupBy {\n  CountryCode = 'COUNTRY_CODE',\n  CreatedAt = 'CREATED_AT',\n  CreateAtBlockId = 'CREATE_AT_BLOCK_ID',\n  CreatorId = 'CREATOR_ID',\n  Display = 'DISPLAY',\n  Email = 'EMAIL',\n  Image = 'IMAGE',\n  Legal = 'LEGAL',\n  PgpFingerprint = 'PGP_FINGERPRINT',\n  Riot = 'RIOT',\n  Twitter = 'TWITTER',\n  Web = 'WEB',\n}\n\n/** Conditions for `Account` aggregates. */\nexport type AccountsHavingInput = {\n  AND?: InputMaybe<Array<AccountsHavingInput>>;\n  OR?: InputMaybe<Array<AccountsHavingInput>>;\n};\n\n/** Methods to use when ordering `Account`. */\nexport enum AccountsOrderBy {\n  AccountsByCreatorIdAverageCountryCodeAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_COUNTRY_CODE_ASC',\n  AccountsByCreatorIdAverageCountryCodeDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_COUNTRY_CODE_DESC',\n  AccountsByCreatorIdAverageCreatedAtAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_CREATED_AT_ASC',\n  AccountsByCreatorIdAverageCreatedAtDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_CREATED_AT_DESC',\n  AccountsByCreatorIdAverageCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreatorIdAverageCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreatorIdAverageCreatorIdAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_CREATOR_ID_ASC',\n  AccountsByCreatorIdAverageCreatorIdDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_CREATOR_ID_DESC',\n  AccountsByCreatorIdAverageDisplayAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_DISPLAY_ASC',\n  AccountsByCreatorIdAverageDisplayDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_DISPLAY_DESC',\n  AccountsByCreatorIdAverageEmailAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_EMAIL_ASC',\n  AccountsByCreatorIdAverageEmailDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_EMAIL_DESC',\n  AccountsByCreatorIdAverageIdAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_ID_ASC',\n  AccountsByCreatorIdAverageIdDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_ID_DESC',\n  AccountsByCreatorIdAverageImageAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_IMAGE_ASC',\n  AccountsByCreatorIdAverageImageDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_IMAGE_DESC',\n  AccountsByCreatorIdAverageLegalAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_LEGAL_ASC',\n  AccountsByCreatorIdAverageLegalDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_LEGAL_DESC',\n  AccountsByCreatorIdAveragePgpFingerprintAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_PGP_FINGERPRINT_ASC',\n  AccountsByCreatorIdAveragePgpFingerprintDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_PGP_FINGERPRINT_DESC',\n  AccountsByCreatorIdAverageRiotAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_RIOT_ASC',\n  AccountsByCreatorIdAverageRiotDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_RIOT_DESC',\n  AccountsByCreatorIdAverageTwitterAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_TWITTER_ASC',\n  AccountsByCreatorIdAverageTwitterDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_TWITTER_DESC',\n  AccountsByCreatorIdAverageWebAsc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_WEB_ASC',\n  AccountsByCreatorIdAverageWebDesc = 'ACCOUNTS_BY_CREATOR_ID_AVERAGE_WEB_DESC',\n  AccountsByCreatorIdCountAsc = 'ACCOUNTS_BY_CREATOR_ID_COUNT_ASC',\n  AccountsByCreatorIdCountDesc = 'ACCOUNTS_BY_CREATOR_ID_COUNT_DESC',\n  AccountsByCreatorIdDistinctCountCountryCodeAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_COUNTRY_CODE_ASC',\n  AccountsByCreatorIdDistinctCountCountryCodeDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_COUNTRY_CODE_DESC',\n  AccountsByCreatorIdDistinctCountCreatedAtAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_CREATED_AT_ASC',\n  AccountsByCreatorIdDistinctCountCreatedAtDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_CREATED_AT_DESC',\n  AccountsByCreatorIdDistinctCountCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreatorIdDistinctCountCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreatorIdDistinctCountCreatorIdAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_CREATOR_ID_ASC',\n  AccountsByCreatorIdDistinctCountCreatorIdDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_CREATOR_ID_DESC',\n  AccountsByCreatorIdDistinctCountDisplayAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_DISPLAY_ASC',\n  AccountsByCreatorIdDistinctCountDisplayDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_DISPLAY_DESC',\n  AccountsByCreatorIdDistinctCountEmailAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_EMAIL_ASC',\n  AccountsByCreatorIdDistinctCountEmailDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_EMAIL_DESC',\n  AccountsByCreatorIdDistinctCountIdAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_ID_ASC',\n  AccountsByCreatorIdDistinctCountIdDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_ID_DESC',\n  AccountsByCreatorIdDistinctCountImageAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_IMAGE_ASC',\n  AccountsByCreatorIdDistinctCountImageDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_IMAGE_DESC',\n  AccountsByCreatorIdDistinctCountLegalAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_LEGAL_ASC',\n  AccountsByCreatorIdDistinctCountLegalDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_LEGAL_DESC',\n  AccountsByCreatorIdDistinctCountPgpFingerprintAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_PGP_FINGERPRINT_ASC',\n  AccountsByCreatorIdDistinctCountPgpFingerprintDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_PGP_FINGERPRINT_DESC',\n  AccountsByCreatorIdDistinctCountRiotAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_RIOT_ASC',\n  AccountsByCreatorIdDistinctCountRiotDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_RIOT_DESC',\n  AccountsByCreatorIdDistinctCountTwitterAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_TWITTER_ASC',\n  AccountsByCreatorIdDistinctCountTwitterDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_TWITTER_DESC',\n  AccountsByCreatorIdDistinctCountWebAsc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_WEB_ASC',\n  AccountsByCreatorIdDistinctCountWebDesc = 'ACCOUNTS_BY_CREATOR_ID_DISTINCT_COUNT_WEB_DESC',\n  AccountsByCreatorIdMaxCountryCodeAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_COUNTRY_CODE_ASC',\n  AccountsByCreatorIdMaxCountryCodeDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_COUNTRY_CODE_DESC',\n  AccountsByCreatorIdMaxCreatedAtAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_CREATED_AT_ASC',\n  AccountsByCreatorIdMaxCreatedAtDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_CREATED_AT_DESC',\n  AccountsByCreatorIdMaxCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreatorIdMaxCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreatorIdMaxCreatorIdAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_CREATOR_ID_ASC',\n  AccountsByCreatorIdMaxCreatorIdDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_CREATOR_ID_DESC',\n  AccountsByCreatorIdMaxDisplayAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_DISPLAY_ASC',\n  AccountsByCreatorIdMaxDisplayDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_DISPLAY_DESC',\n  AccountsByCreatorIdMaxEmailAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_EMAIL_ASC',\n  AccountsByCreatorIdMaxEmailDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_EMAIL_DESC',\n  AccountsByCreatorIdMaxIdAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_ID_ASC',\n  AccountsByCreatorIdMaxIdDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_ID_DESC',\n  AccountsByCreatorIdMaxImageAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_IMAGE_ASC',\n  AccountsByCreatorIdMaxImageDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_IMAGE_DESC',\n  AccountsByCreatorIdMaxLegalAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_LEGAL_ASC',\n  AccountsByCreatorIdMaxLegalDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_LEGAL_DESC',\n  AccountsByCreatorIdMaxPgpFingerprintAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_PGP_FINGERPRINT_ASC',\n  AccountsByCreatorIdMaxPgpFingerprintDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_PGP_FINGERPRINT_DESC',\n  AccountsByCreatorIdMaxRiotAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_RIOT_ASC',\n  AccountsByCreatorIdMaxRiotDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_RIOT_DESC',\n  AccountsByCreatorIdMaxTwitterAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_TWITTER_ASC',\n  AccountsByCreatorIdMaxTwitterDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_TWITTER_DESC',\n  AccountsByCreatorIdMaxWebAsc = 'ACCOUNTS_BY_CREATOR_ID_MAX_WEB_ASC',\n  AccountsByCreatorIdMaxWebDesc = 'ACCOUNTS_BY_CREATOR_ID_MAX_WEB_DESC',\n  AccountsByCreatorIdMinCountryCodeAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_COUNTRY_CODE_ASC',\n  AccountsByCreatorIdMinCountryCodeDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_COUNTRY_CODE_DESC',\n  AccountsByCreatorIdMinCreatedAtAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_CREATED_AT_ASC',\n  AccountsByCreatorIdMinCreatedAtDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_CREATED_AT_DESC',\n  AccountsByCreatorIdMinCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreatorIdMinCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreatorIdMinCreatorIdAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_CREATOR_ID_ASC',\n  AccountsByCreatorIdMinCreatorIdDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_CREATOR_ID_DESC',\n  AccountsByCreatorIdMinDisplayAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_DISPLAY_ASC',\n  AccountsByCreatorIdMinDisplayDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_DISPLAY_DESC',\n  AccountsByCreatorIdMinEmailAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_EMAIL_ASC',\n  AccountsByCreatorIdMinEmailDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_EMAIL_DESC',\n  AccountsByCreatorIdMinIdAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_ID_ASC',\n  AccountsByCreatorIdMinIdDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_ID_DESC',\n  AccountsByCreatorIdMinImageAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_IMAGE_ASC',\n  AccountsByCreatorIdMinImageDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_IMAGE_DESC',\n  AccountsByCreatorIdMinLegalAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_LEGAL_ASC',\n  AccountsByCreatorIdMinLegalDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_LEGAL_DESC',\n  AccountsByCreatorIdMinPgpFingerprintAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_PGP_FINGERPRINT_ASC',\n  AccountsByCreatorIdMinPgpFingerprintDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_PGP_FINGERPRINT_DESC',\n  AccountsByCreatorIdMinRiotAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_RIOT_ASC',\n  AccountsByCreatorIdMinRiotDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_RIOT_DESC',\n  AccountsByCreatorIdMinTwitterAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_TWITTER_ASC',\n  AccountsByCreatorIdMinTwitterDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_TWITTER_DESC',\n  AccountsByCreatorIdMinWebAsc = 'ACCOUNTS_BY_CREATOR_ID_MIN_WEB_ASC',\n  AccountsByCreatorIdMinWebDesc = 'ACCOUNTS_BY_CREATOR_ID_MIN_WEB_DESC',\n  AccountsByCreatorIdStddevPopulationCountryCodeAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_COUNTRY_CODE_ASC',\n  AccountsByCreatorIdStddevPopulationCountryCodeDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_COUNTRY_CODE_DESC',\n  AccountsByCreatorIdStddevPopulationCreatedAtAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_CREATED_AT_ASC',\n  AccountsByCreatorIdStddevPopulationCreatedAtDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_CREATED_AT_DESC',\n  AccountsByCreatorIdStddevPopulationCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreatorIdStddevPopulationCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreatorIdStddevPopulationCreatorIdAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_CREATOR_ID_ASC',\n  AccountsByCreatorIdStddevPopulationCreatorIdDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_CREATOR_ID_DESC',\n  AccountsByCreatorIdStddevPopulationDisplayAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_DISPLAY_ASC',\n  AccountsByCreatorIdStddevPopulationDisplayDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_DISPLAY_DESC',\n  AccountsByCreatorIdStddevPopulationEmailAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_EMAIL_ASC',\n  AccountsByCreatorIdStddevPopulationEmailDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_EMAIL_DESC',\n  AccountsByCreatorIdStddevPopulationIdAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_ID_ASC',\n  AccountsByCreatorIdStddevPopulationIdDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_ID_DESC',\n  AccountsByCreatorIdStddevPopulationImageAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_IMAGE_ASC',\n  AccountsByCreatorIdStddevPopulationImageDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_IMAGE_DESC',\n  AccountsByCreatorIdStddevPopulationLegalAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_LEGAL_ASC',\n  AccountsByCreatorIdStddevPopulationLegalDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_LEGAL_DESC',\n  AccountsByCreatorIdStddevPopulationPgpFingerprintAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_PGP_FINGERPRINT_ASC',\n  AccountsByCreatorIdStddevPopulationPgpFingerprintDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_PGP_FINGERPRINT_DESC',\n  AccountsByCreatorIdStddevPopulationRiotAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_RIOT_ASC',\n  AccountsByCreatorIdStddevPopulationRiotDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_RIOT_DESC',\n  AccountsByCreatorIdStddevPopulationTwitterAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_TWITTER_ASC',\n  AccountsByCreatorIdStddevPopulationTwitterDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_TWITTER_DESC',\n  AccountsByCreatorIdStddevPopulationWebAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_WEB_ASC',\n  AccountsByCreatorIdStddevPopulationWebDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_POPULATION_WEB_DESC',\n  AccountsByCreatorIdStddevSampleCountryCodeAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_COUNTRY_CODE_ASC',\n  AccountsByCreatorIdStddevSampleCountryCodeDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_COUNTRY_CODE_DESC',\n  AccountsByCreatorIdStddevSampleCreatedAtAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_CREATED_AT_ASC',\n  AccountsByCreatorIdStddevSampleCreatedAtDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_CREATED_AT_DESC',\n  AccountsByCreatorIdStddevSampleCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreatorIdStddevSampleCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreatorIdStddevSampleCreatorIdAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_CREATOR_ID_ASC',\n  AccountsByCreatorIdStddevSampleCreatorIdDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_CREATOR_ID_DESC',\n  AccountsByCreatorIdStddevSampleDisplayAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_DISPLAY_ASC',\n  AccountsByCreatorIdStddevSampleDisplayDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_DISPLAY_DESC',\n  AccountsByCreatorIdStddevSampleEmailAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_EMAIL_ASC',\n  AccountsByCreatorIdStddevSampleEmailDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_EMAIL_DESC',\n  AccountsByCreatorIdStddevSampleIdAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_ID_ASC',\n  AccountsByCreatorIdStddevSampleIdDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_ID_DESC',\n  AccountsByCreatorIdStddevSampleImageAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_IMAGE_ASC',\n  AccountsByCreatorIdStddevSampleImageDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_IMAGE_DESC',\n  AccountsByCreatorIdStddevSampleLegalAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_LEGAL_ASC',\n  AccountsByCreatorIdStddevSampleLegalDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_LEGAL_DESC',\n  AccountsByCreatorIdStddevSamplePgpFingerprintAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_PGP_FINGERPRINT_ASC',\n  AccountsByCreatorIdStddevSamplePgpFingerprintDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_PGP_FINGERPRINT_DESC',\n  AccountsByCreatorIdStddevSampleRiotAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_RIOT_ASC',\n  AccountsByCreatorIdStddevSampleRiotDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_RIOT_DESC',\n  AccountsByCreatorIdStddevSampleTwitterAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_TWITTER_ASC',\n  AccountsByCreatorIdStddevSampleTwitterDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_TWITTER_DESC',\n  AccountsByCreatorIdStddevSampleWebAsc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_WEB_ASC',\n  AccountsByCreatorIdStddevSampleWebDesc = 'ACCOUNTS_BY_CREATOR_ID_STDDEV_SAMPLE_WEB_DESC',\n  AccountsByCreatorIdSumCountryCodeAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_COUNTRY_CODE_ASC',\n  AccountsByCreatorIdSumCountryCodeDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_COUNTRY_CODE_DESC',\n  AccountsByCreatorIdSumCreatedAtAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_CREATED_AT_ASC',\n  AccountsByCreatorIdSumCreatedAtDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_CREATED_AT_DESC',\n  AccountsByCreatorIdSumCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreatorIdSumCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreatorIdSumCreatorIdAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_CREATOR_ID_ASC',\n  AccountsByCreatorIdSumCreatorIdDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_CREATOR_ID_DESC',\n  AccountsByCreatorIdSumDisplayAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_DISPLAY_ASC',\n  AccountsByCreatorIdSumDisplayDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_DISPLAY_DESC',\n  AccountsByCreatorIdSumEmailAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_EMAIL_ASC',\n  AccountsByCreatorIdSumEmailDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_EMAIL_DESC',\n  AccountsByCreatorIdSumIdAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_ID_ASC',\n  AccountsByCreatorIdSumIdDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_ID_DESC',\n  AccountsByCreatorIdSumImageAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_IMAGE_ASC',\n  AccountsByCreatorIdSumImageDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_IMAGE_DESC',\n  AccountsByCreatorIdSumLegalAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_LEGAL_ASC',\n  AccountsByCreatorIdSumLegalDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_LEGAL_DESC',\n  AccountsByCreatorIdSumPgpFingerprintAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_PGP_FINGERPRINT_ASC',\n  AccountsByCreatorIdSumPgpFingerprintDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_PGP_FINGERPRINT_DESC',\n  AccountsByCreatorIdSumRiotAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_RIOT_ASC',\n  AccountsByCreatorIdSumRiotDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_RIOT_DESC',\n  AccountsByCreatorIdSumTwitterAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_TWITTER_ASC',\n  AccountsByCreatorIdSumTwitterDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_TWITTER_DESC',\n  AccountsByCreatorIdSumWebAsc = 'ACCOUNTS_BY_CREATOR_ID_SUM_WEB_ASC',\n  AccountsByCreatorIdSumWebDesc = 'ACCOUNTS_BY_CREATOR_ID_SUM_WEB_DESC',\n  AccountsByCreatorIdVariancePopulationCountryCodeAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_COUNTRY_CODE_ASC',\n  AccountsByCreatorIdVariancePopulationCountryCodeDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_COUNTRY_CODE_DESC',\n  AccountsByCreatorIdVariancePopulationCreatedAtAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_CREATED_AT_ASC',\n  AccountsByCreatorIdVariancePopulationCreatedAtDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_CREATED_AT_DESC',\n  AccountsByCreatorIdVariancePopulationCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreatorIdVariancePopulationCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreatorIdVariancePopulationCreatorIdAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_CREATOR_ID_ASC',\n  AccountsByCreatorIdVariancePopulationCreatorIdDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_CREATOR_ID_DESC',\n  AccountsByCreatorIdVariancePopulationDisplayAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_DISPLAY_ASC',\n  AccountsByCreatorIdVariancePopulationDisplayDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_DISPLAY_DESC',\n  AccountsByCreatorIdVariancePopulationEmailAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_EMAIL_ASC',\n  AccountsByCreatorIdVariancePopulationEmailDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_EMAIL_DESC',\n  AccountsByCreatorIdVariancePopulationIdAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_ID_ASC',\n  AccountsByCreatorIdVariancePopulationIdDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_ID_DESC',\n  AccountsByCreatorIdVariancePopulationImageAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_IMAGE_ASC',\n  AccountsByCreatorIdVariancePopulationImageDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_IMAGE_DESC',\n  AccountsByCreatorIdVariancePopulationLegalAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_LEGAL_ASC',\n  AccountsByCreatorIdVariancePopulationLegalDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_LEGAL_DESC',\n  AccountsByCreatorIdVariancePopulationPgpFingerprintAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_PGP_FINGERPRINT_ASC',\n  AccountsByCreatorIdVariancePopulationPgpFingerprintDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_PGP_FINGERPRINT_DESC',\n  AccountsByCreatorIdVariancePopulationRiotAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_RIOT_ASC',\n  AccountsByCreatorIdVariancePopulationRiotDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_RIOT_DESC',\n  AccountsByCreatorIdVariancePopulationTwitterAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_TWITTER_ASC',\n  AccountsByCreatorIdVariancePopulationTwitterDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_TWITTER_DESC',\n  AccountsByCreatorIdVariancePopulationWebAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_WEB_ASC',\n  AccountsByCreatorIdVariancePopulationWebDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_POPULATION_WEB_DESC',\n  AccountsByCreatorIdVarianceSampleCountryCodeAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_COUNTRY_CODE_ASC',\n  AccountsByCreatorIdVarianceSampleCountryCodeDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_COUNTRY_CODE_DESC',\n  AccountsByCreatorIdVarianceSampleCreatedAtAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_CREATED_AT_ASC',\n  AccountsByCreatorIdVarianceSampleCreatedAtDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_CREATED_AT_DESC',\n  AccountsByCreatorIdVarianceSampleCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreatorIdVarianceSampleCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreatorIdVarianceSampleCreatorIdAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_CREATOR_ID_ASC',\n  AccountsByCreatorIdVarianceSampleCreatorIdDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_CREATOR_ID_DESC',\n  AccountsByCreatorIdVarianceSampleDisplayAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_DISPLAY_ASC',\n  AccountsByCreatorIdVarianceSampleDisplayDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_DISPLAY_DESC',\n  AccountsByCreatorIdVarianceSampleEmailAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_EMAIL_ASC',\n  AccountsByCreatorIdVarianceSampleEmailDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_EMAIL_DESC',\n  AccountsByCreatorIdVarianceSampleIdAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_ID_ASC',\n  AccountsByCreatorIdVarianceSampleIdDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_ID_DESC',\n  AccountsByCreatorIdVarianceSampleImageAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_IMAGE_ASC',\n  AccountsByCreatorIdVarianceSampleImageDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_IMAGE_DESC',\n  AccountsByCreatorIdVarianceSampleLegalAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_LEGAL_ASC',\n  AccountsByCreatorIdVarianceSampleLegalDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_LEGAL_DESC',\n  AccountsByCreatorIdVarianceSamplePgpFingerprintAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_PGP_FINGERPRINT_ASC',\n  AccountsByCreatorIdVarianceSamplePgpFingerprintDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_PGP_FINGERPRINT_DESC',\n  AccountsByCreatorIdVarianceSampleRiotAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_RIOT_ASC',\n  AccountsByCreatorIdVarianceSampleRiotDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_RIOT_DESC',\n  AccountsByCreatorIdVarianceSampleTwitterAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_TWITTER_ASC',\n  AccountsByCreatorIdVarianceSampleTwitterDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_TWITTER_DESC',\n  AccountsByCreatorIdVarianceSampleWebAsc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_WEB_ASC',\n  AccountsByCreatorIdVarianceSampleWebDesc = 'ACCOUNTS_BY_CREATOR_ID_VARIANCE_SAMPLE_WEB_DESC',\n  CountryCodeAsc = 'COUNTRY_CODE_ASC',\n  CountryCodeDesc = 'COUNTRY_CODE_DESC',\n  CreatedAtAsc = 'CREATED_AT_ASC',\n  CreatedAtDesc = 'CREATED_AT_DESC',\n  CreateAtBlockIdAsc = 'CREATE_AT_BLOCK_ID_ASC',\n  CreateAtBlockIdDesc = 'CREATE_AT_BLOCK_ID_DESC',\n  CreatorIdAsc = 'CREATOR_ID_ASC',\n  CreatorIdDesc = 'CREATOR_ID_DESC',\n  DisplayAsc = 'DISPLAY_ASC',\n  DisplayDesc = 'DISPLAY_DESC',\n  EmailAsc = 'EMAIL_ASC',\n  EmailDesc = 'EMAIL_DESC',\n  ExtrinsicsAverageArgumentsAsc = 'EXTRINSICS_AVERAGE_ARGUMENTS_ASC',\n  ExtrinsicsAverageArgumentsDesc = 'EXTRINSICS_AVERAGE_ARGUMENTS_DESC',\n  ExtrinsicsAverageBlockIdAsc = 'EXTRINSICS_AVERAGE_BLOCK_ID_ASC',\n  ExtrinsicsAverageBlockIdDesc = 'EXTRINSICS_AVERAGE_BLOCK_ID_DESC',\n  ExtrinsicsAverageBlockNumberAsc = 'EXTRINSICS_AVERAGE_BLOCK_NUMBER_ASC',\n  ExtrinsicsAverageBlockNumberDesc = 'EXTRINSICS_AVERAGE_BLOCK_NUMBER_DESC',\n  ExtrinsicsAverageHashAsc = 'EXTRINSICS_AVERAGE_HASH_ASC',\n  ExtrinsicsAverageHashDesc = 'EXTRINSICS_AVERAGE_HASH_DESC',\n  ExtrinsicsAverageIdAsc = 'EXTRINSICS_AVERAGE_ID_ASC',\n  ExtrinsicsAverageIdDesc = 'EXTRINSICS_AVERAGE_ID_DESC',\n  ExtrinsicsAverageIndexAsc = 'EXTRINSICS_AVERAGE_INDEX_ASC',\n  ExtrinsicsAverageIndexDesc = 'EXTRINSICS_AVERAGE_INDEX_DESC',\n  ExtrinsicsAverageIsSignedAsc = 'EXTRINSICS_AVERAGE_IS_SIGNED_ASC',\n  ExtrinsicsAverageIsSignedDesc = 'EXTRINSICS_AVERAGE_IS_SIGNED_DESC',\n  ExtrinsicsAverageIsSuccessAsc = 'EXTRINSICS_AVERAGE_IS_SUCCESS_ASC',\n  ExtrinsicsAverageIsSuccessDesc = 'EXTRINSICS_AVERAGE_IS_SUCCESS_DESC',\n  ExtrinsicsAverageMethodAsc = 'EXTRINSICS_AVERAGE_METHOD_ASC',\n  ExtrinsicsAverageMethodDesc = 'EXTRINSICS_AVERAGE_METHOD_DESC',\n  ExtrinsicsAverageModuleAsc = 'EXTRINSICS_AVERAGE_MODULE_ASC',\n  ExtrinsicsAverageModuleDesc = 'EXTRINSICS_AVERAGE_MODULE_DESC',\n  ExtrinsicsAverageSignerIdAsc = 'EXTRINSICS_AVERAGE_SIGNER_ID_ASC',\n  ExtrinsicsAverageSignerIdDesc = 'EXTRINSICS_AVERAGE_SIGNER_ID_DESC',\n  ExtrinsicsCountAsc = 'EXTRINSICS_COUNT_ASC',\n  ExtrinsicsCountDesc = 'EXTRINSICS_COUNT_DESC',\n  ExtrinsicsDistinctCountArgumentsAsc = 'EXTRINSICS_DISTINCT_COUNT_ARGUMENTS_ASC',\n  ExtrinsicsDistinctCountArgumentsDesc = 'EXTRINSICS_DISTINCT_COUNT_ARGUMENTS_DESC',\n  ExtrinsicsDistinctCountBlockIdAsc = 'EXTRINSICS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  ExtrinsicsDistinctCountBlockIdDesc = 'EXTRINSICS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  ExtrinsicsDistinctCountBlockNumberAsc = 'EXTRINSICS_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  ExtrinsicsDistinctCountBlockNumberDesc = 'EXTRINSICS_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  ExtrinsicsDistinctCountHashAsc = 'EXTRINSICS_DISTINCT_COUNT_HASH_ASC',\n  ExtrinsicsDistinctCountHashDesc = 'EXTRINSICS_DISTINCT_COUNT_HASH_DESC',\n  ExtrinsicsDistinctCountIdAsc = 'EXTRINSICS_DISTINCT_COUNT_ID_ASC',\n  ExtrinsicsDistinctCountIdDesc = 'EXTRINSICS_DISTINCT_COUNT_ID_DESC',\n  ExtrinsicsDistinctCountIndexAsc = 'EXTRINSICS_DISTINCT_COUNT_INDEX_ASC',\n  ExtrinsicsDistinctCountIndexDesc = 'EXTRINSICS_DISTINCT_COUNT_INDEX_DESC',\n  ExtrinsicsDistinctCountIsSignedAsc = 'EXTRINSICS_DISTINCT_COUNT_IS_SIGNED_ASC',\n  ExtrinsicsDistinctCountIsSignedDesc = 'EXTRINSICS_DISTINCT_COUNT_IS_SIGNED_DESC',\n  ExtrinsicsDistinctCountIsSuccessAsc = 'EXTRINSICS_DISTINCT_COUNT_IS_SUCCESS_ASC',\n  ExtrinsicsDistinctCountIsSuccessDesc = 'EXTRINSICS_DISTINCT_COUNT_IS_SUCCESS_DESC',\n  ExtrinsicsDistinctCountMethodAsc = 'EXTRINSICS_DISTINCT_COUNT_METHOD_ASC',\n  ExtrinsicsDistinctCountMethodDesc = 'EXTRINSICS_DISTINCT_COUNT_METHOD_DESC',\n  ExtrinsicsDistinctCountModuleAsc = 'EXTRINSICS_DISTINCT_COUNT_MODULE_ASC',\n  ExtrinsicsDistinctCountModuleDesc = 'EXTRINSICS_DISTINCT_COUNT_MODULE_DESC',\n  ExtrinsicsDistinctCountSignerIdAsc = 'EXTRINSICS_DISTINCT_COUNT_SIGNER_ID_ASC',\n  ExtrinsicsDistinctCountSignerIdDesc = 'EXTRINSICS_DISTINCT_COUNT_SIGNER_ID_DESC',\n  ExtrinsicsMaxArgumentsAsc = 'EXTRINSICS_MAX_ARGUMENTS_ASC',\n  ExtrinsicsMaxArgumentsDesc = 'EXTRINSICS_MAX_ARGUMENTS_DESC',\n  ExtrinsicsMaxBlockIdAsc = 'EXTRINSICS_MAX_BLOCK_ID_ASC',\n  ExtrinsicsMaxBlockIdDesc = 'EXTRINSICS_MAX_BLOCK_ID_DESC',\n  ExtrinsicsMaxBlockNumberAsc = 'EXTRINSICS_MAX_BLOCK_NUMBER_ASC',\n  ExtrinsicsMaxBlockNumberDesc = 'EXTRINSICS_MAX_BLOCK_NUMBER_DESC',\n  ExtrinsicsMaxHashAsc = 'EXTRINSICS_MAX_HASH_ASC',\n  ExtrinsicsMaxHashDesc = 'EXTRINSICS_MAX_HASH_DESC',\n  ExtrinsicsMaxIdAsc = 'EXTRINSICS_MAX_ID_ASC',\n  ExtrinsicsMaxIdDesc = 'EXTRINSICS_MAX_ID_DESC',\n  ExtrinsicsMaxIndexAsc = 'EXTRINSICS_MAX_INDEX_ASC',\n  ExtrinsicsMaxIndexDesc = 'EXTRINSICS_MAX_INDEX_DESC',\n  ExtrinsicsMaxIsSignedAsc = 'EXTRINSICS_MAX_IS_SIGNED_ASC',\n  ExtrinsicsMaxIsSignedDesc = 'EXTRINSICS_MAX_IS_SIGNED_DESC',\n  ExtrinsicsMaxIsSuccessAsc = 'EXTRINSICS_MAX_IS_SUCCESS_ASC',\n  ExtrinsicsMaxIsSuccessDesc = 'EXTRINSICS_MAX_IS_SUCCESS_DESC',\n  ExtrinsicsMaxMethodAsc = 'EXTRINSICS_MAX_METHOD_ASC',\n  ExtrinsicsMaxMethodDesc = 'EXTRINSICS_MAX_METHOD_DESC',\n  ExtrinsicsMaxModuleAsc = 'EXTRINSICS_MAX_MODULE_ASC',\n  ExtrinsicsMaxModuleDesc = 'EXTRINSICS_MAX_MODULE_DESC',\n  ExtrinsicsMaxSignerIdAsc = 'EXTRINSICS_MAX_SIGNER_ID_ASC',\n  ExtrinsicsMaxSignerIdDesc = 'EXTRINSICS_MAX_SIGNER_ID_DESC',\n  ExtrinsicsMinArgumentsAsc = 'EXTRINSICS_MIN_ARGUMENTS_ASC',\n  ExtrinsicsMinArgumentsDesc = 'EXTRINSICS_MIN_ARGUMENTS_DESC',\n  ExtrinsicsMinBlockIdAsc = 'EXTRINSICS_MIN_BLOCK_ID_ASC',\n  ExtrinsicsMinBlockIdDesc = 'EXTRINSICS_MIN_BLOCK_ID_DESC',\n  ExtrinsicsMinBlockNumberAsc = 'EXTRINSICS_MIN_BLOCK_NUMBER_ASC',\n  ExtrinsicsMinBlockNumberDesc = 'EXTRINSICS_MIN_BLOCK_NUMBER_DESC',\n  ExtrinsicsMinHashAsc = 'EXTRINSICS_MIN_HASH_ASC',\n  ExtrinsicsMinHashDesc = 'EXTRINSICS_MIN_HASH_DESC',\n  ExtrinsicsMinIdAsc = 'EXTRINSICS_MIN_ID_ASC',\n  ExtrinsicsMinIdDesc = 'EXTRINSICS_MIN_ID_DESC',\n  ExtrinsicsMinIndexAsc = 'EXTRINSICS_MIN_INDEX_ASC',\n  ExtrinsicsMinIndexDesc = 'EXTRINSICS_MIN_INDEX_DESC',\n  ExtrinsicsMinIsSignedAsc = 'EXTRINSICS_MIN_IS_SIGNED_ASC',\n  ExtrinsicsMinIsSignedDesc = 'EXTRINSICS_MIN_IS_SIGNED_DESC',\n  ExtrinsicsMinIsSuccessAsc = 'EXTRINSICS_MIN_IS_SUCCESS_ASC',\n  ExtrinsicsMinIsSuccessDesc = 'EXTRINSICS_MIN_IS_SUCCESS_DESC',\n  ExtrinsicsMinMethodAsc = 'EXTRINSICS_MIN_METHOD_ASC',\n  ExtrinsicsMinMethodDesc = 'EXTRINSICS_MIN_METHOD_DESC',\n  ExtrinsicsMinModuleAsc = 'EXTRINSICS_MIN_MODULE_ASC',\n  ExtrinsicsMinModuleDesc = 'EXTRINSICS_MIN_MODULE_DESC',\n  ExtrinsicsMinSignerIdAsc = 'EXTRINSICS_MIN_SIGNER_ID_ASC',\n  ExtrinsicsMinSignerIdDesc = 'EXTRINSICS_MIN_SIGNER_ID_DESC',\n  ExtrinsicsStddevPopulationArgumentsAsc = 'EXTRINSICS_STDDEV_POPULATION_ARGUMENTS_ASC',\n  ExtrinsicsStddevPopulationArgumentsDesc = 'EXTRINSICS_STDDEV_POPULATION_ARGUMENTS_DESC',\n  ExtrinsicsStddevPopulationBlockIdAsc = 'EXTRINSICS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  ExtrinsicsStddevPopulationBlockIdDesc = 'EXTRINSICS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  ExtrinsicsStddevPopulationBlockNumberAsc = 'EXTRINSICS_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  ExtrinsicsStddevPopulationBlockNumberDesc = 'EXTRINSICS_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  ExtrinsicsStddevPopulationHashAsc = 'EXTRINSICS_STDDEV_POPULATION_HASH_ASC',\n  ExtrinsicsStddevPopulationHashDesc = 'EXTRINSICS_STDDEV_POPULATION_HASH_DESC',\n  ExtrinsicsStddevPopulationIdAsc = 'EXTRINSICS_STDDEV_POPULATION_ID_ASC',\n  ExtrinsicsStddevPopulationIdDesc = 'EXTRINSICS_STDDEV_POPULATION_ID_DESC',\n  ExtrinsicsStddevPopulationIndexAsc = 'EXTRINSICS_STDDEV_POPULATION_INDEX_ASC',\n  ExtrinsicsStddevPopulationIndexDesc = 'EXTRINSICS_STDDEV_POPULATION_INDEX_DESC',\n  ExtrinsicsStddevPopulationIsSignedAsc = 'EXTRINSICS_STDDEV_POPULATION_IS_SIGNED_ASC',\n  ExtrinsicsStddevPopulationIsSignedDesc = 'EXTRINSICS_STDDEV_POPULATION_IS_SIGNED_DESC',\n  ExtrinsicsStddevPopulationIsSuccessAsc = 'EXTRINSICS_STDDEV_POPULATION_IS_SUCCESS_ASC',\n  ExtrinsicsStddevPopulationIsSuccessDesc = 'EXTRINSICS_STDDEV_POPULATION_IS_SUCCESS_DESC',\n  ExtrinsicsStddevPopulationMethodAsc = 'EXTRINSICS_STDDEV_POPULATION_METHOD_ASC',\n  ExtrinsicsStddevPopulationMethodDesc = 'EXTRINSICS_STDDEV_POPULATION_METHOD_DESC',\n  ExtrinsicsStddevPopulationModuleAsc = 'EXTRINSICS_STDDEV_POPULATION_MODULE_ASC',\n  ExtrinsicsStddevPopulationModuleDesc = 'EXTRINSICS_STDDEV_POPULATION_MODULE_DESC',\n  ExtrinsicsStddevPopulationSignerIdAsc = 'EXTRINSICS_STDDEV_POPULATION_SIGNER_ID_ASC',\n  ExtrinsicsStddevPopulationSignerIdDesc = 'EXTRINSICS_STDDEV_POPULATION_SIGNER_ID_DESC',\n  ExtrinsicsStddevSampleArgumentsAsc = 'EXTRINSICS_STDDEV_SAMPLE_ARGUMENTS_ASC',\n  ExtrinsicsStddevSampleArgumentsDesc = 'EXTRINSICS_STDDEV_SAMPLE_ARGUMENTS_DESC',\n  ExtrinsicsStddevSampleBlockIdAsc = 'EXTRINSICS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  ExtrinsicsStddevSampleBlockIdDesc = 'EXTRINSICS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  ExtrinsicsStddevSampleBlockNumberAsc = 'EXTRINSICS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  ExtrinsicsStddevSampleBlockNumberDesc = 'EXTRINSICS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  ExtrinsicsStddevSampleHashAsc = 'EXTRINSICS_STDDEV_SAMPLE_HASH_ASC',\n  ExtrinsicsStddevSampleHashDesc = 'EXTRINSICS_STDDEV_SAMPLE_HASH_DESC',\n  ExtrinsicsStddevSampleIdAsc = 'EXTRINSICS_STDDEV_SAMPLE_ID_ASC',\n  ExtrinsicsStddevSampleIdDesc = 'EXTRINSICS_STDDEV_SAMPLE_ID_DESC',\n  ExtrinsicsStddevSampleIndexAsc = 'EXTRINSICS_STDDEV_SAMPLE_INDEX_ASC',\n  ExtrinsicsStddevSampleIndexDesc = 'EXTRINSICS_STDDEV_SAMPLE_INDEX_DESC',\n  ExtrinsicsStddevSampleIsSignedAsc = 'EXTRINSICS_STDDEV_SAMPLE_IS_SIGNED_ASC',\n  ExtrinsicsStddevSampleIsSignedDesc = 'EXTRINSICS_STDDEV_SAMPLE_IS_SIGNED_DESC',\n  ExtrinsicsStddevSampleIsSuccessAsc = 'EXTRINSICS_STDDEV_SAMPLE_IS_SUCCESS_ASC',\n  ExtrinsicsStddevSampleIsSuccessDesc = 'EXTRINSICS_STDDEV_SAMPLE_IS_SUCCESS_DESC',\n  ExtrinsicsStddevSampleMethodAsc = 'EXTRINSICS_STDDEV_SAMPLE_METHOD_ASC',\n  ExtrinsicsStddevSampleMethodDesc = 'EXTRINSICS_STDDEV_SAMPLE_METHOD_DESC',\n  ExtrinsicsStddevSampleModuleAsc = 'EXTRINSICS_STDDEV_SAMPLE_MODULE_ASC',\n  ExtrinsicsStddevSampleModuleDesc = 'EXTRINSICS_STDDEV_SAMPLE_MODULE_DESC',\n  ExtrinsicsStddevSampleSignerIdAsc = 'EXTRINSICS_STDDEV_SAMPLE_SIGNER_ID_ASC',\n  ExtrinsicsStddevSampleSignerIdDesc = 'EXTRINSICS_STDDEV_SAMPLE_SIGNER_ID_DESC',\n  ExtrinsicsSumArgumentsAsc = 'EXTRINSICS_SUM_ARGUMENTS_ASC',\n  ExtrinsicsSumArgumentsDesc = 'EXTRINSICS_SUM_ARGUMENTS_DESC',\n  ExtrinsicsSumBlockIdAsc = 'EXTRINSICS_SUM_BLOCK_ID_ASC',\n  ExtrinsicsSumBlockIdDesc = 'EXTRINSICS_SUM_BLOCK_ID_DESC',\n  ExtrinsicsSumBlockNumberAsc = 'EXTRINSICS_SUM_BLOCK_NUMBER_ASC',\n  ExtrinsicsSumBlockNumberDesc = 'EXTRINSICS_SUM_BLOCK_NUMBER_DESC',\n  ExtrinsicsSumHashAsc = 'EXTRINSICS_SUM_HASH_ASC',\n  ExtrinsicsSumHashDesc = 'EXTRINSICS_SUM_HASH_DESC',\n  ExtrinsicsSumIdAsc = 'EXTRINSICS_SUM_ID_ASC',\n  ExtrinsicsSumIdDesc = 'EXTRINSICS_SUM_ID_DESC',\n  ExtrinsicsSumIndexAsc = 'EXTRINSICS_SUM_INDEX_ASC',\n  ExtrinsicsSumIndexDesc = 'EXTRINSICS_SUM_INDEX_DESC',\n  ExtrinsicsSumIsSignedAsc = 'EXTRINSICS_SUM_IS_SIGNED_ASC',\n  ExtrinsicsSumIsSignedDesc = 'EXTRINSICS_SUM_IS_SIGNED_DESC',\n  ExtrinsicsSumIsSuccessAsc = 'EXTRINSICS_SUM_IS_SUCCESS_ASC',\n  ExtrinsicsSumIsSuccessDesc = 'EXTRINSICS_SUM_IS_SUCCESS_DESC',\n  ExtrinsicsSumMethodAsc = 'EXTRINSICS_SUM_METHOD_ASC',\n  ExtrinsicsSumMethodDesc = 'EXTRINSICS_SUM_METHOD_DESC',\n  ExtrinsicsSumModuleAsc = 'EXTRINSICS_SUM_MODULE_ASC',\n  ExtrinsicsSumModuleDesc = 'EXTRINSICS_SUM_MODULE_DESC',\n  ExtrinsicsSumSignerIdAsc = 'EXTRINSICS_SUM_SIGNER_ID_ASC',\n  ExtrinsicsSumSignerIdDesc = 'EXTRINSICS_SUM_SIGNER_ID_DESC',\n  ExtrinsicsVariancePopulationArgumentsAsc = 'EXTRINSICS_VARIANCE_POPULATION_ARGUMENTS_ASC',\n  ExtrinsicsVariancePopulationArgumentsDesc = 'EXTRINSICS_VARIANCE_POPULATION_ARGUMENTS_DESC',\n  ExtrinsicsVariancePopulationBlockIdAsc = 'EXTRINSICS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  ExtrinsicsVariancePopulationBlockIdDesc = 'EXTRINSICS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  ExtrinsicsVariancePopulationBlockNumberAsc = 'EXTRINSICS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  ExtrinsicsVariancePopulationBlockNumberDesc = 'EXTRINSICS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  ExtrinsicsVariancePopulationHashAsc = 'EXTRINSICS_VARIANCE_POPULATION_HASH_ASC',\n  ExtrinsicsVariancePopulationHashDesc = 'EXTRINSICS_VARIANCE_POPULATION_HASH_DESC',\n  ExtrinsicsVariancePopulationIdAsc = 'EXTRINSICS_VARIANCE_POPULATION_ID_ASC',\n  ExtrinsicsVariancePopulationIdDesc = 'EXTRINSICS_VARIANCE_POPULATION_ID_DESC',\n  ExtrinsicsVariancePopulationIndexAsc = 'EXTRINSICS_VARIANCE_POPULATION_INDEX_ASC',\n  ExtrinsicsVariancePopulationIndexDesc = 'EXTRINSICS_VARIANCE_POPULATION_INDEX_DESC',\n  ExtrinsicsVariancePopulationIsSignedAsc = 'EXTRINSICS_VARIANCE_POPULATION_IS_SIGNED_ASC',\n  ExtrinsicsVariancePopulationIsSignedDesc = 'EXTRINSICS_VARIANCE_POPULATION_IS_SIGNED_DESC',\n  ExtrinsicsVariancePopulationIsSuccessAsc = 'EXTRINSICS_VARIANCE_POPULATION_IS_SUCCESS_ASC',\n  ExtrinsicsVariancePopulationIsSuccessDesc = 'EXTRINSICS_VARIANCE_POPULATION_IS_SUCCESS_DESC',\n  ExtrinsicsVariancePopulationMethodAsc = 'EXTRINSICS_VARIANCE_POPULATION_METHOD_ASC',\n  ExtrinsicsVariancePopulationMethodDesc = 'EXTRINSICS_VARIANCE_POPULATION_METHOD_DESC',\n  ExtrinsicsVariancePopulationModuleAsc = 'EXTRINSICS_VARIANCE_POPULATION_MODULE_ASC',\n  ExtrinsicsVariancePopulationModuleDesc = 'EXTRINSICS_VARIANCE_POPULATION_MODULE_DESC',\n  ExtrinsicsVariancePopulationSignerIdAsc = 'EXTRINSICS_VARIANCE_POPULATION_SIGNER_ID_ASC',\n  ExtrinsicsVariancePopulationSignerIdDesc = 'EXTRINSICS_VARIANCE_POPULATION_SIGNER_ID_DESC',\n  ExtrinsicsVarianceSampleArgumentsAsc = 'EXTRINSICS_VARIANCE_SAMPLE_ARGUMENTS_ASC',\n  ExtrinsicsVarianceSampleArgumentsDesc = 'EXTRINSICS_VARIANCE_SAMPLE_ARGUMENTS_DESC',\n  ExtrinsicsVarianceSampleBlockIdAsc = 'EXTRINSICS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  ExtrinsicsVarianceSampleBlockIdDesc = 'EXTRINSICS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  ExtrinsicsVarianceSampleBlockNumberAsc = 'EXTRINSICS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  ExtrinsicsVarianceSampleBlockNumberDesc = 'EXTRINSICS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  ExtrinsicsVarianceSampleHashAsc = 'EXTRINSICS_VARIANCE_SAMPLE_HASH_ASC',\n  ExtrinsicsVarianceSampleHashDesc = 'EXTRINSICS_VARIANCE_SAMPLE_HASH_DESC',\n  ExtrinsicsVarianceSampleIdAsc = 'EXTRINSICS_VARIANCE_SAMPLE_ID_ASC',\n  ExtrinsicsVarianceSampleIdDesc = 'EXTRINSICS_VARIANCE_SAMPLE_ID_DESC',\n  ExtrinsicsVarianceSampleIndexAsc = 'EXTRINSICS_VARIANCE_SAMPLE_INDEX_ASC',\n  ExtrinsicsVarianceSampleIndexDesc = 'EXTRINSICS_VARIANCE_SAMPLE_INDEX_DESC',\n  ExtrinsicsVarianceSampleIsSignedAsc = 'EXTRINSICS_VARIANCE_SAMPLE_IS_SIGNED_ASC',\n  ExtrinsicsVarianceSampleIsSignedDesc = 'EXTRINSICS_VARIANCE_SAMPLE_IS_SIGNED_DESC',\n  ExtrinsicsVarianceSampleIsSuccessAsc = 'EXTRINSICS_VARIANCE_SAMPLE_IS_SUCCESS_ASC',\n  ExtrinsicsVarianceSampleIsSuccessDesc = 'EXTRINSICS_VARIANCE_SAMPLE_IS_SUCCESS_DESC',\n  ExtrinsicsVarianceSampleMethodAsc = 'EXTRINSICS_VARIANCE_SAMPLE_METHOD_ASC',\n  ExtrinsicsVarianceSampleMethodDesc = 'EXTRINSICS_VARIANCE_SAMPLE_METHOD_DESC',\n  ExtrinsicsVarianceSampleModuleAsc = 'EXTRINSICS_VARIANCE_SAMPLE_MODULE_ASC',\n  ExtrinsicsVarianceSampleModuleDesc = 'EXTRINSICS_VARIANCE_SAMPLE_MODULE_DESC',\n  ExtrinsicsVarianceSampleSignerIdAsc = 'EXTRINSICS_VARIANCE_SAMPLE_SIGNER_ID_ASC',\n  ExtrinsicsVarianceSampleSignerIdDesc = 'EXTRINSICS_VARIANCE_SAMPLE_SIGNER_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  ImageAsc = 'IMAGE_ASC',\n  ImageDesc = 'IMAGE_DESC',\n  LegalAsc = 'LEGAL_ASC',\n  LegalDesc = 'LEGAL_DESC',\n  Natural = 'NATURAL',\n  PgpFingerprintAsc = 'PGP_FINGERPRINT_ASC',\n  PgpFingerprintDesc = 'PGP_FINGERPRINT_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ProposersAverageAccountIdAsc = 'PROPOSERS_AVERAGE_ACCOUNT_ID_ASC',\n  ProposersAverageAccountIdDesc = 'PROPOSERS_AVERAGE_ACCOUNT_ID_DESC',\n  ProposersAverageIdAsc = 'PROPOSERS_AVERAGE_ID_ASC',\n  ProposersAverageIdDesc = 'PROPOSERS_AVERAGE_ID_DESC',\n  ProposersCountAsc = 'PROPOSERS_COUNT_ASC',\n  ProposersCountDesc = 'PROPOSERS_COUNT_DESC',\n  ProposersDistinctCountAccountIdAsc = 'PROPOSERS_DISTINCT_COUNT_ACCOUNT_ID_ASC',\n  ProposersDistinctCountAccountIdDesc = 'PROPOSERS_DISTINCT_COUNT_ACCOUNT_ID_DESC',\n  ProposersDistinctCountIdAsc = 'PROPOSERS_DISTINCT_COUNT_ID_ASC',\n  ProposersDistinctCountIdDesc = 'PROPOSERS_DISTINCT_COUNT_ID_DESC',\n  ProposersMaxAccountIdAsc = 'PROPOSERS_MAX_ACCOUNT_ID_ASC',\n  ProposersMaxAccountIdDesc = 'PROPOSERS_MAX_ACCOUNT_ID_DESC',\n  ProposersMaxIdAsc = 'PROPOSERS_MAX_ID_ASC',\n  ProposersMaxIdDesc = 'PROPOSERS_MAX_ID_DESC',\n  ProposersMinAccountIdAsc = 'PROPOSERS_MIN_ACCOUNT_ID_ASC',\n  ProposersMinAccountIdDesc = 'PROPOSERS_MIN_ACCOUNT_ID_DESC',\n  ProposersMinIdAsc = 'PROPOSERS_MIN_ID_ASC',\n  ProposersMinIdDesc = 'PROPOSERS_MIN_ID_DESC',\n  ProposersStddevPopulationAccountIdAsc = 'PROPOSERS_STDDEV_POPULATION_ACCOUNT_ID_ASC',\n  ProposersStddevPopulationAccountIdDesc = 'PROPOSERS_STDDEV_POPULATION_ACCOUNT_ID_DESC',\n  ProposersStddevPopulationIdAsc = 'PROPOSERS_STDDEV_POPULATION_ID_ASC',\n  ProposersStddevPopulationIdDesc = 'PROPOSERS_STDDEV_POPULATION_ID_DESC',\n  ProposersStddevSampleAccountIdAsc = 'PROPOSERS_STDDEV_SAMPLE_ACCOUNT_ID_ASC',\n  ProposersStddevSampleAccountIdDesc = 'PROPOSERS_STDDEV_SAMPLE_ACCOUNT_ID_DESC',\n  ProposersStddevSampleIdAsc = 'PROPOSERS_STDDEV_SAMPLE_ID_ASC',\n  ProposersStddevSampleIdDesc = 'PROPOSERS_STDDEV_SAMPLE_ID_DESC',\n  ProposersSumAccountIdAsc = 'PROPOSERS_SUM_ACCOUNT_ID_ASC',\n  ProposersSumAccountIdDesc = 'PROPOSERS_SUM_ACCOUNT_ID_DESC',\n  ProposersSumIdAsc = 'PROPOSERS_SUM_ID_ASC',\n  ProposersSumIdDesc = 'PROPOSERS_SUM_ID_DESC',\n  ProposersVariancePopulationAccountIdAsc = 'PROPOSERS_VARIANCE_POPULATION_ACCOUNT_ID_ASC',\n  ProposersVariancePopulationAccountIdDesc = 'PROPOSERS_VARIANCE_POPULATION_ACCOUNT_ID_DESC',\n  ProposersVariancePopulationIdAsc = 'PROPOSERS_VARIANCE_POPULATION_ID_ASC',\n  ProposersVariancePopulationIdDesc = 'PROPOSERS_VARIANCE_POPULATION_ID_DESC',\n  ProposersVarianceSampleAccountIdAsc = 'PROPOSERS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC',\n  ProposersVarianceSampleAccountIdDesc = 'PROPOSERS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC',\n  ProposersVarianceSampleIdAsc = 'PROPOSERS_VARIANCE_SAMPLE_ID_ASC',\n  ProposersVarianceSampleIdDesc = 'PROPOSERS_VARIANCE_SAMPLE_ID_DESC',\n  RiotAsc = 'RIOT_ASC',\n  RiotDesc = 'RIOT_DESC',\n  TwitterAsc = 'TWITTER_ASC',\n  TwitterDesc = 'TWITTER_DESC',\n  ValidatorsAverageAccountIdAsc = 'VALIDATORS_AVERAGE_ACCOUNT_ID_ASC',\n  ValidatorsAverageAccountIdDesc = 'VALIDATORS_AVERAGE_ACCOUNT_ID_DESC',\n  ValidatorsAverageAuthorityIdAsc = 'VALIDATORS_AVERAGE_AUTHORITY_ID_ASC',\n  ValidatorsAverageAuthorityIdDesc = 'VALIDATORS_AVERAGE_AUTHORITY_ID_DESC',\n  ValidatorsAverageIdAsc = 'VALIDATORS_AVERAGE_ID_ASC',\n  ValidatorsAverageIdDesc = 'VALIDATORS_AVERAGE_ID_DESC',\n  ValidatorsCountAsc = 'VALIDATORS_COUNT_ASC',\n  ValidatorsCountDesc = 'VALIDATORS_COUNT_DESC',\n  ValidatorsDistinctCountAccountIdAsc = 'VALIDATORS_DISTINCT_COUNT_ACCOUNT_ID_ASC',\n  ValidatorsDistinctCountAccountIdDesc = 'VALIDATORS_DISTINCT_COUNT_ACCOUNT_ID_DESC',\n  ValidatorsDistinctCountAuthorityIdAsc = 'VALIDATORS_DISTINCT_COUNT_AUTHORITY_ID_ASC',\n  ValidatorsDistinctCountAuthorityIdDesc = 'VALIDATORS_DISTINCT_COUNT_AUTHORITY_ID_DESC',\n  ValidatorsDistinctCountIdAsc = 'VALIDATORS_DISTINCT_COUNT_ID_ASC',\n  ValidatorsDistinctCountIdDesc = 'VALIDATORS_DISTINCT_COUNT_ID_DESC',\n  ValidatorsMaxAccountIdAsc = 'VALIDATORS_MAX_ACCOUNT_ID_ASC',\n  ValidatorsMaxAccountIdDesc = 'VALIDATORS_MAX_ACCOUNT_ID_DESC',\n  ValidatorsMaxAuthorityIdAsc = 'VALIDATORS_MAX_AUTHORITY_ID_ASC',\n  ValidatorsMaxAuthorityIdDesc = 'VALIDATORS_MAX_AUTHORITY_ID_DESC',\n  ValidatorsMaxIdAsc = 'VALIDATORS_MAX_ID_ASC',\n  ValidatorsMaxIdDesc = 'VALIDATORS_MAX_ID_DESC',\n  ValidatorsMinAccountIdAsc = 'VALIDATORS_MIN_ACCOUNT_ID_ASC',\n  ValidatorsMinAccountIdDesc = 'VALIDATORS_MIN_ACCOUNT_ID_DESC',\n  ValidatorsMinAuthorityIdAsc = 'VALIDATORS_MIN_AUTHORITY_ID_ASC',\n  ValidatorsMinAuthorityIdDesc = 'VALIDATORS_MIN_AUTHORITY_ID_DESC',\n  ValidatorsMinIdAsc = 'VALIDATORS_MIN_ID_ASC',\n  ValidatorsMinIdDesc = 'VALIDATORS_MIN_ID_DESC',\n  ValidatorsStddevPopulationAccountIdAsc = 'VALIDATORS_STDDEV_POPULATION_ACCOUNT_ID_ASC',\n  ValidatorsStddevPopulationAccountIdDesc = 'VALIDATORS_STDDEV_POPULATION_ACCOUNT_ID_DESC',\n  ValidatorsStddevPopulationAuthorityIdAsc = 'VALIDATORS_STDDEV_POPULATION_AUTHORITY_ID_ASC',\n  ValidatorsStddevPopulationAuthorityIdDesc = 'VALIDATORS_STDDEV_POPULATION_AUTHORITY_ID_DESC',\n  ValidatorsStddevPopulationIdAsc = 'VALIDATORS_STDDEV_POPULATION_ID_ASC',\n  ValidatorsStddevPopulationIdDesc = 'VALIDATORS_STDDEV_POPULATION_ID_DESC',\n  ValidatorsStddevSampleAccountIdAsc = 'VALIDATORS_STDDEV_SAMPLE_ACCOUNT_ID_ASC',\n  ValidatorsStddevSampleAccountIdDesc = 'VALIDATORS_STDDEV_SAMPLE_ACCOUNT_ID_DESC',\n  ValidatorsStddevSampleAuthorityIdAsc = 'VALIDATORS_STDDEV_SAMPLE_AUTHORITY_ID_ASC',\n  ValidatorsStddevSampleAuthorityIdDesc = 'VALIDATORS_STDDEV_SAMPLE_AUTHORITY_ID_DESC',\n  ValidatorsStddevSampleIdAsc = 'VALIDATORS_STDDEV_SAMPLE_ID_ASC',\n  ValidatorsStddevSampleIdDesc = 'VALIDATORS_STDDEV_SAMPLE_ID_DESC',\n  ValidatorsSumAccountIdAsc = 'VALIDATORS_SUM_ACCOUNT_ID_ASC',\n  ValidatorsSumAccountIdDesc = 'VALIDATORS_SUM_ACCOUNT_ID_DESC',\n  ValidatorsSumAuthorityIdAsc = 'VALIDATORS_SUM_AUTHORITY_ID_ASC',\n  ValidatorsSumAuthorityIdDesc = 'VALIDATORS_SUM_AUTHORITY_ID_DESC',\n  ValidatorsSumIdAsc = 'VALIDATORS_SUM_ID_ASC',\n  ValidatorsSumIdDesc = 'VALIDATORS_SUM_ID_DESC',\n  ValidatorsVariancePopulationAccountIdAsc = 'VALIDATORS_VARIANCE_POPULATION_ACCOUNT_ID_ASC',\n  ValidatorsVariancePopulationAccountIdDesc = 'VALIDATORS_VARIANCE_POPULATION_ACCOUNT_ID_DESC',\n  ValidatorsVariancePopulationAuthorityIdAsc = 'VALIDATORS_VARIANCE_POPULATION_AUTHORITY_ID_ASC',\n  ValidatorsVariancePopulationAuthorityIdDesc = 'VALIDATORS_VARIANCE_POPULATION_AUTHORITY_ID_DESC',\n  ValidatorsVariancePopulationIdAsc = 'VALIDATORS_VARIANCE_POPULATION_ID_ASC',\n  ValidatorsVariancePopulationIdDesc = 'VALIDATORS_VARIANCE_POPULATION_ID_DESC',\n  ValidatorsVarianceSampleAccountIdAsc = 'VALIDATORS_VARIANCE_SAMPLE_ACCOUNT_ID_ASC',\n  ValidatorsVarianceSampleAccountIdDesc = 'VALIDATORS_VARIANCE_SAMPLE_ACCOUNT_ID_DESC',\n  ValidatorsVarianceSampleAuthorityIdAsc = 'VALIDATORS_VARIANCE_SAMPLE_AUTHORITY_ID_ASC',\n  ValidatorsVarianceSampleAuthorityIdDesc = 'VALIDATORS_VARIANCE_SAMPLE_AUTHORITY_ID_DESC',\n  ValidatorsVarianceSampleIdAsc = 'VALIDATORS_VARIANCE_SAMPLE_ID_ASC',\n  ValidatorsVarianceSampleIdDesc = 'VALIDATORS_VARIANCE_SAMPLE_ID_DESC',\n  WebAsc = 'WEB_ASC',\n  WebDesc = 'WEB_DESC',\n}\n\n/** A connection to a list of `Authority` values. */\nexport type AuthoritiesConnection = {\n  __typename?: 'AuthoritiesConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<AuthorityAggregates>;\n  /** A list of edges which contains the `Authority` and cursor to aid in pagination. */\n  edges: Array<AuthoritiesEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<AuthorityAggregates>>;\n  /** A list of `Authority` objects. */\n  nodes: Array<Maybe<Authority>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Authority` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Authority` values. */\nexport type AuthoritiesConnectionGroupedAggregatesArgs = {\n  groupBy: Array<AuthoritiesGroupBy>;\n  having?: InputMaybe<AuthoritiesHavingInput>;\n};\n\n/** A `Authority` edge in the connection. */\nexport type AuthoritiesEdge = {\n  __typename?: 'AuthoritiesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Authority` at the end of the edge. */\n  node?: Maybe<Authority>;\n};\n\n/** Grouping methods for `Authority` for usage during aggregation. */\nexport enum AuthoritiesGroupBy {\n  BlockId = 'BLOCK_ID',\n  Current = 'CURRENT',\n  Next = 'NEXT',\n}\n\n/** Conditions for `Authority` aggregates. */\nexport type AuthoritiesHavingInput = {\n  AND?: InputMaybe<Array<AuthoritiesHavingInput>>;\n  OR?: InputMaybe<Array<AuthoritiesHavingInput>>;\n};\n\n/** Methods to use when ordering `Authority`. */\nexport enum AuthoritiesOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  CurrentAsc = 'CURRENT_ASC',\n  CurrentDesc = 'CURRENT_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  NextAsc = 'NEXT_ASC',\n  NextDesc = 'NEXT_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n}\n\nexport type Authority = Node & {\n  __typename?: 'Authority';\n  /** Reads a single `Block` that is related to this `Authority`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  current?: Maybe<Scalars['JSON']>;\n  id: Scalars['String'];\n  next?: Maybe<Scalars['JSON']>;\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n};\n\nexport type AuthorityAggregates = {\n  __typename?: 'AuthorityAggregates';\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<AuthorityDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n};\n\nexport type AuthorityDistinctCountAggregates = {\n  __typename?: 'AuthorityDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of current across the matching connection */\n  current?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of next across the matching connection */\n  next?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `Authority` object types. All fields are combined with a logical ‘and.’ */\nexport type AuthorityFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<AuthorityFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `current` field. */\n  current?: InputMaybe<JsonFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `next` field. */\n  next?: InputMaybe<JsonFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<AuthorityFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<AuthorityFilter>>;\n};\n\n/** A filter to be used against BigFloat fields. All fields are combined with a logical ‘and.’ */\nexport type BigFloatFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<Scalars['BigFloat']>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<Scalars['BigFloat']>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<Scalars['BigFloat']>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<Scalars['BigFloat']>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<Scalars['BigFloat']>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<Scalars['BigFloat']>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<Scalars['BigFloat']>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<Scalars['BigFloat']>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<Scalars['BigFloat']>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<Scalars['BigFloat']>>;\n};\n\nexport type Block = Node & {\n  __typename?: 'Block';\n  /** Reads and enables pagination through a set of `Account`. */\n  accountsByAccountCreateAtBlockIdAndCreatorId: BlockAccountsByAccountCreateAtBlockIdAndCreatorIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `Account`. */\n  accountsByCreateAtBlockId: AccountsConnection;\n  /** Reads and enables pagination through a set of `Account`. */\n  accountsByExtrinsicBlockIdAndSignerId: BlockAccountsByExtrinsicBlockIdAndSignerIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `Authority`. */\n  authorities: AuthoritiesConnection;\n  /** Reads and enables pagination through a set of `Event`. */\n  events: EventsConnection;\n  /** Reads and enables pagination through a set of `Extrinsic`. */\n  extrinsics: ExtrinsicsConnection;\n  /** Reads and enables pagination through a set of `Extrinsic`. */\n  extrinsicsByEventBlockIdAndExtrinsicId: BlockExtrinsicsByEventBlockIdAndExtrinsicIdManyToManyConnection;\n  extrinsicsRoot?: Maybe<Scalars['String']>;\n  hash?: Maybe<Scalars['String']>;\n  id: Scalars['String'];\n  /** Reads and enables pagination through a set of `KeygenThreshold`. */\n  keygenThresholds: KeygenThresholdsConnection;\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  number: Scalars['BigFloat'];\n  parentHash?: Maybe<Scalars['String']>;\n  /** Reads and enables pagination through a set of `ProposalCounter`. */\n  proposalCounters: ProposalCountersConnection;\n  /** Reads and enables pagination through a set of `ProposalItem`. */\n  proposalItems: ProposalItemsConnection;\n  /** Reads and enables pagination through a set of `ProposalItem`. */\n  proposalItemsByProposalVoteBlockIdAndProposalId: BlockProposalItemsByProposalVoteBlockIdAndProposalIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  proposalVotes: ProposalVotesConnection;\n  /** Reads and enables pagination through a set of `ProposerThreshold`. */\n  proposerThresholds: ProposerThresholdsConnection;\n  /** Reads and enables pagination through a set of `Proposer`. */\n  proposersByProposalVoteBlockIdAndVoterId: BlockProposersByProposalVoteBlockIdAndVoterIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `PublicKey`. */\n  publicKeys: PublicKeysConnection;\n  /** Reads and enables pagination through a set of `PublicKey`. */\n  publicKeysBySessionBlockIdAndPublicKeyId: BlockPublicKeysBySessionBlockIdAndPublicKeyIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `Session`. */\n  sessions: SessionsConnection;\n  /** Reads and enables pagination through a set of `SignatureThreshold`. */\n  signatureThresholds: SignatureThresholdsConnection;\n  specVersion?: Maybe<Scalars['String']>;\n  stateRoot?: Maybe<Scalars['String']>;\n  timestamp?: Maybe<Scalars['Datetime']>;\n  /** Reads and enables pagination through a set of `UnsignedProposalsQueue`. */\n  unsignedProposalsQueues: UnsignedProposalsQueuesConnection;\n};\n\nexport type BlockAccountsByAccountCreateAtBlockIdAndCreatorIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<AccountFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountsOrderBy>>;\n};\n\nexport type BlockAccountsByCreateAtBlockIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<AccountFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountsOrderBy>>;\n};\n\nexport type BlockAccountsByExtrinsicBlockIdAndSignerIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<AccountFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountsOrderBy>>;\n};\n\nexport type BlockAuthoritiesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<AuthorityFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AuthoritiesOrderBy>>;\n};\n\nexport type BlockEventsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<EventFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<EventsOrderBy>>;\n};\n\nexport type BlockExtrinsicsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ExtrinsicFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;\n};\n\nexport type BlockExtrinsicsByEventBlockIdAndExtrinsicIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ExtrinsicFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;\n};\n\nexport type BlockKeygenThresholdsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<KeygenThresholdFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<KeygenThresholdsOrderBy>>;\n};\n\nexport type BlockProposalCountersArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalCounterFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalCountersOrderBy>>;\n};\n\nexport type BlockProposalItemsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalItemFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalItemsOrderBy>>;\n};\n\nexport type BlockProposalItemsByProposalVoteBlockIdAndProposalIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalItemFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalItemsOrderBy>>;\n};\n\nexport type BlockProposalVotesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\nexport type BlockProposerThresholdsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposerThresholdFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposerThresholdsOrderBy>>;\n};\n\nexport type BlockProposersByProposalVoteBlockIdAndVoterIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposersOrderBy>>;\n};\n\nexport type BlockPublicKeysArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<PublicKeyFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<PublicKeysOrderBy>>;\n};\n\nexport type BlockPublicKeysBySessionBlockIdAndPublicKeyIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<PublicKeyFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<PublicKeysOrderBy>>;\n};\n\nexport type BlockSessionsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionsOrderBy>>;\n};\n\nexport type BlockSignatureThresholdsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SignatureThresholdFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SignatureThresholdsOrderBy>>;\n};\n\nexport type BlockUnsignedProposalsQueuesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<UnsignedProposalsQueueFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<UnsignedProposalsQueuesOrderBy>>;\n};\n\n/** A connection to a list of `Account` values, with data from `Account`. */\nexport type BlockAccountsByAccountCreateAtBlockIdAndCreatorIdManyToManyConnection = {\n  __typename?: 'BlockAccountsByAccountCreateAtBlockIdAndCreatorIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<AccountAggregates>;\n  /** A list of edges which contains the `Account`, info from the `Account`, and the cursor to aid in pagination. */\n  edges: Array<BlockAccountsByAccountCreateAtBlockIdAndCreatorIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<AccountAggregates>>;\n  /** A list of `Account` objects. */\n  nodes: Array<Maybe<Account>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Account` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Account` values, with data from `Account`. */\nexport type BlockAccountsByAccountCreateAtBlockIdAndCreatorIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<AccountsGroupBy>;\n  having?: InputMaybe<AccountsHavingInput>;\n};\n\n/** A `Account` edge in the connection, with data from `Account`. */\nexport type BlockAccountsByAccountCreateAtBlockIdAndCreatorIdManyToManyEdge = {\n  __typename?: 'BlockAccountsByAccountCreateAtBlockIdAndCreatorIdManyToManyEdge';\n  /** Reads and enables pagination through a set of `Account`. */\n  accountsByCreatorId: AccountsConnection;\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Account` at the end of the edge. */\n  node?: Maybe<Account>;\n};\n\n/** A `Account` edge in the connection, with data from `Account`. */\nexport type BlockAccountsByAccountCreateAtBlockIdAndCreatorIdManyToManyEdgeAccountsByCreatorIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<AccountFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountsOrderBy>>;\n};\n\n/** A connection to a list of `Account` values, with data from `Extrinsic`. */\nexport type BlockAccountsByExtrinsicBlockIdAndSignerIdManyToManyConnection = {\n  __typename?: 'BlockAccountsByExtrinsicBlockIdAndSignerIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<AccountAggregates>;\n  /** A list of edges which contains the `Account`, info from the `Extrinsic`, and the cursor to aid in pagination. */\n  edges: Array<BlockAccountsByExtrinsicBlockIdAndSignerIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<AccountAggregates>>;\n  /** A list of `Account` objects. */\n  nodes: Array<Maybe<Account>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Account` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Account` values, with data from `Extrinsic`. */\nexport type BlockAccountsByExtrinsicBlockIdAndSignerIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<AccountsGroupBy>;\n  having?: InputMaybe<AccountsHavingInput>;\n};\n\n/** A `Account` edge in the connection, with data from `Extrinsic`. */\nexport type BlockAccountsByExtrinsicBlockIdAndSignerIdManyToManyEdge = {\n  __typename?: 'BlockAccountsByExtrinsicBlockIdAndSignerIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** Reads and enables pagination through a set of `Extrinsic`. */\n  extrinsics: ExtrinsicsConnection;\n  /** The `Account` at the end of the edge. */\n  node?: Maybe<Account>;\n};\n\n/** A `Account` edge in the connection, with data from `Extrinsic`. */\nexport type BlockAccountsByExtrinsicBlockIdAndSignerIdManyToManyEdgeExtrinsicsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ExtrinsicFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;\n};\n\nexport type BlockAggregates = {\n  __typename?: 'BlockAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<BlockAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<BlockDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<BlockMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<BlockMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<BlockStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<BlockStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<BlockSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<BlockVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<BlockVarianceSampleAggregates>;\n};\n\nexport type BlockAverageAggregates = {\n  __typename?: 'BlockAverageAggregates';\n  /** Mean average of number across the matching connection */\n  number?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type BlockDistinctCountAggregates = {\n  __typename?: 'BlockDistinctCountAggregates';\n  /** Distinct count of extrinsicsRoot across the matching connection */\n  extrinsicsRoot?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of hash across the matching connection */\n  hash?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of number across the matching connection */\n  number?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of parentHash across the matching connection */\n  parentHash?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of specVersion across the matching connection */\n  specVersion?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of stateRoot across the matching connection */\n  stateRoot?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of timestamp across the matching connection */\n  timestamp?: Maybe<Scalars['BigInt']>;\n};\n\n/** A connection to a list of `Extrinsic` values, with data from `Event`. */\nexport type BlockExtrinsicsByEventBlockIdAndExtrinsicIdManyToManyConnection = {\n  __typename?: 'BlockExtrinsicsByEventBlockIdAndExtrinsicIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ExtrinsicAggregates>;\n  /** A list of edges which contains the `Extrinsic`, info from the `Event`, and the cursor to aid in pagination. */\n  edges: Array<BlockExtrinsicsByEventBlockIdAndExtrinsicIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ExtrinsicAggregates>>;\n  /** A list of `Extrinsic` objects. */\n  nodes: Array<Maybe<Extrinsic>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Extrinsic` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Extrinsic` values, with data from `Event`. */\nexport type BlockExtrinsicsByEventBlockIdAndExtrinsicIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ExtrinsicsGroupBy>;\n  having?: InputMaybe<ExtrinsicsHavingInput>;\n};\n\n/** A `Extrinsic` edge in the connection, with data from `Event`. */\nexport type BlockExtrinsicsByEventBlockIdAndExtrinsicIdManyToManyEdge = {\n  __typename?: 'BlockExtrinsicsByEventBlockIdAndExtrinsicIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** Reads and enables pagination through a set of `Event`. */\n  events: EventsConnection;\n  /** The `Extrinsic` at the end of the edge. */\n  node?: Maybe<Extrinsic>;\n};\n\n/** A `Extrinsic` edge in the connection, with data from `Event`. */\nexport type BlockExtrinsicsByEventBlockIdAndExtrinsicIdManyToManyEdgeEventsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<EventFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<EventsOrderBy>>;\n};\n\n/** A filter to be used against `Block` object types. All fields are combined with a logical ‘and.’ */\nexport type BlockFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<BlockFilter>>;\n  /** Filter by the object’s `extrinsicsRoot` field. */\n  extrinsicsRoot?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `hash` field. */\n  hash?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<BlockFilter>;\n  /** Filter by the object’s `number` field. */\n  number?: InputMaybe<BigFloatFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<BlockFilter>>;\n  /** Filter by the object’s `parentHash` field. */\n  parentHash?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `specVersion` field. */\n  specVersion?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `stateRoot` field. */\n  stateRoot?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `timestamp` field. */\n  timestamp?: InputMaybe<DatetimeFilter>;\n};\n\nexport type BlockMaxAggregates = {\n  __typename?: 'BlockMaxAggregates';\n  /** Maximum of number across the matching connection */\n  number?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type BlockMinAggregates = {\n  __typename?: 'BlockMinAggregates';\n  /** Minimum of number across the matching connection */\n  number?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `ProposalItem` values, with data from `ProposalVote`. */\nexport type BlockProposalItemsByProposalVoteBlockIdAndProposalIdManyToManyConnection = {\n  __typename?: 'BlockProposalItemsByProposalVoteBlockIdAndProposalIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposalItemAggregates>;\n  /** A list of edges which contains the `ProposalItem`, info from the `ProposalVote`, and the cursor to aid in pagination. */\n  edges: Array<BlockProposalItemsByProposalVoteBlockIdAndProposalIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposalItemAggregates>>;\n  /** A list of `ProposalItem` objects. */\n  nodes: Array<Maybe<ProposalItem>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ProposalItem` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `ProposalItem` values, with data from `ProposalVote`. */\nexport type BlockProposalItemsByProposalVoteBlockIdAndProposalIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposalItemsGroupBy>;\n  having?: InputMaybe<ProposalItemsHavingInput>;\n};\n\n/** A `ProposalItem` edge in the connection, with data from `ProposalVote`. */\nexport type BlockProposalItemsByProposalVoteBlockIdAndProposalIdManyToManyEdge = {\n  __typename?: 'BlockProposalItemsByProposalVoteBlockIdAndProposalIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `ProposalItem` at the end of the edge. */\n  node?: Maybe<ProposalItem>;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  proposalVotesByProposalId: ProposalVotesConnection;\n};\n\n/** A `ProposalItem` edge in the connection, with data from `ProposalVote`. */\nexport type BlockProposalItemsByProposalVoteBlockIdAndProposalIdManyToManyEdgeProposalVotesByProposalIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\n/** A connection to a list of `Proposer` values, with data from `ProposalVote`. */\nexport type BlockProposersByProposalVoteBlockIdAndVoterIdManyToManyConnection = {\n  __typename?: 'BlockProposersByProposalVoteBlockIdAndVoterIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposerAggregates>;\n  /** A list of edges which contains the `Proposer`, info from the `ProposalVote`, and the cursor to aid in pagination. */\n  edges: Array<BlockProposersByProposalVoteBlockIdAndVoterIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposerAggregates>>;\n  /** A list of `Proposer` objects. */\n  nodes: Array<Maybe<Proposer>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Proposer` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Proposer` values, with data from `ProposalVote`. */\nexport type BlockProposersByProposalVoteBlockIdAndVoterIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposersGroupBy>;\n  having?: InputMaybe<ProposersHavingInput>;\n};\n\n/** A `Proposer` edge in the connection, with data from `ProposalVote`. */\nexport type BlockProposersByProposalVoteBlockIdAndVoterIdManyToManyEdge = {\n  __typename?: 'BlockProposersByProposalVoteBlockIdAndVoterIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Proposer` at the end of the edge. */\n  node?: Maybe<Proposer>;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  votes: ProposalVotesConnection;\n};\n\n/** A `Proposer` edge in the connection, with data from `ProposalVote`. */\nexport type BlockProposersByProposalVoteBlockIdAndVoterIdManyToManyEdgeVotesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\n/** A connection to a list of `PublicKey` values, with data from `Session`. */\nexport type BlockPublicKeysBySessionBlockIdAndPublicKeyIdManyToManyConnection = {\n  __typename?: 'BlockPublicKeysBySessionBlockIdAndPublicKeyIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<PublicKeyAggregates>;\n  /** A list of edges which contains the `PublicKey`, info from the `Session`, and the cursor to aid in pagination. */\n  edges: Array<BlockPublicKeysBySessionBlockIdAndPublicKeyIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<PublicKeyAggregates>>;\n  /** A list of `PublicKey` objects. */\n  nodes: Array<Maybe<PublicKey>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `PublicKey` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `PublicKey` values, with data from `Session`. */\nexport type BlockPublicKeysBySessionBlockIdAndPublicKeyIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<PublicKeysGroupBy>;\n  having?: InputMaybe<PublicKeysHavingInput>;\n};\n\n/** A `PublicKey` edge in the connection, with data from `Session`. */\nexport type BlockPublicKeysBySessionBlockIdAndPublicKeyIdManyToManyEdge = {\n  __typename?: 'BlockPublicKeysBySessionBlockIdAndPublicKeyIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `PublicKey` at the end of the edge. */\n  node?: Maybe<PublicKey>;\n  /** Reads and enables pagination through a set of `Session`. */\n  sessions: SessionsConnection;\n};\n\n/** A `PublicKey` edge in the connection, with data from `Session`. */\nexport type BlockPublicKeysBySessionBlockIdAndPublicKeyIdManyToManyEdgeSessionsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionsOrderBy>>;\n};\n\nexport type BlockStddevPopulationAggregates = {\n  __typename?: 'BlockStddevPopulationAggregates';\n  /** Population standard deviation of number across the matching connection */\n  number?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type BlockStddevSampleAggregates = {\n  __typename?: 'BlockStddevSampleAggregates';\n  /** Sample standard deviation of number across the matching connection */\n  number?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type BlockSumAggregates = {\n  __typename?: 'BlockSumAggregates';\n  /** Sum of number across the matching connection */\n  number: Scalars['BigFloat'];\n};\n\nexport type BlockVariancePopulationAggregates = {\n  __typename?: 'BlockVariancePopulationAggregates';\n  /** Population variance of number across the matching connection */\n  number?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type BlockVarianceSampleAggregates = {\n  __typename?: 'BlockVarianceSampleAggregates';\n  /** Sample variance of number across the matching connection */\n  number?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `Block` values. */\nexport type BlocksConnection = {\n  __typename?: 'BlocksConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<BlockAggregates>;\n  /** A list of edges which contains the `Block` and cursor to aid in pagination. */\n  edges: Array<BlocksEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<BlockAggregates>>;\n  /** A list of `Block` objects. */\n  nodes: Array<Maybe<Block>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Block` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Block` values. */\nexport type BlocksConnectionGroupedAggregatesArgs = {\n  groupBy: Array<BlocksGroupBy>;\n  having?: InputMaybe<BlocksHavingInput>;\n};\n\n/** A `Block` edge in the connection. */\nexport type BlocksEdge = {\n  __typename?: 'BlocksEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Block` at the end of the edge. */\n  node?: Maybe<Block>;\n};\n\n/** Grouping methods for `Block` for usage during aggregation. */\nexport enum BlocksGroupBy {\n  ExtrinsicsRoot = 'EXTRINSICS_ROOT',\n  Hash = 'HASH',\n  ParentHash = 'PARENT_HASH',\n  SpecVersion = 'SPEC_VERSION',\n  StateRoot = 'STATE_ROOT',\n  Timestamp = 'TIMESTAMP',\n  TimestampTruncatedToDay = 'TIMESTAMP_TRUNCATED_TO_DAY',\n  TimestampTruncatedToHour = 'TIMESTAMP_TRUNCATED_TO_HOUR',\n}\n\nexport type BlocksHavingAverageInput = {\n  number?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type BlocksHavingDistinctCountInput = {\n  number?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\n/** Conditions for `Block` aggregates. */\nexport type BlocksHavingInput = {\n  AND?: InputMaybe<Array<BlocksHavingInput>>;\n  OR?: InputMaybe<Array<BlocksHavingInput>>;\n  average?: InputMaybe<BlocksHavingAverageInput>;\n  distinctCount?: InputMaybe<BlocksHavingDistinctCountInput>;\n  max?: InputMaybe<BlocksHavingMaxInput>;\n  min?: InputMaybe<BlocksHavingMinInput>;\n  stddevPopulation?: InputMaybe<BlocksHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<BlocksHavingStddevSampleInput>;\n  sum?: InputMaybe<BlocksHavingSumInput>;\n  variancePopulation?: InputMaybe<BlocksHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<BlocksHavingVarianceSampleInput>;\n};\n\nexport type BlocksHavingMaxInput = {\n  number?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type BlocksHavingMinInput = {\n  number?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type BlocksHavingStddevPopulationInput = {\n  number?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type BlocksHavingStddevSampleInput = {\n  number?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type BlocksHavingSumInput = {\n  number?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type BlocksHavingVariancePopulationInput = {\n  number?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type BlocksHavingVarianceSampleInput = {\n  number?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\n/** Methods to use when ordering `Block`. */\nexport enum BlocksOrderBy {\n  AccountsByCreateAtBlockIdAverageCountryCodeAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_COUNTRY_CODE_ASC',\n  AccountsByCreateAtBlockIdAverageCountryCodeDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_COUNTRY_CODE_DESC',\n  AccountsByCreateAtBlockIdAverageCreatedAtAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_CREATED_AT_ASC',\n  AccountsByCreateAtBlockIdAverageCreatedAtDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_CREATED_AT_DESC',\n  AccountsByCreateAtBlockIdAverageCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreateAtBlockIdAverageCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreateAtBlockIdAverageCreatorIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_CREATOR_ID_ASC',\n  AccountsByCreateAtBlockIdAverageCreatorIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_CREATOR_ID_DESC',\n  AccountsByCreateAtBlockIdAverageDisplayAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_DISPLAY_ASC',\n  AccountsByCreateAtBlockIdAverageDisplayDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_DISPLAY_DESC',\n  AccountsByCreateAtBlockIdAverageEmailAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_EMAIL_ASC',\n  AccountsByCreateAtBlockIdAverageEmailDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_EMAIL_DESC',\n  AccountsByCreateAtBlockIdAverageIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_ID_ASC',\n  AccountsByCreateAtBlockIdAverageIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_ID_DESC',\n  AccountsByCreateAtBlockIdAverageImageAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_IMAGE_ASC',\n  AccountsByCreateAtBlockIdAverageImageDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_IMAGE_DESC',\n  AccountsByCreateAtBlockIdAverageLegalAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_LEGAL_ASC',\n  AccountsByCreateAtBlockIdAverageLegalDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_LEGAL_DESC',\n  AccountsByCreateAtBlockIdAveragePgpFingerprintAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_PGP_FINGERPRINT_ASC',\n  AccountsByCreateAtBlockIdAveragePgpFingerprintDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_PGP_FINGERPRINT_DESC',\n  AccountsByCreateAtBlockIdAverageRiotAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_RIOT_ASC',\n  AccountsByCreateAtBlockIdAverageRiotDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_RIOT_DESC',\n  AccountsByCreateAtBlockIdAverageTwitterAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_TWITTER_ASC',\n  AccountsByCreateAtBlockIdAverageTwitterDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_TWITTER_DESC',\n  AccountsByCreateAtBlockIdAverageWebAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_WEB_ASC',\n  AccountsByCreateAtBlockIdAverageWebDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_AVERAGE_WEB_DESC',\n  AccountsByCreateAtBlockIdCountAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_COUNT_ASC',\n  AccountsByCreateAtBlockIdCountDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_COUNT_DESC',\n  AccountsByCreateAtBlockIdDistinctCountCountryCodeAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_COUNTRY_CODE_ASC',\n  AccountsByCreateAtBlockIdDistinctCountCountryCodeDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_COUNTRY_CODE_DESC',\n  AccountsByCreateAtBlockIdDistinctCountCreatedAtAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_CREATED_AT_ASC',\n  AccountsByCreateAtBlockIdDistinctCountCreatedAtDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_CREATED_AT_DESC',\n  AccountsByCreateAtBlockIdDistinctCountCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreateAtBlockIdDistinctCountCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreateAtBlockIdDistinctCountCreatorIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_CREATOR_ID_ASC',\n  AccountsByCreateAtBlockIdDistinctCountCreatorIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_CREATOR_ID_DESC',\n  AccountsByCreateAtBlockIdDistinctCountDisplayAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_DISPLAY_ASC',\n  AccountsByCreateAtBlockIdDistinctCountDisplayDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_DISPLAY_DESC',\n  AccountsByCreateAtBlockIdDistinctCountEmailAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_EMAIL_ASC',\n  AccountsByCreateAtBlockIdDistinctCountEmailDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_EMAIL_DESC',\n  AccountsByCreateAtBlockIdDistinctCountIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_ID_ASC',\n  AccountsByCreateAtBlockIdDistinctCountIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_ID_DESC',\n  AccountsByCreateAtBlockIdDistinctCountImageAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_IMAGE_ASC',\n  AccountsByCreateAtBlockIdDistinctCountImageDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_IMAGE_DESC',\n  AccountsByCreateAtBlockIdDistinctCountLegalAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_LEGAL_ASC',\n  AccountsByCreateAtBlockIdDistinctCountLegalDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_LEGAL_DESC',\n  AccountsByCreateAtBlockIdDistinctCountPgpFingerprintAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_PGP_FINGERPRINT_ASC',\n  AccountsByCreateAtBlockIdDistinctCountPgpFingerprintDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_PGP_FINGERPRINT_DESC',\n  AccountsByCreateAtBlockIdDistinctCountRiotAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_RIOT_ASC',\n  AccountsByCreateAtBlockIdDistinctCountRiotDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_RIOT_DESC',\n  AccountsByCreateAtBlockIdDistinctCountTwitterAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_TWITTER_ASC',\n  AccountsByCreateAtBlockIdDistinctCountTwitterDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_TWITTER_DESC',\n  AccountsByCreateAtBlockIdDistinctCountWebAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_WEB_ASC',\n  AccountsByCreateAtBlockIdDistinctCountWebDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_DISTINCT_COUNT_WEB_DESC',\n  AccountsByCreateAtBlockIdMaxCountryCodeAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_COUNTRY_CODE_ASC',\n  AccountsByCreateAtBlockIdMaxCountryCodeDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_COUNTRY_CODE_DESC',\n  AccountsByCreateAtBlockIdMaxCreatedAtAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_CREATED_AT_ASC',\n  AccountsByCreateAtBlockIdMaxCreatedAtDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_CREATED_AT_DESC',\n  AccountsByCreateAtBlockIdMaxCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreateAtBlockIdMaxCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreateAtBlockIdMaxCreatorIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_CREATOR_ID_ASC',\n  AccountsByCreateAtBlockIdMaxCreatorIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_CREATOR_ID_DESC',\n  AccountsByCreateAtBlockIdMaxDisplayAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_DISPLAY_ASC',\n  AccountsByCreateAtBlockIdMaxDisplayDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_DISPLAY_DESC',\n  AccountsByCreateAtBlockIdMaxEmailAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_EMAIL_ASC',\n  AccountsByCreateAtBlockIdMaxEmailDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_EMAIL_DESC',\n  AccountsByCreateAtBlockIdMaxIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_ID_ASC',\n  AccountsByCreateAtBlockIdMaxIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_ID_DESC',\n  AccountsByCreateAtBlockIdMaxImageAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_IMAGE_ASC',\n  AccountsByCreateAtBlockIdMaxImageDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_IMAGE_DESC',\n  AccountsByCreateAtBlockIdMaxLegalAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_LEGAL_ASC',\n  AccountsByCreateAtBlockIdMaxLegalDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_LEGAL_DESC',\n  AccountsByCreateAtBlockIdMaxPgpFingerprintAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_PGP_FINGERPRINT_ASC',\n  AccountsByCreateAtBlockIdMaxPgpFingerprintDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_PGP_FINGERPRINT_DESC',\n  AccountsByCreateAtBlockIdMaxRiotAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_RIOT_ASC',\n  AccountsByCreateAtBlockIdMaxRiotDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_RIOT_DESC',\n  AccountsByCreateAtBlockIdMaxTwitterAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_TWITTER_ASC',\n  AccountsByCreateAtBlockIdMaxTwitterDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_TWITTER_DESC',\n  AccountsByCreateAtBlockIdMaxWebAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_WEB_ASC',\n  AccountsByCreateAtBlockIdMaxWebDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MAX_WEB_DESC',\n  AccountsByCreateAtBlockIdMinCountryCodeAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_COUNTRY_CODE_ASC',\n  AccountsByCreateAtBlockIdMinCountryCodeDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_COUNTRY_CODE_DESC',\n  AccountsByCreateAtBlockIdMinCreatedAtAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_CREATED_AT_ASC',\n  AccountsByCreateAtBlockIdMinCreatedAtDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_CREATED_AT_DESC',\n  AccountsByCreateAtBlockIdMinCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreateAtBlockIdMinCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreateAtBlockIdMinCreatorIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_CREATOR_ID_ASC',\n  AccountsByCreateAtBlockIdMinCreatorIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_CREATOR_ID_DESC',\n  AccountsByCreateAtBlockIdMinDisplayAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_DISPLAY_ASC',\n  AccountsByCreateAtBlockIdMinDisplayDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_DISPLAY_DESC',\n  AccountsByCreateAtBlockIdMinEmailAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_EMAIL_ASC',\n  AccountsByCreateAtBlockIdMinEmailDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_EMAIL_DESC',\n  AccountsByCreateAtBlockIdMinIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_ID_ASC',\n  AccountsByCreateAtBlockIdMinIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_ID_DESC',\n  AccountsByCreateAtBlockIdMinImageAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_IMAGE_ASC',\n  AccountsByCreateAtBlockIdMinImageDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_IMAGE_DESC',\n  AccountsByCreateAtBlockIdMinLegalAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_LEGAL_ASC',\n  AccountsByCreateAtBlockIdMinLegalDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_LEGAL_DESC',\n  AccountsByCreateAtBlockIdMinPgpFingerprintAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_PGP_FINGERPRINT_ASC',\n  AccountsByCreateAtBlockIdMinPgpFingerprintDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_PGP_FINGERPRINT_DESC',\n  AccountsByCreateAtBlockIdMinRiotAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_RIOT_ASC',\n  AccountsByCreateAtBlockIdMinRiotDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_RIOT_DESC',\n  AccountsByCreateAtBlockIdMinTwitterAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_TWITTER_ASC',\n  AccountsByCreateAtBlockIdMinTwitterDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_TWITTER_DESC',\n  AccountsByCreateAtBlockIdMinWebAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_WEB_ASC',\n  AccountsByCreateAtBlockIdMinWebDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_MIN_WEB_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationCountryCodeAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_COUNTRY_CODE_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationCountryCodeDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_COUNTRY_CODE_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationCreatedAtAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_CREATED_AT_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationCreatedAtDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_CREATED_AT_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationCreatorIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_CREATOR_ID_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationCreatorIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_CREATOR_ID_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationDisplayAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_DISPLAY_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationDisplayDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_DISPLAY_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationEmailAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_EMAIL_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationEmailDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_EMAIL_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_ID_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_ID_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationImageAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_IMAGE_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationImageDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_IMAGE_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationLegalAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_LEGAL_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationLegalDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_LEGAL_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationPgpFingerprintAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_PGP_FINGERPRINT_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationPgpFingerprintDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_PGP_FINGERPRINT_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationRiotAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_RIOT_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationRiotDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_RIOT_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationTwitterAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_TWITTER_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationTwitterDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_TWITTER_DESC',\n  AccountsByCreateAtBlockIdStddevPopulationWebAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_WEB_ASC',\n  AccountsByCreateAtBlockIdStddevPopulationWebDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_POPULATION_WEB_DESC',\n  AccountsByCreateAtBlockIdStddevSampleCountryCodeAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_COUNTRY_CODE_ASC',\n  AccountsByCreateAtBlockIdStddevSampleCountryCodeDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_COUNTRY_CODE_DESC',\n  AccountsByCreateAtBlockIdStddevSampleCreatedAtAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_CREATED_AT_ASC',\n  AccountsByCreateAtBlockIdStddevSampleCreatedAtDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_CREATED_AT_DESC',\n  AccountsByCreateAtBlockIdStddevSampleCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreateAtBlockIdStddevSampleCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreateAtBlockIdStddevSampleCreatorIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_CREATOR_ID_ASC',\n  AccountsByCreateAtBlockIdStddevSampleCreatorIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_CREATOR_ID_DESC',\n  AccountsByCreateAtBlockIdStddevSampleDisplayAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_DISPLAY_ASC',\n  AccountsByCreateAtBlockIdStddevSampleDisplayDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_DISPLAY_DESC',\n  AccountsByCreateAtBlockIdStddevSampleEmailAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_EMAIL_ASC',\n  AccountsByCreateAtBlockIdStddevSampleEmailDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_EMAIL_DESC',\n  AccountsByCreateAtBlockIdStddevSampleIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_ID_ASC',\n  AccountsByCreateAtBlockIdStddevSampleIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_ID_DESC',\n  AccountsByCreateAtBlockIdStddevSampleImageAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_IMAGE_ASC',\n  AccountsByCreateAtBlockIdStddevSampleImageDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_IMAGE_DESC',\n  AccountsByCreateAtBlockIdStddevSampleLegalAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_LEGAL_ASC',\n  AccountsByCreateAtBlockIdStddevSampleLegalDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_LEGAL_DESC',\n  AccountsByCreateAtBlockIdStddevSamplePgpFingerprintAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_PGP_FINGERPRINT_ASC',\n  AccountsByCreateAtBlockIdStddevSamplePgpFingerprintDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_PGP_FINGERPRINT_DESC',\n  AccountsByCreateAtBlockIdStddevSampleRiotAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_RIOT_ASC',\n  AccountsByCreateAtBlockIdStddevSampleRiotDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_RIOT_DESC',\n  AccountsByCreateAtBlockIdStddevSampleTwitterAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_TWITTER_ASC',\n  AccountsByCreateAtBlockIdStddevSampleTwitterDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_TWITTER_DESC',\n  AccountsByCreateAtBlockIdStddevSampleWebAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_WEB_ASC',\n  AccountsByCreateAtBlockIdStddevSampleWebDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_STDDEV_SAMPLE_WEB_DESC',\n  AccountsByCreateAtBlockIdSumCountryCodeAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_COUNTRY_CODE_ASC',\n  AccountsByCreateAtBlockIdSumCountryCodeDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_COUNTRY_CODE_DESC',\n  AccountsByCreateAtBlockIdSumCreatedAtAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_CREATED_AT_ASC',\n  AccountsByCreateAtBlockIdSumCreatedAtDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_CREATED_AT_DESC',\n  AccountsByCreateAtBlockIdSumCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreateAtBlockIdSumCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreateAtBlockIdSumCreatorIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_CREATOR_ID_ASC',\n  AccountsByCreateAtBlockIdSumCreatorIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_CREATOR_ID_DESC',\n  AccountsByCreateAtBlockIdSumDisplayAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_DISPLAY_ASC',\n  AccountsByCreateAtBlockIdSumDisplayDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_DISPLAY_DESC',\n  AccountsByCreateAtBlockIdSumEmailAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_EMAIL_ASC',\n  AccountsByCreateAtBlockIdSumEmailDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_EMAIL_DESC',\n  AccountsByCreateAtBlockIdSumIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_ID_ASC',\n  AccountsByCreateAtBlockIdSumIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_ID_DESC',\n  AccountsByCreateAtBlockIdSumImageAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_IMAGE_ASC',\n  AccountsByCreateAtBlockIdSumImageDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_IMAGE_DESC',\n  AccountsByCreateAtBlockIdSumLegalAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_LEGAL_ASC',\n  AccountsByCreateAtBlockIdSumLegalDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_LEGAL_DESC',\n  AccountsByCreateAtBlockIdSumPgpFingerprintAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_PGP_FINGERPRINT_ASC',\n  AccountsByCreateAtBlockIdSumPgpFingerprintDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_PGP_FINGERPRINT_DESC',\n  AccountsByCreateAtBlockIdSumRiotAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_RIOT_ASC',\n  AccountsByCreateAtBlockIdSumRiotDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_RIOT_DESC',\n  AccountsByCreateAtBlockIdSumTwitterAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_TWITTER_ASC',\n  AccountsByCreateAtBlockIdSumTwitterDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_TWITTER_DESC',\n  AccountsByCreateAtBlockIdSumWebAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_WEB_ASC',\n  AccountsByCreateAtBlockIdSumWebDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_SUM_WEB_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationCountryCodeAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_COUNTRY_CODE_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationCountryCodeDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_COUNTRY_CODE_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationCreatedAtAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_CREATED_AT_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationCreatedAtDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_CREATED_AT_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationCreatorIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_CREATOR_ID_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationCreatorIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_CREATOR_ID_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationDisplayAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_DISPLAY_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationDisplayDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_DISPLAY_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationEmailAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_EMAIL_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationEmailDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_EMAIL_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_ID_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_ID_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationImageAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_IMAGE_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationImageDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_IMAGE_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationLegalAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_LEGAL_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationLegalDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_LEGAL_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationPgpFingerprintAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_PGP_FINGERPRINT_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationPgpFingerprintDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_PGP_FINGERPRINT_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationRiotAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_RIOT_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationRiotDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_RIOT_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationTwitterAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_TWITTER_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationTwitterDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_TWITTER_DESC',\n  AccountsByCreateAtBlockIdVariancePopulationWebAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_WEB_ASC',\n  AccountsByCreateAtBlockIdVariancePopulationWebDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_POPULATION_WEB_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleCountryCodeAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_COUNTRY_CODE_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleCountryCodeDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_COUNTRY_CODE_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleCreatedAtAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_CREATED_AT_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleCreatedAtDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_CREATED_AT_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleCreateAtBlockIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_CREATE_AT_BLOCK_ID_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleCreateAtBlockIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_CREATE_AT_BLOCK_ID_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleCreatorIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_CREATOR_ID_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleCreatorIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_CREATOR_ID_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleDisplayAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_DISPLAY_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleDisplayDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_DISPLAY_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleEmailAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_EMAIL_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleEmailDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_EMAIL_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleIdAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_ID_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleIdDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_ID_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleImageAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_IMAGE_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleImageDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_IMAGE_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleLegalAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_LEGAL_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleLegalDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_LEGAL_DESC',\n  AccountsByCreateAtBlockIdVarianceSamplePgpFingerprintAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_PGP_FINGERPRINT_ASC',\n  AccountsByCreateAtBlockIdVarianceSamplePgpFingerprintDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_PGP_FINGERPRINT_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleRiotAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_RIOT_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleRiotDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_RIOT_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleTwitterAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_TWITTER_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleTwitterDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_TWITTER_DESC',\n  AccountsByCreateAtBlockIdVarianceSampleWebAsc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_WEB_ASC',\n  AccountsByCreateAtBlockIdVarianceSampleWebDesc = 'ACCOUNTS_BY_CREATE_AT_BLOCK_ID_VARIANCE_SAMPLE_WEB_DESC',\n  AuthoritiesAverageBlockIdAsc = 'AUTHORITIES_AVERAGE_BLOCK_ID_ASC',\n  AuthoritiesAverageBlockIdDesc = 'AUTHORITIES_AVERAGE_BLOCK_ID_DESC',\n  AuthoritiesAverageCurrentAsc = 'AUTHORITIES_AVERAGE_CURRENT_ASC',\n  AuthoritiesAverageCurrentDesc = 'AUTHORITIES_AVERAGE_CURRENT_DESC',\n  AuthoritiesAverageIdAsc = 'AUTHORITIES_AVERAGE_ID_ASC',\n  AuthoritiesAverageIdDesc = 'AUTHORITIES_AVERAGE_ID_DESC',\n  AuthoritiesAverageNextAsc = 'AUTHORITIES_AVERAGE_NEXT_ASC',\n  AuthoritiesAverageNextDesc = 'AUTHORITIES_AVERAGE_NEXT_DESC',\n  AuthoritiesCountAsc = 'AUTHORITIES_COUNT_ASC',\n  AuthoritiesCountDesc = 'AUTHORITIES_COUNT_DESC',\n  AuthoritiesDistinctCountBlockIdAsc = 'AUTHORITIES_DISTINCT_COUNT_BLOCK_ID_ASC',\n  AuthoritiesDistinctCountBlockIdDesc = 'AUTHORITIES_DISTINCT_COUNT_BLOCK_ID_DESC',\n  AuthoritiesDistinctCountCurrentAsc = 'AUTHORITIES_DISTINCT_COUNT_CURRENT_ASC',\n  AuthoritiesDistinctCountCurrentDesc = 'AUTHORITIES_DISTINCT_COUNT_CURRENT_DESC',\n  AuthoritiesDistinctCountIdAsc = 'AUTHORITIES_DISTINCT_COUNT_ID_ASC',\n  AuthoritiesDistinctCountIdDesc = 'AUTHORITIES_DISTINCT_COUNT_ID_DESC',\n  AuthoritiesDistinctCountNextAsc = 'AUTHORITIES_DISTINCT_COUNT_NEXT_ASC',\n  AuthoritiesDistinctCountNextDesc = 'AUTHORITIES_DISTINCT_COUNT_NEXT_DESC',\n  AuthoritiesMaxBlockIdAsc = 'AUTHORITIES_MAX_BLOCK_ID_ASC',\n  AuthoritiesMaxBlockIdDesc = 'AUTHORITIES_MAX_BLOCK_ID_DESC',\n  AuthoritiesMaxCurrentAsc = 'AUTHORITIES_MAX_CURRENT_ASC',\n  AuthoritiesMaxCurrentDesc = 'AUTHORITIES_MAX_CURRENT_DESC',\n  AuthoritiesMaxIdAsc = 'AUTHORITIES_MAX_ID_ASC',\n  AuthoritiesMaxIdDesc = 'AUTHORITIES_MAX_ID_DESC',\n  AuthoritiesMaxNextAsc = 'AUTHORITIES_MAX_NEXT_ASC',\n  AuthoritiesMaxNextDesc = 'AUTHORITIES_MAX_NEXT_DESC',\n  AuthoritiesMinBlockIdAsc = 'AUTHORITIES_MIN_BLOCK_ID_ASC',\n  AuthoritiesMinBlockIdDesc = 'AUTHORITIES_MIN_BLOCK_ID_DESC',\n  AuthoritiesMinCurrentAsc = 'AUTHORITIES_MIN_CURRENT_ASC',\n  AuthoritiesMinCurrentDesc = 'AUTHORITIES_MIN_CURRENT_DESC',\n  AuthoritiesMinIdAsc = 'AUTHORITIES_MIN_ID_ASC',\n  AuthoritiesMinIdDesc = 'AUTHORITIES_MIN_ID_DESC',\n  AuthoritiesMinNextAsc = 'AUTHORITIES_MIN_NEXT_ASC',\n  AuthoritiesMinNextDesc = 'AUTHORITIES_MIN_NEXT_DESC',\n  AuthoritiesStddevPopulationBlockIdAsc = 'AUTHORITIES_STDDEV_POPULATION_BLOCK_ID_ASC',\n  AuthoritiesStddevPopulationBlockIdDesc = 'AUTHORITIES_STDDEV_POPULATION_BLOCK_ID_DESC',\n  AuthoritiesStddevPopulationCurrentAsc = 'AUTHORITIES_STDDEV_POPULATION_CURRENT_ASC',\n  AuthoritiesStddevPopulationCurrentDesc = 'AUTHORITIES_STDDEV_POPULATION_CURRENT_DESC',\n  AuthoritiesStddevPopulationIdAsc = 'AUTHORITIES_STDDEV_POPULATION_ID_ASC',\n  AuthoritiesStddevPopulationIdDesc = 'AUTHORITIES_STDDEV_POPULATION_ID_DESC',\n  AuthoritiesStddevPopulationNextAsc = 'AUTHORITIES_STDDEV_POPULATION_NEXT_ASC',\n  AuthoritiesStddevPopulationNextDesc = 'AUTHORITIES_STDDEV_POPULATION_NEXT_DESC',\n  AuthoritiesStddevSampleBlockIdAsc = 'AUTHORITIES_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  AuthoritiesStddevSampleBlockIdDesc = 'AUTHORITIES_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  AuthoritiesStddevSampleCurrentAsc = 'AUTHORITIES_STDDEV_SAMPLE_CURRENT_ASC',\n  AuthoritiesStddevSampleCurrentDesc = 'AUTHORITIES_STDDEV_SAMPLE_CURRENT_DESC',\n  AuthoritiesStddevSampleIdAsc = 'AUTHORITIES_STDDEV_SAMPLE_ID_ASC',\n  AuthoritiesStddevSampleIdDesc = 'AUTHORITIES_STDDEV_SAMPLE_ID_DESC',\n  AuthoritiesStddevSampleNextAsc = 'AUTHORITIES_STDDEV_SAMPLE_NEXT_ASC',\n  AuthoritiesStddevSampleNextDesc = 'AUTHORITIES_STDDEV_SAMPLE_NEXT_DESC',\n  AuthoritiesSumBlockIdAsc = 'AUTHORITIES_SUM_BLOCK_ID_ASC',\n  AuthoritiesSumBlockIdDesc = 'AUTHORITIES_SUM_BLOCK_ID_DESC',\n  AuthoritiesSumCurrentAsc = 'AUTHORITIES_SUM_CURRENT_ASC',\n  AuthoritiesSumCurrentDesc = 'AUTHORITIES_SUM_CURRENT_DESC',\n  AuthoritiesSumIdAsc = 'AUTHORITIES_SUM_ID_ASC',\n  AuthoritiesSumIdDesc = 'AUTHORITIES_SUM_ID_DESC',\n  AuthoritiesSumNextAsc = 'AUTHORITIES_SUM_NEXT_ASC',\n  AuthoritiesSumNextDesc = 'AUTHORITIES_SUM_NEXT_DESC',\n  AuthoritiesVariancePopulationBlockIdAsc = 'AUTHORITIES_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  AuthoritiesVariancePopulationBlockIdDesc = 'AUTHORITIES_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  AuthoritiesVariancePopulationCurrentAsc = 'AUTHORITIES_VARIANCE_POPULATION_CURRENT_ASC',\n  AuthoritiesVariancePopulationCurrentDesc = 'AUTHORITIES_VARIANCE_POPULATION_CURRENT_DESC',\n  AuthoritiesVariancePopulationIdAsc = 'AUTHORITIES_VARIANCE_POPULATION_ID_ASC',\n  AuthoritiesVariancePopulationIdDesc = 'AUTHORITIES_VARIANCE_POPULATION_ID_DESC',\n  AuthoritiesVariancePopulationNextAsc = 'AUTHORITIES_VARIANCE_POPULATION_NEXT_ASC',\n  AuthoritiesVariancePopulationNextDesc = 'AUTHORITIES_VARIANCE_POPULATION_NEXT_DESC',\n  AuthoritiesVarianceSampleBlockIdAsc = 'AUTHORITIES_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  AuthoritiesVarianceSampleBlockIdDesc = 'AUTHORITIES_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  AuthoritiesVarianceSampleCurrentAsc = 'AUTHORITIES_VARIANCE_SAMPLE_CURRENT_ASC',\n  AuthoritiesVarianceSampleCurrentDesc = 'AUTHORITIES_VARIANCE_SAMPLE_CURRENT_DESC',\n  AuthoritiesVarianceSampleIdAsc = 'AUTHORITIES_VARIANCE_SAMPLE_ID_ASC',\n  AuthoritiesVarianceSampleIdDesc = 'AUTHORITIES_VARIANCE_SAMPLE_ID_DESC',\n  AuthoritiesVarianceSampleNextAsc = 'AUTHORITIES_VARIANCE_SAMPLE_NEXT_ASC',\n  AuthoritiesVarianceSampleNextDesc = 'AUTHORITIES_VARIANCE_SAMPLE_NEXT_DESC',\n  EventsAverageArgumentsAsc = 'EVENTS_AVERAGE_ARGUMENTS_ASC',\n  EventsAverageArgumentsDesc = 'EVENTS_AVERAGE_ARGUMENTS_DESC',\n  EventsAverageBlockIdAsc = 'EVENTS_AVERAGE_BLOCK_ID_ASC',\n  EventsAverageBlockIdDesc = 'EVENTS_AVERAGE_BLOCK_ID_DESC',\n  EventsAverageBlockNumberAsc = 'EVENTS_AVERAGE_BLOCK_NUMBER_ASC',\n  EventsAverageBlockNumberDesc = 'EVENTS_AVERAGE_BLOCK_NUMBER_DESC',\n  EventsAverageDataAsc = 'EVENTS_AVERAGE_DATA_ASC',\n  EventsAverageDataDesc = 'EVENTS_AVERAGE_DATA_DESC',\n  EventsAverageDocsAsc = 'EVENTS_AVERAGE_DOCS_ASC',\n  EventsAverageDocsDesc = 'EVENTS_AVERAGE_DOCS_DESC',\n  EventsAverageExtrinsicIdAsc = 'EVENTS_AVERAGE_EXTRINSIC_ID_ASC',\n  EventsAverageExtrinsicIdDesc = 'EVENTS_AVERAGE_EXTRINSIC_ID_DESC',\n  EventsAverageIdAsc = 'EVENTS_AVERAGE_ID_ASC',\n  EventsAverageIdDesc = 'EVENTS_AVERAGE_ID_DESC',\n  EventsAverageIndexAsc = 'EVENTS_AVERAGE_INDEX_ASC',\n  EventsAverageIndexDesc = 'EVENTS_AVERAGE_INDEX_DESC',\n  EventsAverageMethodAsc = 'EVENTS_AVERAGE_METHOD_ASC',\n  EventsAverageMethodDesc = 'EVENTS_AVERAGE_METHOD_DESC',\n  EventsAverageModuleAsc = 'EVENTS_AVERAGE_MODULE_ASC',\n  EventsAverageModuleDesc = 'EVENTS_AVERAGE_MODULE_DESC',\n  EventsAverageTimestampAsc = 'EVENTS_AVERAGE_TIMESTAMP_ASC',\n  EventsAverageTimestampDesc = 'EVENTS_AVERAGE_TIMESTAMP_DESC',\n  EventsCountAsc = 'EVENTS_COUNT_ASC',\n  EventsCountDesc = 'EVENTS_COUNT_DESC',\n  EventsDistinctCountArgumentsAsc = 'EVENTS_DISTINCT_COUNT_ARGUMENTS_ASC',\n  EventsDistinctCountArgumentsDesc = 'EVENTS_DISTINCT_COUNT_ARGUMENTS_DESC',\n  EventsDistinctCountBlockIdAsc = 'EVENTS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  EventsDistinctCountBlockIdDesc = 'EVENTS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  EventsDistinctCountBlockNumberAsc = 'EVENTS_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  EventsDistinctCountBlockNumberDesc = 'EVENTS_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  EventsDistinctCountDataAsc = 'EVENTS_DISTINCT_COUNT_DATA_ASC',\n  EventsDistinctCountDataDesc = 'EVENTS_DISTINCT_COUNT_DATA_DESC',\n  EventsDistinctCountDocsAsc = 'EVENTS_DISTINCT_COUNT_DOCS_ASC',\n  EventsDistinctCountDocsDesc = 'EVENTS_DISTINCT_COUNT_DOCS_DESC',\n  EventsDistinctCountExtrinsicIdAsc = 'EVENTS_DISTINCT_COUNT_EXTRINSIC_ID_ASC',\n  EventsDistinctCountExtrinsicIdDesc = 'EVENTS_DISTINCT_COUNT_EXTRINSIC_ID_DESC',\n  EventsDistinctCountIdAsc = 'EVENTS_DISTINCT_COUNT_ID_ASC',\n  EventsDistinctCountIdDesc = 'EVENTS_DISTINCT_COUNT_ID_DESC',\n  EventsDistinctCountIndexAsc = 'EVENTS_DISTINCT_COUNT_INDEX_ASC',\n  EventsDistinctCountIndexDesc = 'EVENTS_DISTINCT_COUNT_INDEX_DESC',\n  EventsDistinctCountMethodAsc = 'EVENTS_DISTINCT_COUNT_METHOD_ASC',\n  EventsDistinctCountMethodDesc = 'EVENTS_DISTINCT_COUNT_METHOD_DESC',\n  EventsDistinctCountModuleAsc = 'EVENTS_DISTINCT_COUNT_MODULE_ASC',\n  EventsDistinctCountModuleDesc = 'EVENTS_DISTINCT_COUNT_MODULE_DESC',\n  EventsDistinctCountTimestampAsc = 'EVENTS_DISTINCT_COUNT_TIMESTAMP_ASC',\n  EventsDistinctCountTimestampDesc = 'EVENTS_DISTINCT_COUNT_TIMESTAMP_DESC',\n  EventsMaxArgumentsAsc = 'EVENTS_MAX_ARGUMENTS_ASC',\n  EventsMaxArgumentsDesc = 'EVENTS_MAX_ARGUMENTS_DESC',\n  EventsMaxBlockIdAsc = 'EVENTS_MAX_BLOCK_ID_ASC',\n  EventsMaxBlockIdDesc = 'EVENTS_MAX_BLOCK_ID_DESC',\n  EventsMaxBlockNumberAsc = 'EVENTS_MAX_BLOCK_NUMBER_ASC',\n  EventsMaxBlockNumberDesc = 'EVENTS_MAX_BLOCK_NUMBER_DESC',\n  EventsMaxDataAsc = 'EVENTS_MAX_DATA_ASC',\n  EventsMaxDataDesc = 'EVENTS_MAX_DATA_DESC',\n  EventsMaxDocsAsc = 'EVENTS_MAX_DOCS_ASC',\n  EventsMaxDocsDesc = 'EVENTS_MAX_DOCS_DESC',\n  EventsMaxExtrinsicIdAsc = 'EVENTS_MAX_EXTRINSIC_ID_ASC',\n  EventsMaxExtrinsicIdDesc = 'EVENTS_MAX_EXTRINSIC_ID_DESC',\n  EventsMaxIdAsc = 'EVENTS_MAX_ID_ASC',\n  EventsMaxIdDesc = 'EVENTS_MAX_ID_DESC',\n  EventsMaxIndexAsc = 'EVENTS_MAX_INDEX_ASC',\n  EventsMaxIndexDesc = 'EVENTS_MAX_INDEX_DESC',\n  EventsMaxMethodAsc = 'EVENTS_MAX_METHOD_ASC',\n  EventsMaxMethodDesc = 'EVENTS_MAX_METHOD_DESC',\n  EventsMaxModuleAsc = 'EVENTS_MAX_MODULE_ASC',\n  EventsMaxModuleDesc = 'EVENTS_MAX_MODULE_DESC',\n  EventsMaxTimestampAsc = 'EVENTS_MAX_TIMESTAMP_ASC',\n  EventsMaxTimestampDesc = 'EVENTS_MAX_TIMESTAMP_DESC',\n  EventsMinArgumentsAsc = 'EVENTS_MIN_ARGUMENTS_ASC',\n  EventsMinArgumentsDesc = 'EVENTS_MIN_ARGUMENTS_DESC',\n  EventsMinBlockIdAsc = 'EVENTS_MIN_BLOCK_ID_ASC',\n  EventsMinBlockIdDesc = 'EVENTS_MIN_BLOCK_ID_DESC',\n  EventsMinBlockNumberAsc = 'EVENTS_MIN_BLOCK_NUMBER_ASC',\n  EventsMinBlockNumberDesc = 'EVENTS_MIN_BLOCK_NUMBER_DESC',\n  EventsMinDataAsc = 'EVENTS_MIN_DATA_ASC',\n  EventsMinDataDesc = 'EVENTS_MIN_DATA_DESC',\n  EventsMinDocsAsc = 'EVENTS_MIN_DOCS_ASC',\n  EventsMinDocsDesc = 'EVENTS_MIN_DOCS_DESC',\n  EventsMinExtrinsicIdAsc = 'EVENTS_MIN_EXTRINSIC_ID_ASC',\n  EventsMinExtrinsicIdDesc = 'EVENTS_MIN_EXTRINSIC_ID_DESC',\n  EventsMinIdAsc = 'EVENTS_MIN_ID_ASC',\n  EventsMinIdDesc = 'EVENTS_MIN_ID_DESC',\n  EventsMinIndexAsc = 'EVENTS_MIN_INDEX_ASC',\n  EventsMinIndexDesc = 'EVENTS_MIN_INDEX_DESC',\n  EventsMinMethodAsc = 'EVENTS_MIN_METHOD_ASC',\n  EventsMinMethodDesc = 'EVENTS_MIN_METHOD_DESC',\n  EventsMinModuleAsc = 'EVENTS_MIN_MODULE_ASC',\n  EventsMinModuleDesc = 'EVENTS_MIN_MODULE_DESC',\n  EventsMinTimestampAsc = 'EVENTS_MIN_TIMESTAMP_ASC',\n  EventsMinTimestampDesc = 'EVENTS_MIN_TIMESTAMP_DESC',\n  EventsStddevPopulationArgumentsAsc = 'EVENTS_STDDEV_POPULATION_ARGUMENTS_ASC',\n  EventsStddevPopulationArgumentsDesc = 'EVENTS_STDDEV_POPULATION_ARGUMENTS_DESC',\n  EventsStddevPopulationBlockIdAsc = 'EVENTS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  EventsStddevPopulationBlockIdDesc = 'EVENTS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  EventsStddevPopulationBlockNumberAsc = 'EVENTS_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  EventsStddevPopulationBlockNumberDesc = 'EVENTS_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  EventsStddevPopulationDataAsc = 'EVENTS_STDDEV_POPULATION_DATA_ASC',\n  EventsStddevPopulationDataDesc = 'EVENTS_STDDEV_POPULATION_DATA_DESC',\n  EventsStddevPopulationDocsAsc = 'EVENTS_STDDEV_POPULATION_DOCS_ASC',\n  EventsStddevPopulationDocsDesc = 'EVENTS_STDDEV_POPULATION_DOCS_DESC',\n  EventsStddevPopulationExtrinsicIdAsc = 'EVENTS_STDDEV_POPULATION_EXTRINSIC_ID_ASC',\n  EventsStddevPopulationExtrinsicIdDesc = 'EVENTS_STDDEV_POPULATION_EXTRINSIC_ID_DESC',\n  EventsStddevPopulationIdAsc = 'EVENTS_STDDEV_POPULATION_ID_ASC',\n  EventsStddevPopulationIdDesc = 'EVENTS_STDDEV_POPULATION_ID_DESC',\n  EventsStddevPopulationIndexAsc = 'EVENTS_STDDEV_POPULATION_INDEX_ASC',\n  EventsStddevPopulationIndexDesc = 'EVENTS_STDDEV_POPULATION_INDEX_DESC',\n  EventsStddevPopulationMethodAsc = 'EVENTS_STDDEV_POPULATION_METHOD_ASC',\n  EventsStddevPopulationMethodDesc = 'EVENTS_STDDEV_POPULATION_METHOD_DESC',\n  EventsStddevPopulationModuleAsc = 'EVENTS_STDDEV_POPULATION_MODULE_ASC',\n  EventsStddevPopulationModuleDesc = 'EVENTS_STDDEV_POPULATION_MODULE_DESC',\n  EventsStddevPopulationTimestampAsc = 'EVENTS_STDDEV_POPULATION_TIMESTAMP_ASC',\n  EventsStddevPopulationTimestampDesc = 'EVENTS_STDDEV_POPULATION_TIMESTAMP_DESC',\n  EventsStddevSampleArgumentsAsc = 'EVENTS_STDDEV_SAMPLE_ARGUMENTS_ASC',\n  EventsStddevSampleArgumentsDesc = 'EVENTS_STDDEV_SAMPLE_ARGUMENTS_DESC',\n  EventsStddevSampleBlockIdAsc = 'EVENTS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  EventsStddevSampleBlockIdDesc = 'EVENTS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  EventsStddevSampleBlockNumberAsc = 'EVENTS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  EventsStddevSampleBlockNumberDesc = 'EVENTS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  EventsStddevSampleDataAsc = 'EVENTS_STDDEV_SAMPLE_DATA_ASC',\n  EventsStddevSampleDataDesc = 'EVENTS_STDDEV_SAMPLE_DATA_DESC',\n  EventsStddevSampleDocsAsc = 'EVENTS_STDDEV_SAMPLE_DOCS_ASC',\n  EventsStddevSampleDocsDesc = 'EVENTS_STDDEV_SAMPLE_DOCS_DESC',\n  EventsStddevSampleExtrinsicIdAsc = 'EVENTS_STDDEV_SAMPLE_EXTRINSIC_ID_ASC',\n  EventsStddevSampleExtrinsicIdDesc = 'EVENTS_STDDEV_SAMPLE_EXTRINSIC_ID_DESC',\n  EventsStddevSampleIdAsc = 'EVENTS_STDDEV_SAMPLE_ID_ASC',\n  EventsStddevSampleIdDesc = 'EVENTS_STDDEV_SAMPLE_ID_DESC',\n  EventsStddevSampleIndexAsc = 'EVENTS_STDDEV_SAMPLE_INDEX_ASC',\n  EventsStddevSampleIndexDesc = 'EVENTS_STDDEV_SAMPLE_INDEX_DESC',\n  EventsStddevSampleMethodAsc = 'EVENTS_STDDEV_SAMPLE_METHOD_ASC',\n  EventsStddevSampleMethodDesc = 'EVENTS_STDDEV_SAMPLE_METHOD_DESC',\n  EventsStddevSampleModuleAsc = 'EVENTS_STDDEV_SAMPLE_MODULE_ASC',\n  EventsStddevSampleModuleDesc = 'EVENTS_STDDEV_SAMPLE_MODULE_DESC',\n  EventsStddevSampleTimestampAsc = 'EVENTS_STDDEV_SAMPLE_TIMESTAMP_ASC',\n  EventsStddevSampleTimestampDesc = 'EVENTS_STDDEV_SAMPLE_TIMESTAMP_DESC',\n  EventsSumArgumentsAsc = 'EVENTS_SUM_ARGUMENTS_ASC',\n  EventsSumArgumentsDesc = 'EVENTS_SUM_ARGUMENTS_DESC',\n  EventsSumBlockIdAsc = 'EVENTS_SUM_BLOCK_ID_ASC',\n  EventsSumBlockIdDesc = 'EVENTS_SUM_BLOCK_ID_DESC',\n  EventsSumBlockNumberAsc = 'EVENTS_SUM_BLOCK_NUMBER_ASC',\n  EventsSumBlockNumberDesc = 'EVENTS_SUM_BLOCK_NUMBER_DESC',\n  EventsSumDataAsc = 'EVENTS_SUM_DATA_ASC',\n  EventsSumDataDesc = 'EVENTS_SUM_DATA_DESC',\n  EventsSumDocsAsc = 'EVENTS_SUM_DOCS_ASC',\n  EventsSumDocsDesc = 'EVENTS_SUM_DOCS_DESC',\n  EventsSumExtrinsicIdAsc = 'EVENTS_SUM_EXTRINSIC_ID_ASC',\n  EventsSumExtrinsicIdDesc = 'EVENTS_SUM_EXTRINSIC_ID_DESC',\n  EventsSumIdAsc = 'EVENTS_SUM_ID_ASC',\n  EventsSumIdDesc = 'EVENTS_SUM_ID_DESC',\n  EventsSumIndexAsc = 'EVENTS_SUM_INDEX_ASC',\n  EventsSumIndexDesc = 'EVENTS_SUM_INDEX_DESC',\n  EventsSumMethodAsc = 'EVENTS_SUM_METHOD_ASC',\n  EventsSumMethodDesc = 'EVENTS_SUM_METHOD_DESC',\n  EventsSumModuleAsc = 'EVENTS_SUM_MODULE_ASC',\n  EventsSumModuleDesc = 'EVENTS_SUM_MODULE_DESC',\n  EventsSumTimestampAsc = 'EVENTS_SUM_TIMESTAMP_ASC',\n  EventsSumTimestampDesc = 'EVENTS_SUM_TIMESTAMP_DESC',\n  EventsVariancePopulationArgumentsAsc = 'EVENTS_VARIANCE_POPULATION_ARGUMENTS_ASC',\n  EventsVariancePopulationArgumentsDesc = 'EVENTS_VARIANCE_POPULATION_ARGUMENTS_DESC',\n  EventsVariancePopulationBlockIdAsc = 'EVENTS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  EventsVariancePopulationBlockIdDesc = 'EVENTS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  EventsVariancePopulationBlockNumberAsc = 'EVENTS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  EventsVariancePopulationBlockNumberDesc = 'EVENTS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  EventsVariancePopulationDataAsc = 'EVENTS_VARIANCE_POPULATION_DATA_ASC',\n  EventsVariancePopulationDataDesc = 'EVENTS_VARIANCE_POPULATION_DATA_DESC',\n  EventsVariancePopulationDocsAsc = 'EVENTS_VARIANCE_POPULATION_DOCS_ASC',\n  EventsVariancePopulationDocsDesc = 'EVENTS_VARIANCE_POPULATION_DOCS_DESC',\n  EventsVariancePopulationExtrinsicIdAsc = 'EVENTS_VARIANCE_POPULATION_EXTRINSIC_ID_ASC',\n  EventsVariancePopulationExtrinsicIdDesc = 'EVENTS_VARIANCE_POPULATION_EXTRINSIC_ID_DESC',\n  EventsVariancePopulationIdAsc = 'EVENTS_VARIANCE_POPULATION_ID_ASC',\n  EventsVariancePopulationIdDesc = 'EVENTS_VARIANCE_POPULATION_ID_DESC',\n  EventsVariancePopulationIndexAsc = 'EVENTS_VARIANCE_POPULATION_INDEX_ASC',\n  EventsVariancePopulationIndexDesc = 'EVENTS_VARIANCE_POPULATION_INDEX_DESC',\n  EventsVariancePopulationMethodAsc = 'EVENTS_VARIANCE_POPULATION_METHOD_ASC',\n  EventsVariancePopulationMethodDesc = 'EVENTS_VARIANCE_POPULATION_METHOD_DESC',\n  EventsVariancePopulationModuleAsc = 'EVENTS_VARIANCE_POPULATION_MODULE_ASC',\n  EventsVariancePopulationModuleDesc = 'EVENTS_VARIANCE_POPULATION_MODULE_DESC',\n  EventsVariancePopulationTimestampAsc = 'EVENTS_VARIANCE_POPULATION_TIMESTAMP_ASC',\n  EventsVariancePopulationTimestampDesc = 'EVENTS_VARIANCE_POPULATION_TIMESTAMP_DESC',\n  EventsVarianceSampleArgumentsAsc = 'EVENTS_VARIANCE_SAMPLE_ARGUMENTS_ASC',\n  EventsVarianceSampleArgumentsDesc = 'EVENTS_VARIANCE_SAMPLE_ARGUMENTS_DESC',\n  EventsVarianceSampleBlockIdAsc = 'EVENTS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  EventsVarianceSampleBlockIdDesc = 'EVENTS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  EventsVarianceSampleBlockNumberAsc = 'EVENTS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  EventsVarianceSampleBlockNumberDesc = 'EVENTS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  EventsVarianceSampleDataAsc = 'EVENTS_VARIANCE_SAMPLE_DATA_ASC',\n  EventsVarianceSampleDataDesc = 'EVENTS_VARIANCE_SAMPLE_DATA_DESC',\n  EventsVarianceSampleDocsAsc = 'EVENTS_VARIANCE_SAMPLE_DOCS_ASC',\n  EventsVarianceSampleDocsDesc = 'EVENTS_VARIANCE_SAMPLE_DOCS_DESC',\n  EventsVarianceSampleExtrinsicIdAsc = 'EVENTS_VARIANCE_SAMPLE_EXTRINSIC_ID_ASC',\n  EventsVarianceSampleExtrinsicIdDesc = 'EVENTS_VARIANCE_SAMPLE_EXTRINSIC_ID_DESC',\n  EventsVarianceSampleIdAsc = 'EVENTS_VARIANCE_SAMPLE_ID_ASC',\n  EventsVarianceSampleIdDesc = 'EVENTS_VARIANCE_SAMPLE_ID_DESC',\n  EventsVarianceSampleIndexAsc = 'EVENTS_VARIANCE_SAMPLE_INDEX_ASC',\n  EventsVarianceSampleIndexDesc = 'EVENTS_VARIANCE_SAMPLE_INDEX_DESC',\n  EventsVarianceSampleMethodAsc = 'EVENTS_VARIANCE_SAMPLE_METHOD_ASC',\n  EventsVarianceSampleMethodDesc = 'EVENTS_VARIANCE_SAMPLE_METHOD_DESC',\n  EventsVarianceSampleModuleAsc = 'EVENTS_VARIANCE_SAMPLE_MODULE_ASC',\n  EventsVarianceSampleModuleDesc = 'EVENTS_VARIANCE_SAMPLE_MODULE_DESC',\n  EventsVarianceSampleTimestampAsc = 'EVENTS_VARIANCE_SAMPLE_TIMESTAMP_ASC',\n  EventsVarianceSampleTimestampDesc = 'EVENTS_VARIANCE_SAMPLE_TIMESTAMP_DESC',\n  ExtrinsicsAverageArgumentsAsc = 'EXTRINSICS_AVERAGE_ARGUMENTS_ASC',\n  ExtrinsicsAverageArgumentsDesc = 'EXTRINSICS_AVERAGE_ARGUMENTS_DESC',\n  ExtrinsicsAverageBlockIdAsc = 'EXTRINSICS_AVERAGE_BLOCK_ID_ASC',\n  ExtrinsicsAverageBlockIdDesc = 'EXTRINSICS_AVERAGE_BLOCK_ID_DESC',\n  ExtrinsicsAverageBlockNumberAsc = 'EXTRINSICS_AVERAGE_BLOCK_NUMBER_ASC',\n  ExtrinsicsAverageBlockNumberDesc = 'EXTRINSICS_AVERAGE_BLOCK_NUMBER_DESC',\n  ExtrinsicsAverageHashAsc = 'EXTRINSICS_AVERAGE_HASH_ASC',\n  ExtrinsicsAverageHashDesc = 'EXTRINSICS_AVERAGE_HASH_DESC',\n  ExtrinsicsAverageIdAsc = 'EXTRINSICS_AVERAGE_ID_ASC',\n  ExtrinsicsAverageIdDesc = 'EXTRINSICS_AVERAGE_ID_DESC',\n  ExtrinsicsAverageIndexAsc = 'EXTRINSICS_AVERAGE_INDEX_ASC',\n  ExtrinsicsAverageIndexDesc = 'EXTRINSICS_AVERAGE_INDEX_DESC',\n  ExtrinsicsAverageIsSignedAsc = 'EXTRINSICS_AVERAGE_IS_SIGNED_ASC',\n  ExtrinsicsAverageIsSignedDesc = 'EXTRINSICS_AVERAGE_IS_SIGNED_DESC',\n  ExtrinsicsAverageIsSuccessAsc = 'EXTRINSICS_AVERAGE_IS_SUCCESS_ASC',\n  ExtrinsicsAverageIsSuccessDesc = 'EXTRINSICS_AVERAGE_IS_SUCCESS_DESC',\n  ExtrinsicsAverageMethodAsc = 'EXTRINSICS_AVERAGE_METHOD_ASC',\n  ExtrinsicsAverageMethodDesc = 'EXTRINSICS_AVERAGE_METHOD_DESC',\n  ExtrinsicsAverageModuleAsc = 'EXTRINSICS_AVERAGE_MODULE_ASC',\n  ExtrinsicsAverageModuleDesc = 'EXTRINSICS_AVERAGE_MODULE_DESC',\n  ExtrinsicsAverageSignerIdAsc = 'EXTRINSICS_AVERAGE_SIGNER_ID_ASC',\n  ExtrinsicsAverageSignerIdDesc = 'EXTRINSICS_AVERAGE_SIGNER_ID_DESC',\n  ExtrinsicsCountAsc = 'EXTRINSICS_COUNT_ASC',\n  ExtrinsicsCountDesc = 'EXTRINSICS_COUNT_DESC',\n  ExtrinsicsDistinctCountArgumentsAsc = 'EXTRINSICS_DISTINCT_COUNT_ARGUMENTS_ASC',\n  ExtrinsicsDistinctCountArgumentsDesc = 'EXTRINSICS_DISTINCT_COUNT_ARGUMENTS_DESC',\n  ExtrinsicsDistinctCountBlockIdAsc = 'EXTRINSICS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  ExtrinsicsDistinctCountBlockIdDesc = 'EXTRINSICS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  ExtrinsicsDistinctCountBlockNumberAsc = 'EXTRINSICS_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  ExtrinsicsDistinctCountBlockNumberDesc = 'EXTRINSICS_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  ExtrinsicsDistinctCountHashAsc = 'EXTRINSICS_DISTINCT_COUNT_HASH_ASC',\n  ExtrinsicsDistinctCountHashDesc = 'EXTRINSICS_DISTINCT_COUNT_HASH_DESC',\n  ExtrinsicsDistinctCountIdAsc = 'EXTRINSICS_DISTINCT_COUNT_ID_ASC',\n  ExtrinsicsDistinctCountIdDesc = 'EXTRINSICS_DISTINCT_COUNT_ID_DESC',\n  ExtrinsicsDistinctCountIndexAsc = 'EXTRINSICS_DISTINCT_COUNT_INDEX_ASC',\n  ExtrinsicsDistinctCountIndexDesc = 'EXTRINSICS_DISTINCT_COUNT_INDEX_DESC',\n  ExtrinsicsDistinctCountIsSignedAsc = 'EXTRINSICS_DISTINCT_COUNT_IS_SIGNED_ASC',\n  ExtrinsicsDistinctCountIsSignedDesc = 'EXTRINSICS_DISTINCT_COUNT_IS_SIGNED_DESC',\n  ExtrinsicsDistinctCountIsSuccessAsc = 'EXTRINSICS_DISTINCT_COUNT_IS_SUCCESS_ASC',\n  ExtrinsicsDistinctCountIsSuccessDesc = 'EXTRINSICS_DISTINCT_COUNT_IS_SUCCESS_DESC',\n  ExtrinsicsDistinctCountMethodAsc = 'EXTRINSICS_DISTINCT_COUNT_METHOD_ASC',\n  ExtrinsicsDistinctCountMethodDesc = 'EXTRINSICS_DISTINCT_COUNT_METHOD_DESC',\n  ExtrinsicsDistinctCountModuleAsc = 'EXTRINSICS_DISTINCT_COUNT_MODULE_ASC',\n  ExtrinsicsDistinctCountModuleDesc = 'EXTRINSICS_DISTINCT_COUNT_MODULE_DESC',\n  ExtrinsicsDistinctCountSignerIdAsc = 'EXTRINSICS_DISTINCT_COUNT_SIGNER_ID_ASC',\n  ExtrinsicsDistinctCountSignerIdDesc = 'EXTRINSICS_DISTINCT_COUNT_SIGNER_ID_DESC',\n  ExtrinsicsMaxArgumentsAsc = 'EXTRINSICS_MAX_ARGUMENTS_ASC',\n  ExtrinsicsMaxArgumentsDesc = 'EXTRINSICS_MAX_ARGUMENTS_DESC',\n  ExtrinsicsMaxBlockIdAsc = 'EXTRINSICS_MAX_BLOCK_ID_ASC',\n  ExtrinsicsMaxBlockIdDesc = 'EXTRINSICS_MAX_BLOCK_ID_DESC',\n  ExtrinsicsMaxBlockNumberAsc = 'EXTRINSICS_MAX_BLOCK_NUMBER_ASC',\n  ExtrinsicsMaxBlockNumberDesc = 'EXTRINSICS_MAX_BLOCK_NUMBER_DESC',\n  ExtrinsicsMaxHashAsc = 'EXTRINSICS_MAX_HASH_ASC',\n  ExtrinsicsMaxHashDesc = 'EXTRINSICS_MAX_HASH_DESC',\n  ExtrinsicsMaxIdAsc = 'EXTRINSICS_MAX_ID_ASC',\n  ExtrinsicsMaxIdDesc = 'EXTRINSICS_MAX_ID_DESC',\n  ExtrinsicsMaxIndexAsc = 'EXTRINSICS_MAX_INDEX_ASC',\n  ExtrinsicsMaxIndexDesc = 'EXTRINSICS_MAX_INDEX_DESC',\n  ExtrinsicsMaxIsSignedAsc = 'EXTRINSICS_MAX_IS_SIGNED_ASC',\n  ExtrinsicsMaxIsSignedDesc = 'EXTRINSICS_MAX_IS_SIGNED_DESC',\n  ExtrinsicsMaxIsSuccessAsc = 'EXTRINSICS_MAX_IS_SUCCESS_ASC',\n  ExtrinsicsMaxIsSuccessDesc = 'EXTRINSICS_MAX_IS_SUCCESS_DESC',\n  ExtrinsicsMaxMethodAsc = 'EXTRINSICS_MAX_METHOD_ASC',\n  ExtrinsicsMaxMethodDesc = 'EXTRINSICS_MAX_METHOD_DESC',\n  ExtrinsicsMaxModuleAsc = 'EXTRINSICS_MAX_MODULE_ASC',\n  ExtrinsicsMaxModuleDesc = 'EXTRINSICS_MAX_MODULE_DESC',\n  ExtrinsicsMaxSignerIdAsc = 'EXTRINSICS_MAX_SIGNER_ID_ASC',\n  ExtrinsicsMaxSignerIdDesc = 'EXTRINSICS_MAX_SIGNER_ID_DESC',\n  ExtrinsicsMinArgumentsAsc = 'EXTRINSICS_MIN_ARGUMENTS_ASC',\n  ExtrinsicsMinArgumentsDesc = 'EXTRINSICS_MIN_ARGUMENTS_DESC',\n  ExtrinsicsMinBlockIdAsc = 'EXTRINSICS_MIN_BLOCK_ID_ASC',\n  ExtrinsicsMinBlockIdDesc = 'EXTRINSICS_MIN_BLOCK_ID_DESC',\n  ExtrinsicsMinBlockNumberAsc = 'EXTRINSICS_MIN_BLOCK_NUMBER_ASC',\n  ExtrinsicsMinBlockNumberDesc = 'EXTRINSICS_MIN_BLOCK_NUMBER_DESC',\n  ExtrinsicsMinHashAsc = 'EXTRINSICS_MIN_HASH_ASC',\n  ExtrinsicsMinHashDesc = 'EXTRINSICS_MIN_HASH_DESC',\n  ExtrinsicsMinIdAsc = 'EXTRINSICS_MIN_ID_ASC',\n  ExtrinsicsMinIdDesc = 'EXTRINSICS_MIN_ID_DESC',\n  ExtrinsicsMinIndexAsc = 'EXTRINSICS_MIN_INDEX_ASC',\n  ExtrinsicsMinIndexDesc = 'EXTRINSICS_MIN_INDEX_DESC',\n  ExtrinsicsMinIsSignedAsc = 'EXTRINSICS_MIN_IS_SIGNED_ASC',\n  ExtrinsicsMinIsSignedDesc = 'EXTRINSICS_MIN_IS_SIGNED_DESC',\n  ExtrinsicsMinIsSuccessAsc = 'EXTRINSICS_MIN_IS_SUCCESS_ASC',\n  ExtrinsicsMinIsSuccessDesc = 'EXTRINSICS_MIN_IS_SUCCESS_DESC',\n  ExtrinsicsMinMethodAsc = 'EXTRINSICS_MIN_METHOD_ASC',\n  ExtrinsicsMinMethodDesc = 'EXTRINSICS_MIN_METHOD_DESC',\n  ExtrinsicsMinModuleAsc = 'EXTRINSICS_MIN_MODULE_ASC',\n  ExtrinsicsMinModuleDesc = 'EXTRINSICS_MIN_MODULE_DESC',\n  ExtrinsicsMinSignerIdAsc = 'EXTRINSICS_MIN_SIGNER_ID_ASC',\n  ExtrinsicsMinSignerIdDesc = 'EXTRINSICS_MIN_SIGNER_ID_DESC',\n  ExtrinsicsRootAsc = 'EXTRINSICS_ROOT_ASC',\n  ExtrinsicsRootDesc = 'EXTRINSICS_ROOT_DESC',\n  ExtrinsicsStddevPopulationArgumentsAsc = 'EXTRINSICS_STDDEV_POPULATION_ARGUMENTS_ASC',\n  ExtrinsicsStddevPopulationArgumentsDesc = 'EXTRINSICS_STDDEV_POPULATION_ARGUMENTS_DESC',\n  ExtrinsicsStddevPopulationBlockIdAsc = 'EXTRINSICS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  ExtrinsicsStddevPopulationBlockIdDesc = 'EXTRINSICS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  ExtrinsicsStddevPopulationBlockNumberAsc = 'EXTRINSICS_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  ExtrinsicsStddevPopulationBlockNumberDesc = 'EXTRINSICS_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  ExtrinsicsStddevPopulationHashAsc = 'EXTRINSICS_STDDEV_POPULATION_HASH_ASC',\n  ExtrinsicsStddevPopulationHashDesc = 'EXTRINSICS_STDDEV_POPULATION_HASH_DESC',\n  ExtrinsicsStddevPopulationIdAsc = 'EXTRINSICS_STDDEV_POPULATION_ID_ASC',\n  ExtrinsicsStddevPopulationIdDesc = 'EXTRINSICS_STDDEV_POPULATION_ID_DESC',\n  ExtrinsicsStddevPopulationIndexAsc = 'EXTRINSICS_STDDEV_POPULATION_INDEX_ASC',\n  ExtrinsicsStddevPopulationIndexDesc = 'EXTRINSICS_STDDEV_POPULATION_INDEX_DESC',\n  ExtrinsicsStddevPopulationIsSignedAsc = 'EXTRINSICS_STDDEV_POPULATION_IS_SIGNED_ASC',\n  ExtrinsicsStddevPopulationIsSignedDesc = 'EXTRINSICS_STDDEV_POPULATION_IS_SIGNED_DESC',\n  ExtrinsicsStddevPopulationIsSuccessAsc = 'EXTRINSICS_STDDEV_POPULATION_IS_SUCCESS_ASC',\n  ExtrinsicsStddevPopulationIsSuccessDesc = 'EXTRINSICS_STDDEV_POPULATION_IS_SUCCESS_DESC',\n  ExtrinsicsStddevPopulationMethodAsc = 'EXTRINSICS_STDDEV_POPULATION_METHOD_ASC',\n  ExtrinsicsStddevPopulationMethodDesc = 'EXTRINSICS_STDDEV_POPULATION_METHOD_DESC',\n  ExtrinsicsStddevPopulationModuleAsc = 'EXTRINSICS_STDDEV_POPULATION_MODULE_ASC',\n  ExtrinsicsStddevPopulationModuleDesc = 'EXTRINSICS_STDDEV_POPULATION_MODULE_DESC',\n  ExtrinsicsStddevPopulationSignerIdAsc = 'EXTRINSICS_STDDEV_POPULATION_SIGNER_ID_ASC',\n  ExtrinsicsStddevPopulationSignerIdDesc = 'EXTRINSICS_STDDEV_POPULATION_SIGNER_ID_DESC',\n  ExtrinsicsStddevSampleArgumentsAsc = 'EXTRINSICS_STDDEV_SAMPLE_ARGUMENTS_ASC',\n  ExtrinsicsStddevSampleArgumentsDesc = 'EXTRINSICS_STDDEV_SAMPLE_ARGUMENTS_DESC',\n  ExtrinsicsStddevSampleBlockIdAsc = 'EXTRINSICS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  ExtrinsicsStddevSampleBlockIdDesc = 'EXTRINSICS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  ExtrinsicsStddevSampleBlockNumberAsc = 'EXTRINSICS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  ExtrinsicsStddevSampleBlockNumberDesc = 'EXTRINSICS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  ExtrinsicsStddevSampleHashAsc = 'EXTRINSICS_STDDEV_SAMPLE_HASH_ASC',\n  ExtrinsicsStddevSampleHashDesc = 'EXTRINSICS_STDDEV_SAMPLE_HASH_DESC',\n  ExtrinsicsStddevSampleIdAsc = 'EXTRINSICS_STDDEV_SAMPLE_ID_ASC',\n  ExtrinsicsStddevSampleIdDesc = 'EXTRINSICS_STDDEV_SAMPLE_ID_DESC',\n  ExtrinsicsStddevSampleIndexAsc = 'EXTRINSICS_STDDEV_SAMPLE_INDEX_ASC',\n  ExtrinsicsStddevSampleIndexDesc = 'EXTRINSICS_STDDEV_SAMPLE_INDEX_DESC',\n  ExtrinsicsStddevSampleIsSignedAsc = 'EXTRINSICS_STDDEV_SAMPLE_IS_SIGNED_ASC',\n  ExtrinsicsStddevSampleIsSignedDesc = 'EXTRINSICS_STDDEV_SAMPLE_IS_SIGNED_DESC',\n  ExtrinsicsStddevSampleIsSuccessAsc = 'EXTRINSICS_STDDEV_SAMPLE_IS_SUCCESS_ASC',\n  ExtrinsicsStddevSampleIsSuccessDesc = 'EXTRINSICS_STDDEV_SAMPLE_IS_SUCCESS_DESC',\n  ExtrinsicsStddevSampleMethodAsc = 'EXTRINSICS_STDDEV_SAMPLE_METHOD_ASC',\n  ExtrinsicsStddevSampleMethodDesc = 'EXTRINSICS_STDDEV_SAMPLE_METHOD_DESC',\n  ExtrinsicsStddevSampleModuleAsc = 'EXTRINSICS_STDDEV_SAMPLE_MODULE_ASC',\n  ExtrinsicsStddevSampleModuleDesc = 'EXTRINSICS_STDDEV_SAMPLE_MODULE_DESC',\n  ExtrinsicsStddevSampleSignerIdAsc = 'EXTRINSICS_STDDEV_SAMPLE_SIGNER_ID_ASC',\n  ExtrinsicsStddevSampleSignerIdDesc = 'EXTRINSICS_STDDEV_SAMPLE_SIGNER_ID_DESC',\n  ExtrinsicsSumArgumentsAsc = 'EXTRINSICS_SUM_ARGUMENTS_ASC',\n  ExtrinsicsSumArgumentsDesc = 'EXTRINSICS_SUM_ARGUMENTS_DESC',\n  ExtrinsicsSumBlockIdAsc = 'EXTRINSICS_SUM_BLOCK_ID_ASC',\n  ExtrinsicsSumBlockIdDesc = 'EXTRINSICS_SUM_BLOCK_ID_DESC',\n  ExtrinsicsSumBlockNumberAsc = 'EXTRINSICS_SUM_BLOCK_NUMBER_ASC',\n  ExtrinsicsSumBlockNumberDesc = 'EXTRINSICS_SUM_BLOCK_NUMBER_DESC',\n  ExtrinsicsSumHashAsc = 'EXTRINSICS_SUM_HASH_ASC',\n  ExtrinsicsSumHashDesc = 'EXTRINSICS_SUM_HASH_DESC',\n  ExtrinsicsSumIdAsc = 'EXTRINSICS_SUM_ID_ASC',\n  ExtrinsicsSumIdDesc = 'EXTRINSICS_SUM_ID_DESC',\n  ExtrinsicsSumIndexAsc = 'EXTRINSICS_SUM_INDEX_ASC',\n  ExtrinsicsSumIndexDesc = 'EXTRINSICS_SUM_INDEX_DESC',\n  ExtrinsicsSumIsSignedAsc = 'EXTRINSICS_SUM_IS_SIGNED_ASC',\n  ExtrinsicsSumIsSignedDesc = 'EXTRINSICS_SUM_IS_SIGNED_DESC',\n  ExtrinsicsSumIsSuccessAsc = 'EXTRINSICS_SUM_IS_SUCCESS_ASC',\n  ExtrinsicsSumIsSuccessDesc = 'EXTRINSICS_SUM_IS_SUCCESS_DESC',\n  ExtrinsicsSumMethodAsc = 'EXTRINSICS_SUM_METHOD_ASC',\n  ExtrinsicsSumMethodDesc = 'EXTRINSICS_SUM_METHOD_DESC',\n  ExtrinsicsSumModuleAsc = 'EXTRINSICS_SUM_MODULE_ASC',\n  ExtrinsicsSumModuleDesc = 'EXTRINSICS_SUM_MODULE_DESC',\n  ExtrinsicsSumSignerIdAsc = 'EXTRINSICS_SUM_SIGNER_ID_ASC',\n  ExtrinsicsSumSignerIdDesc = 'EXTRINSICS_SUM_SIGNER_ID_DESC',\n  ExtrinsicsVariancePopulationArgumentsAsc = 'EXTRINSICS_VARIANCE_POPULATION_ARGUMENTS_ASC',\n  ExtrinsicsVariancePopulationArgumentsDesc = 'EXTRINSICS_VARIANCE_POPULATION_ARGUMENTS_DESC',\n  ExtrinsicsVariancePopulationBlockIdAsc = 'EXTRINSICS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  ExtrinsicsVariancePopulationBlockIdDesc = 'EXTRINSICS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  ExtrinsicsVariancePopulationBlockNumberAsc = 'EXTRINSICS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  ExtrinsicsVariancePopulationBlockNumberDesc = 'EXTRINSICS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  ExtrinsicsVariancePopulationHashAsc = 'EXTRINSICS_VARIANCE_POPULATION_HASH_ASC',\n  ExtrinsicsVariancePopulationHashDesc = 'EXTRINSICS_VARIANCE_POPULATION_HASH_DESC',\n  ExtrinsicsVariancePopulationIdAsc = 'EXTRINSICS_VARIANCE_POPULATION_ID_ASC',\n  ExtrinsicsVariancePopulationIdDesc = 'EXTRINSICS_VARIANCE_POPULATION_ID_DESC',\n  ExtrinsicsVariancePopulationIndexAsc = 'EXTRINSICS_VARIANCE_POPULATION_INDEX_ASC',\n  ExtrinsicsVariancePopulationIndexDesc = 'EXTRINSICS_VARIANCE_POPULATION_INDEX_DESC',\n  ExtrinsicsVariancePopulationIsSignedAsc = 'EXTRINSICS_VARIANCE_POPULATION_IS_SIGNED_ASC',\n  ExtrinsicsVariancePopulationIsSignedDesc = 'EXTRINSICS_VARIANCE_POPULATION_IS_SIGNED_DESC',\n  ExtrinsicsVariancePopulationIsSuccessAsc = 'EXTRINSICS_VARIANCE_POPULATION_IS_SUCCESS_ASC',\n  ExtrinsicsVariancePopulationIsSuccessDesc = 'EXTRINSICS_VARIANCE_POPULATION_IS_SUCCESS_DESC',\n  ExtrinsicsVariancePopulationMethodAsc = 'EXTRINSICS_VARIANCE_POPULATION_METHOD_ASC',\n  ExtrinsicsVariancePopulationMethodDesc = 'EXTRINSICS_VARIANCE_POPULATION_METHOD_DESC',\n  ExtrinsicsVariancePopulationModuleAsc = 'EXTRINSICS_VARIANCE_POPULATION_MODULE_ASC',\n  ExtrinsicsVariancePopulationModuleDesc = 'EXTRINSICS_VARIANCE_POPULATION_MODULE_DESC',\n  ExtrinsicsVariancePopulationSignerIdAsc = 'EXTRINSICS_VARIANCE_POPULATION_SIGNER_ID_ASC',\n  ExtrinsicsVariancePopulationSignerIdDesc = 'EXTRINSICS_VARIANCE_POPULATION_SIGNER_ID_DESC',\n  ExtrinsicsVarianceSampleArgumentsAsc = 'EXTRINSICS_VARIANCE_SAMPLE_ARGUMENTS_ASC',\n  ExtrinsicsVarianceSampleArgumentsDesc = 'EXTRINSICS_VARIANCE_SAMPLE_ARGUMENTS_DESC',\n  ExtrinsicsVarianceSampleBlockIdAsc = 'EXTRINSICS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  ExtrinsicsVarianceSampleBlockIdDesc = 'EXTRINSICS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  ExtrinsicsVarianceSampleBlockNumberAsc = 'EXTRINSICS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  ExtrinsicsVarianceSampleBlockNumberDesc = 'EXTRINSICS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  ExtrinsicsVarianceSampleHashAsc = 'EXTRINSICS_VARIANCE_SAMPLE_HASH_ASC',\n  ExtrinsicsVarianceSampleHashDesc = 'EXTRINSICS_VARIANCE_SAMPLE_HASH_DESC',\n  ExtrinsicsVarianceSampleIdAsc = 'EXTRINSICS_VARIANCE_SAMPLE_ID_ASC',\n  ExtrinsicsVarianceSampleIdDesc = 'EXTRINSICS_VARIANCE_SAMPLE_ID_DESC',\n  ExtrinsicsVarianceSampleIndexAsc = 'EXTRINSICS_VARIANCE_SAMPLE_INDEX_ASC',\n  ExtrinsicsVarianceSampleIndexDesc = 'EXTRINSICS_VARIANCE_SAMPLE_INDEX_DESC',\n  ExtrinsicsVarianceSampleIsSignedAsc = 'EXTRINSICS_VARIANCE_SAMPLE_IS_SIGNED_ASC',\n  ExtrinsicsVarianceSampleIsSignedDesc = 'EXTRINSICS_VARIANCE_SAMPLE_IS_SIGNED_DESC',\n  ExtrinsicsVarianceSampleIsSuccessAsc = 'EXTRINSICS_VARIANCE_SAMPLE_IS_SUCCESS_ASC',\n  ExtrinsicsVarianceSampleIsSuccessDesc = 'EXTRINSICS_VARIANCE_SAMPLE_IS_SUCCESS_DESC',\n  ExtrinsicsVarianceSampleMethodAsc = 'EXTRINSICS_VARIANCE_SAMPLE_METHOD_ASC',\n  ExtrinsicsVarianceSampleMethodDesc = 'EXTRINSICS_VARIANCE_SAMPLE_METHOD_DESC',\n  ExtrinsicsVarianceSampleModuleAsc = 'EXTRINSICS_VARIANCE_SAMPLE_MODULE_ASC',\n  ExtrinsicsVarianceSampleModuleDesc = 'EXTRINSICS_VARIANCE_SAMPLE_MODULE_DESC',\n  ExtrinsicsVarianceSampleSignerIdAsc = 'EXTRINSICS_VARIANCE_SAMPLE_SIGNER_ID_ASC',\n  ExtrinsicsVarianceSampleSignerIdDesc = 'EXTRINSICS_VARIANCE_SAMPLE_SIGNER_ID_DESC',\n  HashAsc = 'HASH_ASC',\n  HashDesc = 'HASH_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  KeygenThresholdsAverageBlockIdAsc = 'KEYGEN_THRESHOLDS_AVERAGE_BLOCK_ID_ASC',\n  KeygenThresholdsAverageBlockIdDesc = 'KEYGEN_THRESHOLDS_AVERAGE_BLOCK_ID_DESC',\n  KeygenThresholdsAverageCurrentAsc = 'KEYGEN_THRESHOLDS_AVERAGE_CURRENT_ASC',\n  KeygenThresholdsAverageCurrentDesc = 'KEYGEN_THRESHOLDS_AVERAGE_CURRENT_DESC',\n  KeygenThresholdsAverageIdAsc = 'KEYGEN_THRESHOLDS_AVERAGE_ID_ASC',\n  KeygenThresholdsAverageIdDesc = 'KEYGEN_THRESHOLDS_AVERAGE_ID_DESC',\n  KeygenThresholdsAverageNextAsc = 'KEYGEN_THRESHOLDS_AVERAGE_NEXT_ASC',\n  KeygenThresholdsAverageNextDesc = 'KEYGEN_THRESHOLDS_AVERAGE_NEXT_DESC',\n  KeygenThresholdsAveragePendingAsc = 'KEYGEN_THRESHOLDS_AVERAGE_PENDING_ASC',\n  KeygenThresholdsAveragePendingDesc = 'KEYGEN_THRESHOLDS_AVERAGE_PENDING_DESC',\n  KeygenThresholdsCountAsc = 'KEYGEN_THRESHOLDS_COUNT_ASC',\n  KeygenThresholdsCountDesc = 'KEYGEN_THRESHOLDS_COUNT_DESC',\n  KeygenThresholdsDistinctCountBlockIdAsc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  KeygenThresholdsDistinctCountBlockIdDesc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  KeygenThresholdsDistinctCountCurrentAsc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_CURRENT_ASC',\n  KeygenThresholdsDistinctCountCurrentDesc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_CURRENT_DESC',\n  KeygenThresholdsDistinctCountIdAsc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_ID_ASC',\n  KeygenThresholdsDistinctCountIdDesc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_ID_DESC',\n  KeygenThresholdsDistinctCountNextAsc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_NEXT_ASC',\n  KeygenThresholdsDistinctCountNextDesc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_NEXT_DESC',\n  KeygenThresholdsDistinctCountPendingAsc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_PENDING_ASC',\n  KeygenThresholdsDistinctCountPendingDesc = 'KEYGEN_THRESHOLDS_DISTINCT_COUNT_PENDING_DESC',\n  KeygenThresholdsMaxBlockIdAsc = 'KEYGEN_THRESHOLDS_MAX_BLOCK_ID_ASC',\n  KeygenThresholdsMaxBlockIdDesc = 'KEYGEN_THRESHOLDS_MAX_BLOCK_ID_DESC',\n  KeygenThresholdsMaxCurrentAsc = 'KEYGEN_THRESHOLDS_MAX_CURRENT_ASC',\n  KeygenThresholdsMaxCurrentDesc = 'KEYGEN_THRESHOLDS_MAX_CURRENT_DESC',\n  KeygenThresholdsMaxIdAsc = 'KEYGEN_THRESHOLDS_MAX_ID_ASC',\n  KeygenThresholdsMaxIdDesc = 'KEYGEN_THRESHOLDS_MAX_ID_DESC',\n  KeygenThresholdsMaxNextAsc = 'KEYGEN_THRESHOLDS_MAX_NEXT_ASC',\n  KeygenThresholdsMaxNextDesc = 'KEYGEN_THRESHOLDS_MAX_NEXT_DESC',\n  KeygenThresholdsMaxPendingAsc = 'KEYGEN_THRESHOLDS_MAX_PENDING_ASC',\n  KeygenThresholdsMaxPendingDesc = 'KEYGEN_THRESHOLDS_MAX_PENDING_DESC',\n  KeygenThresholdsMinBlockIdAsc = 'KEYGEN_THRESHOLDS_MIN_BLOCK_ID_ASC',\n  KeygenThresholdsMinBlockIdDesc = 'KEYGEN_THRESHOLDS_MIN_BLOCK_ID_DESC',\n  KeygenThresholdsMinCurrentAsc = 'KEYGEN_THRESHOLDS_MIN_CURRENT_ASC',\n  KeygenThresholdsMinCurrentDesc = 'KEYGEN_THRESHOLDS_MIN_CURRENT_DESC',\n  KeygenThresholdsMinIdAsc = 'KEYGEN_THRESHOLDS_MIN_ID_ASC',\n  KeygenThresholdsMinIdDesc = 'KEYGEN_THRESHOLDS_MIN_ID_DESC',\n  KeygenThresholdsMinNextAsc = 'KEYGEN_THRESHOLDS_MIN_NEXT_ASC',\n  KeygenThresholdsMinNextDesc = 'KEYGEN_THRESHOLDS_MIN_NEXT_DESC',\n  KeygenThresholdsMinPendingAsc = 'KEYGEN_THRESHOLDS_MIN_PENDING_ASC',\n  KeygenThresholdsMinPendingDesc = 'KEYGEN_THRESHOLDS_MIN_PENDING_DESC',\n  KeygenThresholdsStddevPopulationBlockIdAsc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  KeygenThresholdsStddevPopulationBlockIdDesc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  KeygenThresholdsStddevPopulationCurrentAsc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_CURRENT_ASC',\n  KeygenThresholdsStddevPopulationCurrentDesc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_CURRENT_DESC',\n  KeygenThresholdsStddevPopulationIdAsc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_ID_ASC',\n  KeygenThresholdsStddevPopulationIdDesc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_ID_DESC',\n  KeygenThresholdsStddevPopulationNextAsc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_NEXT_ASC',\n  KeygenThresholdsStddevPopulationNextDesc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_NEXT_DESC',\n  KeygenThresholdsStddevPopulationPendingAsc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_PENDING_ASC',\n  KeygenThresholdsStddevPopulationPendingDesc = 'KEYGEN_THRESHOLDS_STDDEV_POPULATION_PENDING_DESC',\n  KeygenThresholdsStddevSampleBlockIdAsc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  KeygenThresholdsStddevSampleBlockIdDesc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  KeygenThresholdsStddevSampleCurrentAsc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_CURRENT_ASC',\n  KeygenThresholdsStddevSampleCurrentDesc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_CURRENT_DESC',\n  KeygenThresholdsStddevSampleIdAsc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_ID_ASC',\n  KeygenThresholdsStddevSampleIdDesc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_ID_DESC',\n  KeygenThresholdsStddevSampleNextAsc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_NEXT_ASC',\n  KeygenThresholdsStddevSampleNextDesc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_NEXT_DESC',\n  KeygenThresholdsStddevSamplePendingAsc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_PENDING_ASC',\n  KeygenThresholdsStddevSamplePendingDesc = 'KEYGEN_THRESHOLDS_STDDEV_SAMPLE_PENDING_DESC',\n  KeygenThresholdsSumBlockIdAsc = 'KEYGEN_THRESHOLDS_SUM_BLOCK_ID_ASC',\n  KeygenThresholdsSumBlockIdDesc = 'KEYGEN_THRESHOLDS_SUM_BLOCK_ID_DESC',\n  KeygenThresholdsSumCurrentAsc = 'KEYGEN_THRESHOLDS_SUM_CURRENT_ASC',\n  KeygenThresholdsSumCurrentDesc = 'KEYGEN_THRESHOLDS_SUM_CURRENT_DESC',\n  KeygenThresholdsSumIdAsc = 'KEYGEN_THRESHOLDS_SUM_ID_ASC',\n  KeygenThresholdsSumIdDesc = 'KEYGEN_THRESHOLDS_SUM_ID_DESC',\n  KeygenThresholdsSumNextAsc = 'KEYGEN_THRESHOLDS_SUM_NEXT_ASC',\n  KeygenThresholdsSumNextDesc = 'KEYGEN_THRESHOLDS_SUM_NEXT_DESC',\n  KeygenThresholdsSumPendingAsc = 'KEYGEN_THRESHOLDS_SUM_PENDING_ASC',\n  KeygenThresholdsSumPendingDesc = 'KEYGEN_THRESHOLDS_SUM_PENDING_DESC',\n  KeygenThresholdsVariancePopulationBlockIdAsc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  KeygenThresholdsVariancePopulationBlockIdDesc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  KeygenThresholdsVariancePopulationCurrentAsc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_CURRENT_ASC',\n  KeygenThresholdsVariancePopulationCurrentDesc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_CURRENT_DESC',\n  KeygenThresholdsVariancePopulationIdAsc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_ID_ASC',\n  KeygenThresholdsVariancePopulationIdDesc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_ID_DESC',\n  KeygenThresholdsVariancePopulationNextAsc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_NEXT_ASC',\n  KeygenThresholdsVariancePopulationNextDesc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_NEXT_DESC',\n  KeygenThresholdsVariancePopulationPendingAsc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_PENDING_ASC',\n  KeygenThresholdsVariancePopulationPendingDesc = 'KEYGEN_THRESHOLDS_VARIANCE_POPULATION_PENDING_DESC',\n  KeygenThresholdsVarianceSampleBlockIdAsc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  KeygenThresholdsVarianceSampleBlockIdDesc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  KeygenThresholdsVarianceSampleCurrentAsc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_CURRENT_ASC',\n  KeygenThresholdsVarianceSampleCurrentDesc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_CURRENT_DESC',\n  KeygenThresholdsVarianceSampleIdAsc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_ID_ASC',\n  KeygenThresholdsVarianceSampleIdDesc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_ID_DESC',\n  KeygenThresholdsVarianceSampleNextAsc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_NEXT_ASC',\n  KeygenThresholdsVarianceSampleNextDesc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_NEXT_DESC',\n  KeygenThresholdsVarianceSamplePendingAsc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_PENDING_ASC',\n  KeygenThresholdsVarianceSamplePendingDesc = 'KEYGEN_THRESHOLDS_VARIANCE_SAMPLE_PENDING_DESC',\n  Natural = 'NATURAL',\n  NumberAsc = 'NUMBER_ASC',\n  NumberDesc = 'NUMBER_DESC',\n  ParentHashAsc = 'PARENT_HASH_ASC',\n  ParentHashDesc = 'PARENT_HASH_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ProposalCountersAverageBlockIdAsc = 'PROPOSAL_COUNTERS_AVERAGE_BLOCK_ID_ASC',\n  ProposalCountersAverageBlockIdDesc = 'PROPOSAL_COUNTERS_AVERAGE_BLOCK_ID_DESC',\n  ProposalCountersAverageBlockNumberAsc = 'PROPOSAL_COUNTERS_AVERAGE_BLOCK_NUMBER_ASC',\n  ProposalCountersAverageBlockNumberDesc = 'PROPOSAL_COUNTERS_AVERAGE_BLOCK_NUMBER_DESC',\n  ProposalCountersAverageIdAsc = 'PROPOSAL_COUNTERS_AVERAGE_ID_ASC',\n  ProposalCountersAverageIdDesc = 'PROPOSAL_COUNTERS_AVERAGE_ID_DESC',\n  ProposalCountersAverageSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_AVERAGE_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersAverageSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_AVERAGE_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersAverageSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_AVERAGE_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersAverageSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_AVERAGE_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersAverageStatusMapAsc = 'PROPOSAL_COUNTERS_AVERAGE_STATUS_MAP_ASC',\n  ProposalCountersAverageStatusMapDesc = 'PROPOSAL_COUNTERS_AVERAGE_STATUS_MAP_DESC',\n  ProposalCountersAverageUnSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_AVERAGE_UN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersAverageUnSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_AVERAGE_UN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersAverageUnSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_AVERAGE_UN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersAverageUnSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_AVERAGE_UN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersCountAsc = 'PROPOSAL_COUNTERS_COUNT_ASC',\n  ProposalCountersCountDesc = 'PROPOSAL_COUNTERS_COUNT_DESC',\n  ProposalCountersDistinctCountBlockIdAsc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  ProposalCountersDistinctCountBlockIdDesc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  ProposalCountersDistinctCountBlockNumberAsc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  ProposalCountersDistinctCountBlockNumberDesc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  ProposalCountersDistinctCountIdAsc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_ID_ASC',\n  ProposalCountersDistinctCountIdDesc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_ID_DESC',\n  ProposalCountersDistinctCountSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersDistinctCountSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersDistinctCountSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersDistinctCountSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersDistinctCountStatusMapAsc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_STATUS_MAP_ASC',\n  ProposalCountersDistinctCountStatusMapDesc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_STATUS_MAP_DESC',\n  ProposalCountersDistinctCountUnSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_UN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersDistinctCountUnSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_UN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersDistinctCountUnSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_UN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersDistinctCountUnSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_DISTINCT_COUNT_UN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersMaxBlockIdAsc = 'PROPOSAL_COUNTERS_MAX_BLOCK_ID_ASC',\n  ProposalCountersMaxBlockIdDesc = 'PROPOSAL_COUNTERS_MAX_BLOCK_ID_DESC',\n  ProposalCountersMaxBlockNumberAsc = 'PROPOSAL_COUNTERS_MAX_BLOCK_NUMBER_ASC',\n  ProposalCountersMaxBlockNumberDesc = 'PROPOSAL_COUNTERS_MAX_BLOCK_NUMBER_DESC',\n  ProposalCountersMaxIdAsc = 'PROPOSAL_COUNTERS_MAX_ID_ASC',\n  ProposalCountersMaxIdDesc = 'PROPOSAL_COUNTERS_MAX_ID_DESC',\n  ProposalCountersMaxSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_MAX_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersMaxSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_MAX_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersMaxSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_MAX_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersMaxSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_MAX_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersMaxStatusMapAsc = 'PROPOSAL_COUNTERS_MAX_STATUS_MAP_ASC',\n  ProposalCountersMaxStatusMapDesc = 'PROPOSAL_COUNTERS_MAX_STATUS_MAP_DESC',\n  ProposalCountersMaxUnSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_MAX_UN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersMaxUnSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_MAX_UN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersMaxUnSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_MAX_UN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersMaxUnSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_MAX_UN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersMinBlockIdAsc = 'PROPOSAL_COUNTERS_MIN_BLOCK_ID_ASC',\n  ProposalCountersMinBlockIdDesc = 'PROPOSAL_COUNTERS_MIN_BLOCK_ID_DESC',\n  ProposalCountersMinBlockNumberAsc = 'PROPOSAL_COUNTERS_MIN_BLOCK_NUMBER_ASC',\n  ProposalCountersMinBlockNumberDesc = 'PROPOSAL_COUNTERS_MIN_BLOCK_NUMBER_DESC',\n  ProposalCountersMinIdAsc = 'PROPOSAL_COUNTERS_MIN_ID_ASC',\n  ProposalCountersMinIdDesc = 'PROPOSAL_COUNTERS_MIN_ID_DESC',\n  ProposalCountersMinSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_MIN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersMinSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_MIN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersMinSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_MIN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersMinSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_MIN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersMinStatusMapAsc = 'PROPOSAL_COUNTERS_MIN_STATUS_MAP_ASC',\n  ProposalCountersMinStatusMapDesc = 'PROPOSAL_COUNTERS_MIN_STATUS_MAP_DESC',\n  ProposalCountersMinUnSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_MIN_UN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersMinUnSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_MIN_UN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersMinUnSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_MIN_UN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersMinUnSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_MIN_UN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersStddevPopulationBlockIdAsc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  ProposalCountersStddevPopulationBlockIdDesc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  ProposalCountersStddevPopulationBlockNumberAsc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalCountersStddevPopulationBlockNumberDesc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalCountersStddevPopulationIdAsc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_ID_ASC',\n  ProposalCountersStddevPopulationIdDesc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_ID_DESC',\n  ProposalCountersStddevPopulationSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersStddevPopulationSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersStddevPopulationSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersStddevPopulationSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersStddevPopulationStatusMapAsc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_STATUS_MAP_ASC',\n  ProposalCountersStddevPopulationStatusMapDesc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_STATUS_MAP_DESC',\n  ProposalCountersStddevPopulationUnSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_UN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersStddevPopulationUnSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_UN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersStddevPopulationUnSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_UN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersStddevPopulationUnSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_STDDEV_POPULATION_UN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersStddevSampleBlockIdAsc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  ProposalCountersStddevSampleBlockIdDesc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  ProposalCountersStddevSampleBlockNumberAsc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalCountersStddevSampleBlockNumberDesc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalCountersStddevSampleIdAsc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_ID_ASC',\n  ProposalCountersStddevSampleIdDesc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_ID_DESC',\n  ProposalCountersStddevSampleSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersStddevSampleSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersStddevSampleSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersStddevSampleSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersStddevSampleStatusMapAsc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_STATUS_MAP_ASC',\n  ProposalCountersStddevSampleStatusMapDesc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_STATUS_MAP_DESC',\n  ProposalCountersStddevSampleUnSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_UN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersStddevSampleUnSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_UN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersStddevSampleUnSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_UN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersStddevSampleUnSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_STDDEV_SAMPLE_UN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersSumBlockIdAsc = 'PROPOSAL_COUNTERS_SUM_BLOCK_ID_ASC',\n  ProposalCountersSumBlockIdDesc = 'PROPOSAL_COUNTERS_SUM_BLOCK_ID_DESC',\n  ProposalCountersSumBlockNumberAsc = 'PROPOSAL_COUNTERS_SUM_BLOCK_NUMBER_ASC',\n  ProposalCountersSumBlockNumberDesc = 'PROPOSAL_COUNTERS_SUM_BLOCK_NUMBER_DESC',\n  ProposalCountersSumIdAsc = 'PROPOSAL_COUNTERS_SUM_ID_ASC',\n  ProposalCountersSumIdDesc = 'PROPOSAL_COUNTERS_SUM_ID_DESC',\n  ProposalCountersSumSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_SUM_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersSumSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_SUM_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersSumSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_SUM_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersSumSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_SUM_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersSumStatusMapAsc = 'PROPOSAL_COUNTERS_SUM_STATUS_MAP_ASC',\n  ProposalCountersSumStatusMapDesc = 'PROPOSAL_COUNTERS_SUM_STATUS_MAP_DESC',\n  ProposalCountersSumUnSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_SUM_UN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersSumUnSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_SUM_UN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersSumUnSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_SUM_UN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersSumUnSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_SUM_UN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersVariancePopulationBlockIdAsc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  ProposalCountersVariancePopulationBlockIdDesc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  ProposalCountersVariancePopulationBlockNumberAsc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalCountersVariancePopulationBlockNumberDesc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalCountersVariancePopulationIdAsc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_ID_ASC',\n  ProposalCountersVariancePopulationIdDesc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_ID_DESC',\n  ProposalCountersVariancePopulationSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersVariancePopulationSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersVariancePopulationSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersVariancePopulationSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersVariancePopulationStatusMapAsc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_STATUS_MAP_ASC',\n  ProposalCountersVariancePopulationStatusMapDesc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_STATUS_MAP_DESC',\n  ProposalCountersVariancePopulationUnSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_UN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersVariancePopulationUnSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_UN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersVariancePopulationUnSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_UN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersVariancePopulationUnSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_VARIANCE_POPULATION_UN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersVarianceSampleBlockIdAsc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  ProposalCountersVarianceSampleBlockIdDesc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  ProposalCountersVarianceSampleBlockNumberAsc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalCountersVarianceSampleBlockNumberDesc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalCountersVarianceSampleIdAsc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_ID_ASC',\n  ProposalCountersVarianceSampleIdDesc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_ID_DESC',\n  ProposalCountersVarianceSampleSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersVarianceSampleSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersVarianceSampleSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersVarianceSampleSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalCountersVarianceSampleStatusMapAsc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_STATUS_MAP_ASC',\n  ProposalCountersVarianceSampleStatusMapDesc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_STATUS_MAP_DESC',\n  ProposalCountersVarianceSampleUnSignedProposalsCountAsc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_UN_SIGNED_PROPOSALS_COUNT_ASC',\n  ProposalCountersVarianceSampleUnSignedProposalsCountDesc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_UN_SIGNED_PROPOSALS_COUNT_DESC',\n  ProposalCountersVarianceSampleUnSignedProposalsMapAsc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_UN_SIGNED_PROPOSALS_MAP_ASC',\n  ProposalCountersVarianceSampleUnSignedProposalsMapDesc = 'PROPOSAL_COUNTERS_VARIANCE_SAMPLE_UN_SIGNED_PROPOSALS_MAP_DESC',\n  ProposalItemsAverageBlockIdAsc = 'PROPOSAL_ITEMS_AVERAGE_BLOCK_ID_ASC',\n  ProposalItemsAverageBlockIdDesc = 'PROPOSAL_ITEMS_AVERAGE_BLOCK_ID_DESC',\n  ProposalItemsAverageBlockNumberAsc = 'PROPOSAL_ITEMS_AVERAGE_BLOCK_NUMBER_ASC',\n  ProposalItemsAverageBlockNumberDesc = 'PROPOSAL_ITEMS_AVERAGE_BLOCK_NUMBER_DESC',\n  ProposalItemsAverageChainIdAsc = 'PROPOSAL_ITEMS_AVERAGE_CHAIN_ID_ASC',\n  ProposalItemsAverageChainIdDesc = 'PROPOSAL_ITEMS_AVERAGE_CHAIN_ID_DESC',\n  ProposalItemsAverageDataAsc = 'PROPOSAL_ITEMS_AVERAGE_DATA_ASC',\n  ProposalItemsAverageDataDesc = 'PROPOSAL_ITEMS_AVERAGE_DATA_DESC',\n  ProposalItemsAverageIdAsc = 'PROPOSAL_ITEMS_AVERAGE_ID_ASC',\n  ProposalItemsAverageIdDesc = 'PROPOSAL_ITEMS_AVERAGE_ID_DESC',\n  ProposalItemsAverageNonceAsc = 'PROPOSAL_ITEMS_AVERAGE_NONCE_ASC',\n  ProposalItemsAverageNonceDesc = 'PROPOSAL_ITEMS_AVERAGE_NONCE_DESC',\n  ProposalItemsAverageRemovedAsc = 'PROPOSAL_ITEMS_AVERAGE_REMOVED_ASC',\n  ProposalItemsAverageRemovedDesc = 'PROPOSAL_ITEMS_AVERAGE_REMOVED_DESC',\n  ProposalItemsAverageSignatureAsc = 'PROPOSAL_ITEMS_AVERAGE_SIGNATURE_ASC',\n  ProposalItemsAverageSignatureDesc = 'PROPOSAL_ITEMS_AVERAGE_SIGNATURE_DESC',\n  ProposalItemsAverageStatusAsc = 'PROPOSAL_ITEMS_AVERAGE_STATUS_ASC',\n  ProposalItemsAverageStatusDesc = 'PROPOSAL_ITEMS_AVERAGE_STATUS_DESC',\n  ProposalItemsAverageTypeAsc = 'PROPOSAL_ITEMS_AVERAGE_TYPE_ASC',\n  ProposalItemsAverageTypeDesc = 'PROPOSAL_ITEMS_AVERAGE_TYPE_DESC',\n  ProposalItemsCountAsc = 'PROPOSAL_ITEMS_COUNT_ASC',\n  ProposalItemsCountDesc = 'PROPOSAL_ITEMS_COUNT_DESC',\n  ProposalItemsDistinctCountBlockIdAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  ProposalItemsDistinctCountBlockIdDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  ProposalItemsDistinctCountBlockNumberAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  ProposalItemsDistinctCountBlockNumberDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  ProposalItemsDistinctCountChainIdAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_CHAIN_ID_ASC',\n  ProposalItemsDistinctCountChainIdDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_CHAIN_ID_DESC',\n  ProposalItemsDistinctCountDataAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_DATA_ASC',\n  ProposalItemsDistinctCountDataDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_DATA_DESC',\n  ProposalItemsDistinctCountIdAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_ID_ASC',\n  ProposalItemsDistinctCountIdDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_ID_DESC',\n  ProposalItemsDistinctCountNonceAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_NONCE_ASC',\n  ProposalItemsDistinctCountNonceDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_NONCE_DESC',\n  ProposalItemsDistinctCountRemovedAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_REMOVED_ASC',\n  ProposalItemsDistinctCountRemovedDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_REMOVED_DESC',\n  ProposalItemsDistinctCountSignatureAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_SIGNATURE_ASC',\n  ProposalItemsDistinctCountSignatureDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_SIGNATURE_DESC',\n  ProposalItemsDistinctCountStatusAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_STATUS_ASC',\n  ProposalItemsDistinctCountStatusDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_STATUS_DESC',\n  ProposalItemsDistinctCountTypeAsc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_TYPE_ASC',\n  ProposalItemsDistinctCountTypeDesc = 'PROPOSAL_ITEMS_DISTINCT_COUNT_TYPE_DESC',\n  ProposalItemsMaxBlockIdAsc = 'PROPOSAL_ITEMS_MAX_BLOCK_ID_ASC',\n  ProposalItemsMaxBlockIdDesc = 'PROPOSAL_ITEMS_MAX_BLOCK_ID_DESC',\n  ProposalItemsMaxBlockNumberAsc = 'PROPOSAL_ITEMS_MAX_BLOCK_NUMBER_ASC',\n  ProposalItemsMaxBlockNumberDesc = 'PROPOSAL_ITEMS_MAX_BLOCK_NUMBER_DESC',\n  ProposalItemsMaxChainIdAsc = 'PROPOSAL_ITEMS_MAX_CHAIN_ID_ASC',\n  ProposalItemsMaxChainIdDesc = 'PROPOSAL_ITEMS_MAX_CHAIN_ID_DESC',\n  ProposalItemsMaxDataAsc = 'PROPOSAL_ITEMS_MAX_DATA_ASC',\n  ProposalItemsMaxDataDesc = 'PROPOSAL_ITEMS_MAX_DATA_DESC',\n  ProposalItemsMaxIdAsc = 'PROPOSAL_ITEMS_MAX_ID_ASC',\n  ProposalItemsMaxIdDesc = 'PROPOSAL_ITEMS_MAX_ID_DESC',\n  ProposalItemsMaxNonceAsc = 'PROPOSAL_ITEMS_MAX_NONCE_ASC',\n  ProposalItemsMaxNonceDesc = 'PROPOSAL_ITEMS_MAX_NONCE_DESC',\n  ProposalItemsMaxRemovedAsc = 'PROPOSAL_ITEMS_MAX_REMOVED_ASC',\n  ProposalItemsMaxRemovedDesc = 'PROPOSAL_ITEMS_MAX_REMOVED_DESC',\n  ProposalItemsMaxSignatureAsc = 'PROPOSAL_ITEMS_MAX_SIGNATURE_ASC',\n  ProposalItemsMaxSignatureDesc = 'PROPOSAL_ITEMS_MAX_SIGNATURE_DESC',\n  ProposalItemsMaxStatusAsc = 'PROPOSAL_ITEMS_MAX_STATUS_ASC',\n  ProposalItemsMaxStatusDesc = 'PROPOSAL_ITEMS_MAX_STATUS_DESC',\n  ProposalItemsMaxTypeAsc = 'PROPOSAL_ITEMS_MAX_TYPE_ASC',\n  ProposalItemsMaxTypeDesc = 'PROPOSAL_ITEMS_MAX_TYPE_DESC',\n  ProposalItemsMinBlockIdAsc = 'PROPOSAL_ITEMS_MIN_BLOCK_ID_ASC',\n  ProposalItemsMinBlockIdDesc = 'PROPOSAL_ITEMS_MIN_BLOCK_ID_DESC',\n  ProposalItemsMinBlockNumberAsc = 'PROPOSAL_ITEMS_MIN_BLOCK_NUMBER_ASC',\n  ProposalItemsMinBlockNumberDesc = 'PROPOSAL_ITEMS_MIN_BLOCK_NUMBER_DESC',\n  ProposalItemsMinChainIdAsc = 'PROPOSAL_ITEMS_MIN_CHAIN_ID_ASC',\n  ProposalItemsMinChainIdDesc = 'PROPOSAL_ITEMS_MIN_CHAIN_ID_DESC',\n  ProposalItemsMinDataAsc = 'PROPOSAL_ITEMS_MIN_DATA_ASC',\n  ProposalItemsMinDataDesc = 'PROPOSAL_ITEMS_MIN_DATA_DESC',\n  ProposalItemsMinIdAsc = 'PROPOSAL_ITEMS_MIN_ID_ASC',\n  ProposalItemsMinIdDesc = 'PROPOSAL_ITEMS_MIN_ID_DESC',\n  ProposalItemsMinNonceAsc = 'PROPOSAL_ITEMS_MIN_NONCE_ASC',\n  ProposalItemsMinNonceDesc = 'PROPOSAL_ITEMS_MIN_NONCE_DESC',\n  ProposalItemsMinRemovedAsc = 'PROPOSAL_ITEMS_MIN_REMOVED_ASC',\n  ProposalItemsMinRemovedDesc = 'PROPOSAL_ITEMS_MIN_REMOVED_DESC',\n  ProposalItemsMinSignatureAsc = 'PROPOSAL_ITEMS_MIN_SIGNATURE_ASC',\n  ProposalItemsMinSignatureDesc = 'PROPOSAL_ITEMS_MIN_SIGNATURE_DESC',\n  ProposalItemsMinStatusAsc = 'PROPOSAL_ITEMS_MIN_STATUS_ASC',\n  ProposalItemsMinStatusDesc = 'PROPOSAL_ITEMS_MIN_STATUS_DESC',\n  ProposalItemsMinTypeAsc = 'PROPOSAL_ITEMS_MIN_TYPE_ASC',\n  ProposalItemsMinTypeDesc = 'PROPOSAL_ITEMS_MIN_TYPE_DESC',\n  ProposalItemsStddevPopulationBlockIdAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  ProposalItemsStddevPopulationBlockIdDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  ProposalItemsStddevPopulationBlockNumberAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalItemsStddevPopulationBlockNumberDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalItemsStddevPopulationChainIdAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_CHAIN_ID_ASC',\n  ProposalItemsStddevPopulationChainIdDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_CHAIN_ID_DESC',\n  ProposalItemsStddevPopulationDataAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_DATA_ASC',\n  ProposalItemsStddevPopulationDataDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_DATA_DESC',\n  ProposalItemsStddevPopulationIdAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_ID_ASC',\n  ProposalItemsStddevPopulationIdDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_ID_DESC',\n  ProposalItemsStddevPopulationNonceAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_NONCE_ASC',\n  ProposalItemsStddevPopulationNonceDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_NONCE_DESC',\n  ProposalItemsStddevPopulationRemovedAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_REMOVED_ASC',\n  ProposalItemsStddevPopulationRemovedDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_REMOVED_DESC',\n  ProposalItemsStddevPopulationSignatureAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_SIGNATURE_ASC',\n  ProposalItemsStddevPopulationSignatureDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_SIGNATURE_DESC',\n  ProposalItemsStddevPopulationStatusAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_STATUS_ASC',\n  ProposalItemsStddevPopulationStatusDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_STATUS_DESC',\n  ProposalItemsStddevPopulationTypeAsc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_TYPE_ASC',\n  ProposalItemsStddevPopulationTypeDesc = 'PROPOSAL_ITEMS_STDDEV_POPULATION_TYPE_DESC',\n  ProposalItemsStddevSampleBlockIdAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  ProposalItemsStddevSampleBlockIdDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  ProposalItemsStddevSampleBlockNumberAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalItemsStddevSampleBlockNumberDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalItemsStddevSampleChainIdAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_CHAIN_ID_ASC',\n  ProposalItemsStddevSampleChainIdDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_CHAIN_ID_DESC',\n  ProposalItemsStddevSampleDataAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_DATA_ASC',\n  ProposalItemsStddevSampleDataDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_DATA_DESC',\n  ProposalItemsStddevSampleIdAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_ID_ASC',\n  ProposalItemsStddevSampleIdDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_ID_DESC',\n  ProposalItemsStddevSampleNonceAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_NONCE_ASC',\n  ProposalItemsStddevSampleNonceDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_NONCE_DESC',\n  ProposalItemsStddevSampleRemovedAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_REMOVED_ASC',\n  ProposalItemsStddevSampleRemovedDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_REMOVED_DESC',\n  ProposalItemsStddevSampleSignatureAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_SIGNATURE_ASC',\n  ProposalItemsStddevSampleSignatureDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_SIGNATURE_DESC',\n  ProposalItemsStddevSampleStatusAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_STATUS_ASC',\n  ProposalItemsStddevSampleStatusDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_STATUS_DESC',\n  ProposalItemsStddevSampleTypeAsc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_TYPE_ASC',\n  ProposalItemsStddevSampleTypeDesc = 'PROPOSAL_ITEMS_STDDEV_SAMPLE_TYPE_DESC',\n  ProposalItemsSumBlockIdAsc = 'PROPOSAL_ITEMS_SUM_BLOCK_ID_ASC',\n  ProposalItemsSumBlockIdDesc = 'PROPOSAL_ITEMS_SUM_BLOCK_ID_DESC',\n  ProposalItemsSumBlockNumberAsc = 'PROPOSAL_ITEMS_SUM_BLOCK_NUMBER_ASC',\n  ProposalItemsSumBlockNumberDesc = 'PROPOSAL_ITEMS_SUM_BLOCK_NUMBER_DESC',\n  ProposalItemsSumChainIdAsc = 'PROPOSAL_ITEMS_SUM_CHAIN_ID_ASC',\n  ProposalItemsSumChainIdDesc = 'PROPOSAL_ITEMS_SUM_CHAIN_ID_DESC',\n  ProposalItemsSumDataAsc = 'PROPOSAL_ITEMS_SUM_DATA_ASC',\n  ProposalItemsSumDataDesc = 'PROPOSAL_ITEMS_SUM_DATA_DESC',\n  ProposalItemsSumIdAsc = 'PROPOSAL_ITEMS_SUM_ID_ASC',\n  ProposalItemsSumIdDesc = 'PROPOSAL_ITEMS_SUM_ID_DESC',\n  ProposalItemsSumNonceAsc = 'PROPOSAL_ITEMS_SUM_NONCE_ASC',\n  ProposalItemsSumNonceDesc = 'PROPOSAL_ITEMS_SUM_NONCE_DESC',\n  ProposalItemsSumRemovedAsc = 'PROPOSAL_ITEMS_SUM_REMOVED_ASC',\n  ProposalItemsSumRemovedDesc = 'PROPOSAL_ITEMS_SUM_REMOVED_DESC',\n  ProposalItemsSumSignatureAsc = 'PROPOSAL_ITEMS_SUM_SIGNATURE_ASC',\n  ProposalItemsSumSignatureDesc = 'PROPOSAL_ITEMS_SUM_SIGNATURE_DESC',\n  ProposalItemsSumStatusAsc = 'PROPOSAL_ITEMS_SUM_STATUS_ASC',\n  ProposalItemsSumStatusDesc = 'PROPOSAL_ITEMS_SUM_STATUS_DESC',\n  ProposalItemsSumTypeAsc = 'PROPOSAL_ITEMS_SUM_TYPE_ASC',\n  ProposalItemsSumTypeDesc = 'PROPOSAL_ITEMS_SUM_TYPE_DESC',\n  ProposalItemsVariancePopulationBlockIdAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  ProposalItemsVariancePopulationBlockIdDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  ProposalItemsVariancePopulationBlockNumberAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalItemsVariancePopulationBlockNumberDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalItemsVariancePopulationChainIdAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_CHAIN_ID_ASC',\n  ProposalItemsVariancePopulationChainIdDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_CHAIN_ID_DESC',\n  ProposalItemsVariancePopulationDataAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_DATA_ASC',\n  ProposalItemsVariancePopulationDataDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_DATA_DESC',\n  ProposalItemsVariancePopulationIdAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_ID_ASC',\n  ProposalItemsVariancePopulationIdDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_ID_DESC',\n  ProposalItemsVariancePopulationNonceAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_NONCE_ASC',\n  ProposalItemsVariancePopulationNonceDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_NONCE_DESC',\n  ProposalItemsVariancePopulationRemovedAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_REMOVED_ASC',\n  ProposalItemsVariancePopulationRemovedDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_REMOVED_DESC',\n  ProposalItemsVariancePopulationSignatureAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_SIGNATURE_ASC',\n  ProposalItemsVariancePopulationSignatureDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_SIGNATURE_DESC',\n  ProposalItemsVariancePopulationStatusAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_STATUS_ASC',\n  ProposalItemsVariancePopulationStatusDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_STATUS_DESC',\n  ProposalItemsVariancePopulationTypeAsc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_TYPE_ASC',\n  ProposalItemsVariancePopulationTypeDesc = 'PROPOSAL_ITEMS_VARIANCE_POPULATION_TYPE_DESC',\n  ProposalItemsVarianceSampleBlockIdAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  ProposalItemsVarianceSampleBlockIdDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  ProposalItemsVarianceSampleBlockNumberAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalItemsVarianceSampleBlockNumberDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalItemsVarianceSampleChainIdAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_CHAIN_ID_ASC',\n  ProposalItemsVarianceSampleChainIdDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_CHAIN_ID_DESC',\n  ProposalItemsVarianceSampleDataAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_DATA_ASC',\n  ProposalItemsVarianceSampleDataDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_DATA_DESC',\n  ProposalItemsVarianceSampleIdAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_ID_ASC',\n  ProposalItemsVarianceSampleIdDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_ID_DESC',\n  ProposalItemsVarianceSampleNonceAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_NONCE_ASC',\n  ProposalItemsVarianceSampleNonceDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_NONCE_DESC',\n  ProposalItemsVarianceSampleRemovedAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_REMOVED_ASC',\n  ProposalItemsVarianceSampleRemovedDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_REMOVED_DESC',\n  ProposalItemsVarianceSampleSignatureAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_SIGNATURE_ASC',\n  ProposalItemsVarianceSampleSignatureDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_SIGNATURE_DESC',\n  ProposalItemsVarianceSampleStatusAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_STATUS_ASC',\n  ProposalItemsVarianceSampleStatusDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_STATUS_DESC',\n  ProposalItemsVarianceSampleTypeAsc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_TYPE_ASC',\n  ProposalItemsVarianceSampleTypeDesc = 'PROPOSAL_ITEMS_VARIANCE_SAMPLE_TYPE_DESC',\n  ProposalVotesAverageBlockIdAsc = 'PROPOSAL_VOTES_AVERAGE_BLOCK_ID_ASC',\n  ProposalVotesAverageBlockIdDesc = 'PROPOSAL_VOTES_AVERAGE_BLOCK_ID_DESC',\n  ProposalVotesAverageBlockNumberAsc = 'PROPOSAL_VOTES_AVERAGE_BLOCK_NUMBER_ASC',\n  ProposalVotesAverageBlockNumberDesc = 'PROPOSAL_VOTES_AVERAGE_BLOCK_NUMBER_DESC',\n  ProposalVotesAverageIdAsc = 'PROPOSAL_VOTES_AVERAGE_ID_ASC',\n  ProposalVotesAverageIdDesc = 'PROPOSAL_VOTES_AVERAGE_ID_DESC',\n  ProposalVotesAverageProposalIdAsc = 'PROPOSAL_VOTES_AVERAGE_PROPOSAL_ID_ASC',\n  ProposalVotesAverageProposalIdDesc = 'PROPOSAL_VOTES_AVERAGE_PROPOSAL_ID_DESC',\n  ProposalVotesAverageVoterIdAsc = 'PROPOSAL_VOTES_AVERAGE_VOTER_ID_ASC',\n  ProposalVotesAverageVoterIdDesc = 'PROPOSAL_VOTES_AVERAGE_VOTER_ID_DESC',\n  ProposalVotesAverageVoteStatusAsc = 'PROPOSAL_VOTES_AVERAGE_VOTE_STATUS_ASC',\n  ProposalVotesAverageVoteStatusDesc = 'PROPOSAL_VOTES_AVERAGE_VOTE_STATUS_DESC',\n  ProposalVotesCountAsc = 'PROPOSAL_VOTES_COUNT_ASC',\n  ProposalVotesCountDesc = 'PROPOSAL_VOTES_COUNT_DESC',\n  ProposalVotesDistinctCountBlockIdAsc = 'PROPOSAL_VOTES_DISTINCT_COUNT_BLOCK_ID_ASC',\n  ProposalVotesDistinctCountBlockIdDesc = 'PROPOSAL_VOTES_DISTINCT_COUNT_BLOCK_ID_DESC',\n  ProposalVotesDistinctCountBlockNumberAsc = 'PROPOSAL_VOTES_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  ProposalVotesDistinctCountBlockNumberDesc = 'PROPOSAL_VOTES_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  ProposalVotesDistinctCountIdAsc = 'PROPOSAL_VOTES_DISTINCT_COUNT_ID_ASC',\n  ProposalVotesDistinctCountIdDesc = 'PROPOSAL_VOTES_DISTINCT_COUNT_ID_DESC',\n  ProposalVotesDistinctCountProposalIdAsc = 'PROPOSAL_VOTES_DISTINCT_COUNT_PROPOSAL_ID_ASC',\n  ProposalVotesDistinctCountProposalIdDesc = 'PROPOSAL_VOTES_DISTINCT_COUNT_PROPOSAL_ID_DESC',\n  ProposalVotesDistinctCountVoterIdAsc = 'PROPOSAL_VOTES_DISTINCT_COUNT_VOTER_ID_ASC',\n  ProposalVotesDistinctCountVoterIdDesc = 'PROPOSAL_VOTES_DISTINCT_COUNT_VOTER_ID_DESC',\n  ProposalVotesDistinctCountVoteStatusAsc = 'PROPOSAL_VOTES_DISTINCT_COUNT_VOTE_STATUS_ASC',\n  ProposalVotesDistinctCountVoteStatusDesc = 'PROPOSAL_VOTES_DISTINCT_COUNT_VOTE_STATUS_DESC',\n  ProposalVotesMaxBlockIdAsc = 'PROPOSAL_VOTES_MAX_BLOCK_ID_ASC',\n  ProposalVotesMaxBlockIdDesc = 'PROPOSAL_VOTES_MAX_BLOCK_ID_DESC',\n  ProposalVotesMaxBlockNumberAsc = 'PROPOSAL_VOTES_MAX_BLOCK_NUMBER_ASC',\n  ProposalVotesMaxBlockNumberDesc = 'PROPOSAL_VOTES_MAX_BLOCK_NUMBER_DESC',\n  ProposalVotesMaxIdAsc = 'PROPOSAL_VOTES_MAX_ID_ASC',\n  ProposalVotesMaxIdDesc = 'PROPOSAL_VOTES_MAX_ID_DESC',\n  ProposalVotesMaxProposalIdAsc = 'PROPOSAL_VOTES_MAX_PROPOSAL_ID_ASC',\n  ProposalVotesMaxProposalIdDesc = 'PROPOSAL_VOTES_MAX_PROPOSAL_ID_DESC',\n  ProposalVotesMaxVoterIdAsc = 'PROPOSAL_VOTES_MAX_VOTER_ID_ASC',\n  ProposalVotesMaxVoterIdDesc = 'PROPOSAL_VOTES_MAX_VOTER_ID_DESC',\n  ProposalVotesMaxVoteStatusAsc = 'PROPOSAL_VOTES_MAX_VOTE_STATUS_ASC',\n  ProposalVotesMaxVoteStatusDesc = 'PROPOSAL_VOTES_MAX_VOTE_STATUS_DESC',\n  ProposalVotesMinBlockIdAsc = 'PROPOSAL_VOTES_MIN_BLOCK_ID_ASC',\n  ProposalVotesMinBlockIdDesc = 'PROPOSAL_VOTES_MIN_BLOCK_ID_DESC',\n  ProposalVotesMinBlockNumberAsc = 'PROPOSAL_VOTES_MIN_BLOCK_NUMBER_ASC',\n  ProposalVotesMinBlockNumberDesc = 'PROPOSAL_VOTES_MIN_BLOCK_NUMBER_DESC',\n  ProposalVotesMinIdAsc = 'PROPOSAL_VOTES_MIN_ID_ASC',\n  ProposalVotesMinIdDesc = 'PROPOSAL_VOTES_MIN_ID_DESC',\n  ProposalVotesMinProposalIdAsc = 'PROPOSAL_VOTES_MIN_PROPOSAL_ID_ASC',\n  ProposalVotesMinProposalIdDesc = 'PROPOSAL_VOTES_MIN_PROPOSAL_ID_DESC',\n  ProposalVotesMinVoterIdAsc = 'PROPOSAL_VOTES_MIN_VOTER_ID_ASC',\n  ProposalVotesMinVoterIdDesc = 'PROPOSAL_VOTES_MIN_VOTER_ID_DESC',\n  ProposalVotesMinVoteStatusAsc = 'PROPOSAL_VOTES_MIN_VOTE_STATUS_ASC',\n  ProposalVotesMinVoteStatusDesc = 'PROPOSAL_VOTES_MIN_VOTE_STATUS_DESC',\n  ProposalVotesStddevPopulationBlockIdAsc = 'PROPOSAL_VOTES_STDDEV_POPULATION_BLOCK_ID_ASC',\n  ProposalVotesStddevPopulationBlockIdDesc = 'PROPOSAL_VOTES_STDDEV_POPULATION_BLOCK_ID_DESC',\n  ProposalVotesStddevPopulationBlockNumberAsc = 'PROPOSAL_VOTES_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalVotesStddevPopulationBlockNumberDesc = 'PROPOSAL_VOTES_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalVotesStddevPopulationIdAsc = 'PROPOSAL_VOTES_STDDEV_POPULATION_ID_ASC',\n  ProposalVotesStddevPopulationIdDesc = 'PROPOSAL_VOTES_STDDEV_POPULATION_ID_DESC',\n  ProposalVotesStddevPopulationProposalIdAsc = 'PROPOSAL_VOTES_STDDEV_POPULATION_PROPOSAL_ID_ASC',\n  ProposalVotesStddevPopulationProposalIdDesc = 'PROPOSAL_VOTES_STDDEV_POPULATION_PROPOSAL_ID_DESC',\n  ProposalVotesStddevPopulationVoterIdAsc = 'PROPOSAL_VOTES_STDDEV_POPULATION_VOTER_ID_ASC',\n  ProposalVotesStddevPopulationVoterIdDesc = 'PROPOSAL_VOTES_STDDEV_POPULATION_VOTER_ID_DESC',\n  ProposalVotesStddevPopulationVoteStatusAsc = 'PROPOSAL_VOTES_STDDEV_POPULATION_VOTE_STATUS_ASC',\n  ProposalVotesStddevPopulationVoteStatusDesc = 'PROPOSAL_VOTES_STDDEV_POPULATION_VOTE_STATUS_DESC',\n  ProposalVotesStddevSampleBlockIdAsc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  ProposalVotesStddevSampleBlockIdDesc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  ProposalVotesStddevSampleBlockNumberAsc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalVotesStddevSampleBlockNumberDesc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalVotesStddevSampleIdAsc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_ID_ASC',\n  ProposalVotesStddevSampleIdDesc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_ID_DESC',\n  ProposalVotesStddevSampleProposalIdAsc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_PROPOSAL_ID_ASC',\n  ProposalVotesStddevSampleProposalIdDesc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_PROPOSAL_ID_DESC',\n  ProposalVotesStddevSampleVoterIdAsc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_VOTER_ID_ASC',\n  ProposalVotesStddevSampleVoterIdDesc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_VOTER_ID_DESC',\n  ProposalVotesStddevSampleVoteStatusAsc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_VOTE_STATUS_ASC',\n  ProposalVotesStddevSampleVoteStatusDesc = 'PROPOSAL_VOTES_STDDEV_SAMPLE_VOTE_STATUS_DESC',\n  ProposalVotesSumBlockIdAsc = 'PROPOSAL_VOTES_SUM_BLOCK_ID_ASC',\n  ProposalVotesSumBlockIdDesc = 'PROPOSAL_VOTES_SUM_BLOCK_ID_DESC',\n  ProposalVotesSumBlockNumberAsc = 'PROPOSAL_VOTES_SUM_BLOCK_NUMBER_ASC',\n  ProposalVotesSumBlockNumberDesc = 'PROPOSAL_VOTES_SUM_BLOCK_NUMBER_DESC',\n  ProposalVotesSumIdAsc = 'PROPOSAL_VOTES_SUM_ID_ASC',\n  ProposalVotesSumIdDesc = 'PROPOSAL_VOTES_SUM_ID_DESC',\n  ProposalVotesSumProposalIdAsc = 'PROPOSAL_VOTES_SUM_PROPOSAL_ID_ASC',\n  ProposalVotesSumProposalIdDesc = 'PROPOSAL_VOTES_SUM_PROPOSAL_ID_DESC',\n  ProposalVotesSumVoterIdAsc = 'PROPOSAL_VOTES_SUM_VOTER_ID_ASC',\n  ProposalVotesSumVoterIdDesc = 'PROPOSAL_VOTES_SUM_VOTER_ID_DESC',\n  ProposalVotesSumVoteStatusAsc = 'PROPOSAL_VOTES_SUM_VOTE_STATUS_ASC',\n  ProposalVotesSumVoteStatusDesc = 'PROPOSAL_VOTES_SUM_VOTE_STATUS_DESC',\n  ProposalVotesVariancePopulationBlockIdAsc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  ProposalVotesVariancePopulationBlockIdDesc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  ProposalVotesVariancePopulationBlockNumberAsc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalVotesVariancePopulationBlockNumberDesc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalVotesVariancePopulationIdAsc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_ID_ASC',\n  ProposalVotesVariancePopulationIdDesc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_ID_DESC',\n  ProposalVotesVariancePopulationProposalIdAsc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_PROPOSAL_ID_ASC',\n  ProposalVotesVariancePopulationProposalIdDesc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_PROPOSAL_ID_DESC',\n  ProposalVotesVariancePopulationVoterIdAsc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_VOTER_ID_ASC',\n  ProposalVotesVariancePopulationVoterIdDesc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_VOTER_ID_DESC',\n  ProposalVotesVariancePopulationVoteStatusAsc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_VOTE_STATUS_ASC',\n  ProposalVotesVariancePopulationVoteStatusDesc = 'PROPOSAL_VOTES_VARIANCE_POPULATION_VOTE_STATUS_DESC',\n  ProposalVotesVarianceSampleBlockIdAsc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  ProposalVotesVarianceSampleBlockIdDesc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  ProposalVotesVarianceSampleBlockNumberAsc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalVotesVarianceSampleBlockNumberDesc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalVotesVarianceSampleIdAsc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_ID_ASC',\n  ProposalVotesVarianceSampleIdDesc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_ID_DESC',\n  ProposalVotesVarianceSampleProposalIdAsc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_PROPOSAL_ID_ASC',\n  ProposalVotesVarianceSampleProposalIdDesc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_PROPOSAL_ID_DESC',\n  ProposalVotesVarianceSampleVoterIdAsc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_VOTER_ID_ASC',\n  ProposalVotesVarianceSampleVoterIdDesc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_VOTER_ID_DESC',\n  ProposalVotesVarianceSampleVoteStatusAsc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_VOTE_STATUS_ASC',\n  ProposalVotesVarianceSampleVoteStatusDesc = 'PROPOSAL_VOTES_VARIANCE_SAMPLE_VOTE_STATUS_DESC',\n  ProposerThresholdsAverageBlockIdAsc = 'PROPOSER_THRESHOLDS_AVERAGE_BLOCK_ID_ASC',\n  ProposerThresholdsAverageBlockIdDesc = 'PROPOSER_THRESHOLDS_AVERAGE_BLOCK_ID_DESC',\n  ProposerThresholdsAverageIdAsc = 'PROPOSER_THRESHOLDS_AVERAGE_ID_ASC',\n  ProposerThresholdsAverageIdDesc = 'PROPOSER_THRESHOLDS_AVERAGE_ID_DESC',\n  ProposerThresholdsAverageValueAsc = 'PROPOSER_THRESHOLDS_AVERAGE_VALUE_ASC',\n  ProposerThresholdsAverageValueDesc = 'PROPOSER_THRESHOLDS_AVERAGE_VALUE_DESC',\n  ProposerThresholdsCountAsc = 'PROPOSER_THRESHOLDS_COUNT_ASC',\n  ProposerThresholdsCountDesc = 'PROPOSER_THRESHOLDS_COUNT_DESC',\n  ProposerThresholdsDistinctCountBlockIdAsc = 'PROPOSER_THRESHOLDS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  ProposerThresholdsDistinctCountBlockIdDesc = 'PROPOSER_THRESHOLDS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  ProposerThresholdsDistinctCountIdAsc = 'PROPOSER_THRESHOLDS_DISTINCT_COUNT_ID_ASC',\n  ProposerThresholdsDistinctCountIdDesc = 'PROPOSER_THRESHOLDS_DISTINCT_COUNT_ID_DESC',\n  ProposerThresholdsDistinctCountValueAsc = 'PROPOSER_THRESHOLDS_DISTINCT_COUNT_VALUE_ASC',\n  ProposerThresholdsDistinctCountValueDesc = 'PROPOSER_THRESHOLDS_DISTINCT_COUNT_VALUE_DESC',\n  ProposerThresholdsMaxBlockIdAsc = 'PROPOSER_THRESHOLDS_MAX_BLOCK_ID_ASC',\n  ProposerThresholdsMaxBlockIdDesc = 'PROPOSER_THRESHOLDS_MAX_BLOCK_ID_DESC',\n  ProposerThresholdsMaxIdAsc = 'PROPOSER_THRESHOLDS_MAX_ID_ASC',\n  ProposerThresholdsMaxIdDesc = 'PROPOSER_THRESHOLDS_MAX_ID_DESC',\n  ProposerThresholdsMaxValueAsc = 'PROPOSER_THRESHOLDS_MAX_VALUE_ASC',\n  ProposerThresholdsMaxValueDesc = 'PROPOSER_THRESHOLDS_MAX_VALUE_DESC',\n  ProposerThresholdsMinBlockIdAsc = 'PROPOSER_THRESHOLDS_MIN_BLOCK_ID_ASC',\n  ProposerThresholdsMinBlockIdDesc = 'PROPOSER_THRESHOLDS_MIN_BLOCK_ID_DESC',\n  ProposerThresholdsMinIdAsc = 'PROPOSER_THRESHOLDS_MIN_ID_ASC',\n  ProposerThresholdsMinIdDesc = 'PROPOSER_THRESHOLDS_MIN_ID_DESC',\n  ProposerThresholdsMinValueAsc = 'PROPOSER_THRESHOLDS_MIN_VALUE_ASC',\n  ProposerThresholdsMinValueDesc = 'PROPOSER_THRESHOLDS_MIN_VALUE_DESC',\n  ProposerThresholdsStddevPopulationBlockIdAsc = 'PROPOSER_THRESHOLDS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  ProposerThresholdsStddevPopulationBlockIdDesc = 'PROPOSER_THRESHOLDS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  ProposerThresholdsStddevPopulationIdAsc = 'PROPOSER_THRESHOLDS_STDDEV_POPULATION_ID_ASC',\n  ProposerThresholdsStddevPopulationIdDesc = 'PROPOSER_THRESHOLDS_STDDEV_POPULATION_ID_DESC',\n  ProposerThresholdsStddevPopulationValueAsc = 'PROPOSER_THRESHOLDS_STDDEV_POPULATION_VALUE_ASC',\n  ProposerThresholdsStddevPopulationValueDesc = 'PROPOSER_THRESHOLDS_STDDEV_POPULATION_VALUE_DESC',\n  ProposerThresholdsStddevSampleBlockIdAsc = 'PROPOSER_THRESHOLDS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  ProposerThresholdsStddevSampleBlockIdDesc = 'PROPOSER_THRESHOLDS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  ProposerThresholdsStddevSampleIdAsc = 'PROPOSER_THRESHOLDS_STDDEV_SAMPLE_ID_ASC',\n  ProposerThresholdsStddevSampleIdDesc = 'PROPOSER_THRESHOLDS_STDDEV_SAMPLE_ID_DESC',\n  ProposerThresholdsStddevSampleValueAsc = 'PROPOSER_THRESHOLDS_STDDEV_SAMPLE_VALUE_ASC',\n  ProposerThresholdsStddevSampleValueDesc = 'PROPOSER_THRESHOLDS_STDDEV_SAMPLE_VALUE_DESC',\n  ProposerThresholdsSumBlockIdAsc = 'PROPOSER_THRESHOLDS_SUM_BLOCK_ID_ASC',\n  ProposerThresholdsSumBlockIdDesc = 'PROPOSER_THRESHOLDS_SUM_BLOCK_ID_DESC',\n  ProposerThresholdsSumIdAsc = 'PROPOSER_THRESHOLDS_SUM_ID_ASC',\n  ProposerThresholdsSumIdDesc = 'PROPOSER_THRESHOLDS_SUM_ID_DESC',\n  ProposerThresholdsSumValueAsc = 'PROPOSER_THRESHOLDS_SUM_VALUE_ASC',\n  ProposerThresholdsSumValueDesc = 'PROPOSER_THRESHOLDS_SUM_VALUE_DESC',\n  ProposerThresholdsVariancePopulationBlockIdAsc = 'PROPOSER_THRESHOLDS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  ProposerThresholdsVariancePopulationBlockIdDesc = 'PROPOSER_THRESHOLDS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  ProposerThresholdsVariancePopulationIdAsc = 'PROPOSER_THRESHOLDS_VARIANCE_POPULATION_ID_ASC',\n  ProposerThresholdsVariancePopulationIdDesc = 'PROPOSER_THRESHOLDS_VARIANCE_POPULATION_ID_DESC',\n  ProposerThresholdsVariancePopulationValueAsc = 'PROPOSER_THRESHOLDS_VARIANCE_POPULATION_VALUE_ASC',\n  ProposerThresholdsVariancePopulationValueDesc = 'PROPOSER_THRESHOLDS_VARIANCE_POPULATION_VALUE_DESC',\n  ProposerThresholdsVarianceSampleBlockIdAsc = 'PROPOSER_THRESHOLDS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  ProposerThresholdsVarianceSampleBlockIdDesc = 'PROPOSER_THRESHOLDS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  ProposerThresholdsVarianceSampleIdAsc = 'PROPOSER_THRESHOLDS_VARIANCE_SAMPLE_ID_ASC',\n  ProposerThresholdsVarianceSampleIdDesc = 'PROPOSER_THRESHOLDS_VARIANCE_SAMPLE_ID_DESC',\n  ProposerThresholdsVarianceSampleValueAsc = 'PROPOSER_THRESHOLDS_VARIANCE_SAMPLE_VALUE_ASC',\n  ProposerThresholdsVarianceSampleValueDesc = 'PROPOSER_THRESHOLDS_VARIANCE_SAMPLE_VALUE_DESC',\n  PublicKeysAverageBlockIdAsc = 'PUBLIC_KEYS_AVERAGE_BLOCK_ID_ASC',\n  PublicKeysAverageBlockIdDesc = 'PUBLIC_KEYS_AVERAGE_BLOCK_ID_DESC',\n  PublicKeysAverageCompressedAsc = 'PUBLIC_KEYS_AVERAGE_COMPRESSED_ASC',\n  PublicKeysAverageCompressedDesc = 'PUBLIC_KEYS_AVERAGE_COMPRESSED_DESC',\n  PublicKeysAverageHistoryAsc = 'PUBLIC_KEYS_AVERAGE_HISTORY_ASC',\n  PublicKeysAverageHistoryDesc = 'PUBLIC_KEYS_AVERAGE_HISTORY_DESC',\n  PublicKeysAverageIdAsc = 'PUBLIC_KEYS_AVERAGE_ID_ASC',\n  PublicKeysAverageIdDesc = 'PUBLIC_KEYS_AVERAGE_ID_DESC',\n  PublicKeysAverageUncompressedAsc = 'PUBLIC_KEYS_AVERAGE_UNCOMPRESSED_ASC',\n  PublicKeysAverageUncompressedDesc = 'PUBLIC_KEYS_AVERAGE_UNCOMPRESSED_DESC',\n  PublicKeysCountAsc = 'PUBLIC_KEYS_COUNT_ASC',\n  PublicKeysCountDesc = 'PUBLIC_KEYS_COUNT_DESC',\n  PublicKeysDistinctCountBlockIdAsc = 'PUBLIC_KEYS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  PublicKeysDistinctCountBlockIdDesc = 'PUBLIC_KEYS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  PublicKeysDistinctCountCompressedAsc = 'PUBLIC_KEYS_DISTINCT_COUNT_COMPRESSED_ASC',\n  PublicKeysDistinctCountCompressedDesc = 'PUBLIC_KEYS_DISTINCT_COUNT_COMPRESSED_DESC',\n  PublicKeysDistinctCountHistoryAsc = 'PUBLIC_KEYS_DISTINCT_COUNT_HISTORY_ASC',\n  PublicKeysDistinctCountHistoryDesc = 'PUBLIC_KEYS_DISTINCT_COUNT_HISTORY_DESC',\n  PublicKeysDistinctCountIdAsc = 'PUBLIC_KEYS_DISTINCT_COUNT_ID_ASC',\n  PublicKeysDistinctCountIdDesc = 'PUBLIC_KEYS_DISTINCT_COUNT_ID_DESC',\n  PublicKeysDistinctCountUncompressedAsc = 'PUBLIC_KEYS_DISTINCT_COUNT_UNCOMPRESSED_ASC',\n  PublicKeysDistinctCountUncompressedDesc = 'PUBLIC_KEYS_DISTINCT_COUNT_UNCOMPRESSED_DESC',\n  PublicKeysMaxBlockIdAsc = 'PUBLIC_KEYS_MAX_BLOCK_ID_ASC',\n  PublicKeysMaxBlockIdDesc = 'PUBLIC_KEYS_MAX_BLOCK_ID_DESC',\n  PublicKeysMaxCompressedAsc = 'PUBLIC_KEYS_MAX_COMPRESSED_ASC',\n  PublicKeysMaxCompressedDesc = 'PUBLIC_KEYS_MAX_COMPRESSED_DESC',\n  PublicKeysMaxHistoryAsc = 'PUBLIC_KEYS_MAX_HISTORY_ASC',\n  PublicKeysMaxHistoryDesc = 'PUBLIC_KEYS_MAX_HISTORY_DESC',\n  PublicKeysMaxIdAsc = 'PUBLIC_KEYS_MAX_ID_ASC',\n  PublicKeysMaxIdDesc = 'PUBLIC_KEYS_MAX_ID_DESC',\n  PublicKeysMaxUncompressedAsc = 'PUBLIC_KEYS_MAX_UNCOMPRESSED_ASC',\n  PublicKeysMaxUncompressedDesc = 'PUBLIC_KEYS_MAX_UNCOMPRESSED_DESC',\n  PublicKeysMinBlockIdAsc = 'PUBLIC_KEYS_MIN_BLOCK_ID_ASC',\n  PublicKeysMinBlockIdDesc = 'PUBLIC_KEYS_MIN_BLOCK_ID_DESC',\n  PublicKeysMinCompressedAsc = 'PUBLIC_KEYS_MIN_COMPRESSED_ASC',\n  PublicKeysMinCompressedDesc = 'PUBLIC_KEYS_MIN_COMPRESSED_DESC',\n  PublicKeysMinHistoryAsc = 'PUBLIC_KEYS_MIN_HISTORY_ASC',\n  PublicKeysMinHistoryDesc = 'PUBLIC_KEYS_MIN_HISTORY_DESC',\n  PublicKeysMinIdAsc = 'PUBLIC_KEYS_MIN_ID_ASC',\n  PublicKeysMinIdDesc = 'PUBLIC_KEYS_MIN_ID_DESC',\n  PublicKeysMinUncompressedAsc = 'PUBLIC_KEYS_MIN_UNCOMPRESSED_ASC',\n  PublicKeysMinUncompressedDesc = 'PUBLIC_KEYS_MIN_UNCOMPRESSED_DESC',\n  PublicKeysStddevPopulationBlockIdAsc = 'PUBLIC_KEYS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  PublicKeysStddevPopulationBlockIdDesc = 'PUBLIC_KEYS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  PublicKeysStddevPopulationCompressedAsc = 'PUBLIC_KEYS_STDDEV_POPULATION_COMPRESSED_ASC',\n  PublicKeysStddevPopulationCompressedDesc = 'PUBLIC_KEYS_STDDEV_POPULATION_COMPRESSED_DESC',\n  PublicKeysStddevPopulationHistoryAsc = 'PUBLIC_KEYS_STDDEV_POPULATION_HISTORY_ASC',\n  PublicKeysStddevPopulationHistoryDesc = 'PUBLIC_KEYS_STDDEV_POPULATION_HISTORY_DESC',\n  PublicKeysStddevPopulationIdAsc = 'PUBLIC_KEYS_STDDEV_POPULATION_ID_ASC',\n  PublicKeysStddevPopulationIdDesc = 'PUBLIC_KEYS_STDDEV_POPULATION_ID_DESC',\n  PublicKeysStddevPopulationUncompressedAsc = 'PUBLIC_KEYS_STDDEV_POPULATION_UNCOMPRESSED_ASC',\n  PublicKeysStddevPopulationUncompressedDesc = 'PUBLIC_KEYS_STDDEV_POPULATION_UNCOMPRESSED_DESC',\n  PublicKeysStddevSampleBlockIdAsc = 'PUBLIC_KEYS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  PublicKeysStddevSampleBlockIdDesc = 'PUBLIC_KEYS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  PublicKeysStddevSampleCompressedAsc = 'PUBLIC_KEYS_STDDEV_SAMPLE_COMPRESSED_ASC',\n  PublicKeysStddevSampleCompressedDesc = 'PUBLIC_KEYS_STDDEV_SAMPLE_COMPRESSED_DESC',\n  PublicKeysStddevSampleHistoryAsc = 'PUBLIC_KEYS_STDDEV_SAMPLE_HISTORY_ASC',\n  PublicKeysStddevSampleHistoryDesc = 'PUBLIC_KEYS_STDDEV_SAMPLE_HISTORY_DESC',\n  PublicKeysStddevSampleIdAsc = 'PUBLIC_KEYS_STDDEV_SAMPLE_ID_ASC',\n  PublicKeysStddevSampleIdDesc = 'PUBLIC_KEYS_STDDEV_SAMPLE_ID_DESC',\n  PublicKeysStddevSampleUncompressedAsc = 'PUBLIC_KEYS_STDDEV_SAMPLE_UNCOMPRESSED_ASC',\n  PublicKeysStddevSampleUncompressedDesc = 'PUBLIC_KEYS_STDDEV_SAMPLE_UNCOMPRESSED_DESC',\n  PublicKeysSumBlockIdAsc = 'PUBLIC_KEYS_SUM_BLOCK_ID_ASC',\n  PublicKeysSumBlockIdDesc = 'PUBLIC_KEYS_SUM_BLOCK_ID_DESC',\n  PublicKeysSumCompressedAsc = 'PUBLIC_KEYS_SUM_COMPRESSED_ASC',\n  PublicKeysSumCompressedDesc = 'PUBLIC_KEYS_SUM_COMPRESSED_DESC',\n  PublicKeysSumHistoryAsc = 'PUBLIC_KEYS_SUM_HISTORY_ASC',\n  PublicKeysSumHistoryDesc = 'PUBLIC_KEYS_SUM_HISTORY_DESC',\n  PublicKeysSumIdAsc = 'PUBLIC_KEYS_SUM_ID_ASC',\n  PublicKeysSumIdDesc = 'PUBLIC_KEYS_SUM_ID_DESC',\n  PublicKeysSumUncompressedAsc = 'PUBLIC_KEYS_SUM_UNCOMPRESSED_ASC',\n  PublicKeysSumUncompressedDesc = 'PUBLIC_KEYS_SUM_UNCOMPRESSED_DESC',\n  PublicKeysVariancePopulationBlockIdAsc = 'PUBLIC_KEYS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  PublicKeysVariancePopulationBlockIdDesc = 'PUBLIC_KEYS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  PublicKeysVariancePopulationCompressedAsc = 'PUBLIC_KEYS_VARIANCE_POPULATION_COMPRESSED_ASC',\n  PublicKeysVariancePopulationCompressedDesc = 'PUBLIC_KEYS_VARIANCE_POPULATION_COMPRESSED_DESC',\n  PublicKeysVariancePopulationHistoryAsc = 'PUBLIC_KEYS_VARIANCE_POPULATION_HISTORY_ASC',\n  PublicKeysVariancePopulationHistoryDesc = 'PUBLIC_KEYS_VARIANCE_POPULATION_HISTORY_DESC',\n  PublicKeysVariancePopulationIdAsc = 'PUBLIC_KEYS_VARIANCE_POPULATION_ID_ASC',\n  PublicKeysVariancePopulationIdDesc = 'PUBLIC_KEYS_VARIANCE_POPULATION_ID_DESC',\n  PublicKeysVariancePopulationUncompressedAsc = 'PUBLIC_KEYS_VARIANCE_POPULATION_UNCOMPRESSED_ASC',\n  PublicKeysVariancePopulationUncompressedDesc = 'PUBLIC_KEYS_VARIANCE_POPULATION_UNCOMPRESSED_DESC',\n  PublicKeysVarianceSampleBlockIdAsc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  PublicKeysVarianceSampleBlockIdDesc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  PublicKeysVarianceSampleCompressedAsc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_COMPRESSED_ASC',\n  PublicKeysVarianceSampleCompressedDesc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_COMPRESSED_DESC',\n  PublicKeysVarianceSampleHistoryAsc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_HISTORY_ASC',\n  PublicKeysVarianceSampleHistoryDesc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_HISTORY_DESC',\n  PublicKeysVarianceSampleIdAsc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_ID_ASC',\n  PublicKeysVarianceSampleIdDesc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_ID_DESC',\n  PublicKeysVarianceSampleUncompressedAsc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_UNCOMPRESSED_ASC',\n  PublicKeysVarianceSampleUncompressedDesc = 'PUBLIC_KEYS_VARIANCE_SAMPLE_UNCOMPRESSED_DESC',\n  SessionsAverageBlockIdAsc = 'SESSIONS_AVERAGE_BLOCK_ID_ASC',\n  SessionsAverageBlockIdDesc = 'SESSIONS_AVERAGE_BLOCK_ID_DESC',\n  SessionsAverageBlockNumberAsc = 'SESSIONS_AVERAGE_BLOCK_NUMBER_ASC',\n  SessionsAverageBlockNumberDesc = 'SESSIONS_AVERAGE_BLOCK_NUMBER_DESC',\n  SessionsAverageIdAsc = 'SESSIONS_AVERAGE_ID_ASC',\n  SessionsAverageIdDesc = 'SESSIONS_AVERAGE_ID_DESC',\n  SessionsAverageKeyGenThresholdAsc = 'SESSIONS_AVERAGE_KEY_GEN_THRESHOLD_ASC',\n  SessionsAverageKeyGenThresholdDesc = 'SESSIONS_AVERAGE_KEY_GEN_THRESHOLD_DESC',\n  SessionsAverageProposerThresholdAsc = 'SESSIONS_AVERAGE_PROPOSER_THRESHOLD_ASC',\n  SessionsAverageProposerThresholdDesc = 'SESSIONS_AVERAGE_PROPOSER_THRESHOLD_DESC',\n  SessionsAveragePublicKeyIdAsc = 'SESSIONS_AVERAGE_PUBLIC_KEY_ID_ASC',\n  SessionsAveragePublicKeyIdDesc = 'SESSIONS_AVERAGE_PUBLIC_KEY_ID_DESC',\n  SessionsAverageSignatureThresholdAsc = 'SESSIONS_AVERAGE_SIGNATURE_THRESHOLD_ASC',\n  SessionsAverageSignatureThresholdDesc = 'SESSIONS_AVERAGE_SIGNATURE_THRESHOLD_DESC',\n  SessionsCountAsc = 'SESSIONS_COUNT_ASC',\n  SessionsCountDesc = 'SESSIONS_COUNT_DESC',\n  SessionsDistinctCountBlockIdAsc = 'SESSIONS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  SessionsDistinctCountBlockIdDesc = 'SESSIONS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  SessionsDistinctCountBlockNumberAsc = 'SESSIONS_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  SessionsDistinctCountBlockNumberDesc = 'SESSIONS_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  SessionsDistinctCountIdAsc = 'SESSIONS_DISTINCT_COUNT_ID_ASC',\n  SessionsDistinctCountIdDesc = 'SESSIONS_DISTINCT_COUNT_ID_DESC',\n  SessionsDistinctCountKeyGenThresholdAsc = 'SESSIONS_DISTINCT_COUNT_KEY_GEN_THRESHOLD_ASC',\n  SessionsDistinctCountKeyGenThresholdDesc = 'SESSIONS_DISTINCT_COUNT_KEY_GEN_THRESHOLD_DESC',\n  SessionsDistinctCountProposerThresholdAsc = 'SESSIONS_DISTINCT_COUNT_PROPOSER_THRESHOLD_ASC',\n  SessionsDistinctCountProposerThresholdDesc = 'SESSIONS_DISTINCT_COUNT_PROPOSER_THRESHOLD_DESC',\n  SessionsDistinctCountPublicKeyIdAsc = 'SESSIONS_DISTINCT_COUNT_PUBLIC_KEY_ID_ASC',\n  SessionsDistinctCountPublicKeyIdDesc = 'SESSIONS_DISTINCT_COUNT_PUBLIC_KEY_ID_DESC',\n  SessionsDistinctCountSignatureThresholdAsc = 'SESSIONS_DISTINCT_COUNT_SIGNATURE_THRESHOLD_ASC',\n  SessionsDistinctCountSignatureThresholdDesc = 'SESSIONS_DISTINCT_COUNT_SIGNATURE_THRESHOLD_DESC',\n  SessionsMaxBlockIdAsc = 'SESSIONS_MAX_BLOCK_ID_ASC',\n  SessionsMaxBlockIdDesc = 'SESSIONS_MAX_BLOCK_ID_DESC',\n  SessionsMaxBlockNumberAsc = 'SESSIONS_MAX_BLOCK_NUMBER_ASC',\n  SessionsMaxBlockNumberDesc = 'SESSIONS_MAX_BLOCK_NUMBER_DESC',\n  SessionsMaxIdAsc = 'SESSIONS_MAX_ID_ASC',\n  SessionsMaxIdDesc = 'SESSIONS_MAX_ID_DESC',\n  SessionsMaxKeyGenThresholdAsc = 'SESSIONS_MAX_KEY_GEN_THRESHOLD_ASC',\n  SessionsMaxKeyGenThresholdDesc = 'SESSIONS_MAX_KEY_GEN_THRESHOLD_DESC',\n  SessionsMaxProposerThresholdAsc = 'SESSIONS_MAX_PROPOSER_THRESHOLD_ASC',\n  SessionsMaxProposerThresholdDesc = 'SESSIONS_MAX_PROPOSER_THRESHOLD_DESC',\n  SessionsMaxPublicKeyIdAsc = 'SESSIONS_MAX_PUBLIC_KEY_ID_ASC',\n  SessionsMaxPublicKeyIdDesc = 'SESSIONS_MAX_PUBLIC_KEY_ID_DESC',\n  SessionsMaxSignatureThresholdAsc = 'SESSIONS_MAX_SIGNATURE_THRESHOLD_ASC',\n  SessionsMaxSignatureThresholdDesc = 'SESSIONS_MAX_SIGNATURE_THRESHOLD_DESC',\n  SessionsMinBlockIdAsc = 'SESSIONS_MIN_BLOCK_ID_ASC',\n  SessionsMinBlockIdDesc = 'SESSIONS_MIN_BLOCK_ID_DESC',\n  SessionsMinBlockNumberAsc = 'SESSIONS_MIN_BLOCK_NUMBER_ASC',\n  SessionsMinBlockNumberDesc = 'SESSIONS_MIN_BLOCK_NUMBER_DESC',\n  SessionsMinIdAsc = 'SESSIONS_MIN_ID_ASC',\n  SessionsMinIdDesc = 'SESSIONS_MIN_ID_DESC',\n  SessionsMinKeyGenThresholdAsc = 'SESSIONS_MIN_KEY_GEN_THRESHOLD_ASC',\n  SessionsMinKeyGenThresholdDesc = 'SESSIONS_MIN_KEY_GEN_THRESHOLD_DESC',\n  SessionsMinProposerThresholdAsc = 'SESSIONS_MIN_PROPOSER_THRESHOLD_ASC',\n  SessionsMinProposerThresholdDesc = 'SESSIONS_MIN_PROPOSER_THRESHOLD_DESC',\n  SessionsMinPublicKeyIdAsc = 'SESSIONS_MIN_PUBLIC_KEY_ID_ASC',\n  SessionsMinPublicKeyIdDesc = 'SESSIONS_MIN_PUBLIC_KEY_ID_DESC',\n  SessionsMinSignatureThresholdAsc = 'SESSIONS_MIN_SIGNATURE_THRESHOLD_ASC',\n  SessionsMinSignatureThresholdDesc = 'SESSIONS_MIN_SIGNATURE_THRESHOLD_DESC',\n  SessionsStddevPopulationBlockIdAsc = 'SESSIONS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  SessionsStddevPopulationBlockIdDesc = 'SESSIONS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  SessionsStddevPopulationBlockNumberAsc = 'SESSIONS_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  SessionsStddevPopulationBlockNumberDesc = 'SESSIONS_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  SessionsStddevPopulationIdAsc = 'SESSIONS_STDDEV_POPULATION_ID_ASC',\n  SessionsStddevPopulationIdDesc = 'SESSIONS_STDDEV_POPULATION_ID_DESC',\n  SessionsStddevPopulationKeyGenThresholdAsc = 'SESSIONS_STDDEV_POPULATION_KEY_GEN_THRESHOLD_ASC',\n  SessionsStddevPopulationKeyGenThresholdDesc = 'SESSIONS_STDDEV_POPULATION_KEY_GEN_THRESHOLD_DESC',\n  SessionsStddevPopulationProposerThresholdAsc = 'SESSIONS_STDDEV_POPULATION_PROPOSER_THRESHOLD_ASC',\n  SessionsStddevPopulationProposerThresholdDesc = 'SESSIONS_STDDEV_POPULATION_PROPOSER_THRESHOLD_DESC',\n  SessionsStddevPopulationPublicKeyIdAsc = 'SESSIONS_STDDEV_POPULATION_PUBLIC_KEY_ID_ASC',\n  SessionsStddevPopulationPublicKeyIdDesc = 'SESSIONS_STDDEV_POPULATION_PUBLIC_KEY_ID_DESC',\n  SessionsStddevPopulationSignatureThresholdAsc = 'SESSIONS_STDDEV_POPULATION_SIGNATURE_THRESHOLD_ASC',\n  SessionsStddevPopulationSignatureThresholdDesc = 'SESSIONS_STDDEV_POPULATION_SIGNATURE_THRESHOLD_DESC',\n  SessionsStddevSampleBlockIdAsc = 'SESSIONS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  SessionsStddevSampleBlockIdDesc = 'SESSIONS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  SessionsStddevSampleBlockNumberAsc = 'SESSIONS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  SessionsStddevSampleBlockNumberDesc = 'SESSIONS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  SessionsStddevSampleIdAsc = 'SESSIONS_STDDEV_SAMPLE_ID_ASC',\n  SessionsStddevSampleIdDesc = 'SESSIONS_STDDEV_SAMPLE_ID_DESC',\n  SessionsStddevSampleKeyGenThresholdAsc = 'SESSIONS_STDDEV_SAMPLE_KEY_GEN_THRESHOLD_ASC',\n  SessionsStddevSampleKeyGenThresholdDesc = 'SESSIONS_STDDEV_SAMPLE_KEY_GEN_THRESHOLD_DESC',\n  SessionsStddevSampleProposerThresholdAsc = 'SESSIONS_STDDEV_SAMPLE_PROPOSER_THRESHOLD_ASC',\n  SessionsStddevSampleProposerThresholdDesc = 'SESSIONS_STDDEV_SAMPLE_PROPOSER_THRESHOLD_DESC',\n  SessionsStddevSamplePublicKeyIdAsc = 'SESSIONS_STDDEV_SAMPLE_PUBLIC_KEY_ID_ASC',\n  SessionsStddevSamplePublicKeyIdDesc = 'SESSIONS_STDDEV_SAMPLE_PUBLIC_KEY_ID_DESC',\n  SessionsStddevSampleSignatureThresholdAsc = 'SESSIONS_STDDEV_SAMPLE_SIGNATURE_THRESHOLD_ASC',\n  SessionsStddevSampleSignatureThresholdDesc = 'SESSIONS_STDDEV_SAMPLE_SIGNATURE_THRESHOLD_DESC',\n  SessionsSumBlockIdAsc = 'SESSIONS_SUM_BLOCK_ID_ASC',\n  SessionsSumBlockIdDesc = 'SESSIONS_SUM_BLOCK_ID_DESC',\n  SessionsSumBlockNumberAsc = 'SESSIONS_SUM_BLOCK_NUMBER_ASC',\n  SessionsSumBlockNumberDesc = 'SESSIONS_SUM_BLOCK_NUMBER_DESC',\n  SessionsSumIdAsc = 'SESSIONS_SUM_ID_ASC',\n  SessionsSumIdDesc = 'SESSIONS_SUM_ID_DESC',\n  SessionsSumKeyGenThresholdAsc = 'SESSIONS_SUM_KEY_GEN_THRESHOLD_ASC',\n  SessionsSumKeyGenThresholdDesc = 'SESSIONS_SUM_KEY_GEN_THRESHOLD_DESC',\n  SessionsSumProposerThresholdAsc = 'SESSIONS_SUM_PROPOSER_THRESHOLD_ASC',\n  SessionsSumProposerThresholdDesc = 'SESSIONS_SUM_PROPOSER_THRESHOLD_DESC',\n  SessionsSumPublicKeyIdAsc = 'SESSIONS_SUM_PUBLIC_KEY_ID_ASC',\n  SessionsSumPublicKeyIdDesc = 'SESSIONS_SUM_PUBLIC_KEY_ID_DESC',\n  SessionsSumSignatureThresholdAsc = 'SESSIONS_SUM_SIGNATURE_THRESHOLD_ASC',\n  SessionsSumSignatureThresholdDesc = 'SESSIONS_SUM_SIGNATURE_THRESHOLD_DESC',\n  SessionsVariancePopulationBlockIdAsc = 'SESSIONS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  SessionsVariancePopulationBlockIdDesc = 'SESSIONS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  SessionsVariancePopulationBlockNumberAsc = 'SESSIONS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  SessionsVariancePopulationBlockNumberDesc = 'SESSIONS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  SessionsVariancePopulationIdAsc = 'SESSIONS_VARIANCE_POPULATION_ID_ASC',\n  SessionsVariancePopulationIdDesc = 'SESSIONS_VARIANCE_POPULATION_ID_DESC',\n  SessionsVariancePopulationKeyGenThresholdAsc = 'SESSIONS_VARIANCE_POPULATION_KEY_GEN_THRESHOLD_ASC',\n  SessionsVariancePopulationKeyGenThresholdDesc = 'SESSIONS_VARIANCE_POPULATION_KEY_GEN_THRESHOLD_DESC',\n  SessionsVariancePopulationProposerThresholdAsc = 'SESSIONS_VARIANCE_POPULATION_PROPOSER_THRESHOLD_ASC',\n  SessionsVariancePopulationProposerThresholdDesc = 'SESSIONS_VARIANCE_POPULATION_PROPOSER_THRESHOLD_DESC',\n  SessionsVariancePopulationPublicKeyIdAsc = 'SESSIONS_VARIANCE_POPULATION_PUBLIC_KEY_ID_ASC',\n  SessionsVariancePopulationPublicKeyIdDesc = 'SESSIONS_VARIANCE_POPULATION_PUBLIC_KEY_ID_DESC',\n  SessionsVariancePopulationSignatureThresholdAsc = 'SESSIONS_VARIANCE_POPULATION_SIGNATURE_THRESHOLD_ASC',\n  SessionsVariancePopulationSignatureThresholdDesc = 'SESSIONS_VARIANCE_POPULATION_SIGNATURE_THRESHOLD_DESC',\n  SessionsVarianceSampleBlockIdAsc = 'SESSIONS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  SessionsVarianceSampleBlockIdDesc = 'SESSIONS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  SessionsVarianceSampleBlockNumberAsc = 'SESSIONS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  SessionsVarianceSampleBlockNumberDesc = 'SESSIONS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  SessionsVarianceSampleIdAsc = 'SESSIONS_VARIANCE_SAMPLE_ID_ASC',\n  SessionsVarianceSampleIdDesc = 'SESSIONS_VARIANCE_SAMPLE_ID_DESC',\n  SessionsVarianceSampleKeyGenThresholdAsc = 'SESSIONS_VARIANCE_SAMPLE_KEY_GEN_THRESHOLD_ASC',\n  SessionsVarianceSampleKeyGenThresholdDesc = 'SESSIONS_VARIANCE_SAMPLE_KEY_GEN_THRESHOLD_DESC',\n  SessionsVarianceSampleProposerThresholdAsc = 'SESSIONS_VARIANCE_SAMPLE_PROPOSER_THRESHOLD_ASC',\n  SessionsVarianceSampleProposerThresholdDesc = 'SESSIONS_VARIANCE_SAMPLE_PROPOSER_THRESHOLD_DESC',\n  SessionsVarianceSamplePublicKeyIdAsc = 'SESSIONS_VARIANCE_SAMPLE_PUBLIC_KEY_ID_ASC',\n  SessionsVarianceSamplePublicKeyIdDesc = 'SESSIONS_VARIANCE_SAMPLE_PUBLIC_KEY_ID_DESC',\n  SessionsVarianceSampleSignatureThresholdAsc = 'SESSIONS_VARIANCE_SAMPLE_SIGNATURE_THRESHOLD_ASC',\n  SessionsVarianceSampleSignatureThresholdDesc = 'SESSIONS_VARIANCE_SAMPLE_SIGNATURE_THRESHOLD_DESC',\n  SignatureThresholdsAverageBlockIdAsc = 'SIGNATURE_THRESHOLDS_AVERAGE_BLOCK_ID_ASC',\n  SignatureThresholdsAverageBlockIdDesc = 'SIGNATURE_THRESHOLDS_AVERAGE_BLOCK_ID_DESC',\n  SignatureThresholdsAverageCurrentAsc = 'SIGNATURE_THRESHOLDS_AVERAGE_CURRENT_ASC',\n  SignatureThresholdsAverageCurrentDesc = 'SIGNATURE_THRESHOLDS_AVERAGE_CURRENT_DESC',\n  SignatureThresholdsAverageIdAsc = 'SIGNATURE_THRESHOLDS_AVERAGE_ID_ASC',\n  SignatureThresholdsAverageIdDesc = 'SIGNATURE_THRESHOLDS_AVERAGE_ID_DESC',\n  SignatureThresholdsAverageNextAsc = 'SIGNATURE_THRESHOLDS_AVERAGE_NEXT_ASC',\n  SignatureThresholdsAverageNextDesc = 'SIGNATURE_THRESHOLDS_AVERAGE_NEXT_DESC',\n  SignatureThresholdsAveragePendingAsc = 'SIGNATURE_THRESHOLDS_AVERAGE_PENDING_ASC',\n  SignatureThresholdsAveragePendingDesc = 'SIGNATURE_THRESHOLDS_AVERAGE_PENDING_DESC',\n  SignatureThresholdsCountAsc = 'SIGNATURE_THRESHOLDS_COUNT_ASC',\n  SignatureThresholdsCountDesc = 'SIGNATURE_THRESHOLDS_COUNT_DESC',\n  SignatureThresholdsDistinctCountBlockIdAsc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  SignatureThresholdsDistinctCountBlockIdDesc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  SignatureThresholdsDistinctCountCurrentAsc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_CURRENT_ASC',\n  SignatureThresholdsDistinctCountCurrentDesc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_CURRENT_DESC',\n  SignatureThresholdsDistinctCountIdAsc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_ID_ASC',\n  SignatureThresholdsDistinctCountIdDesc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_ID_DESC',\n  SignatureThresholdsDistinctCountNextAsc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_NEXT_ASC',\n  SignatureThresholdsDistinctCountNextDesc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_NEXT_DESC',\n  SignatureThresholdsDistinctCountPendingAsc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_PENDING_ASC',\n  SignatureThresholdsDistinctCountPendingDesc = 'SIGNATURE_THRESHOLDS_DISTINCT_COUNT_PENDING_DESC',\n  SignatureThresholdsMaxBlockIdAsc = 'SIGNATURE_THRESHOLDS_MAX_BLOCK_ID_ASC',\n  SignatureThresholdsMaxBlockIdDesc = 'SIGNATURE_THRESHOLDS_MAX_BLOCK_ID_DESC',\n  SignatureThresholdsMaxCurrentAsc = 'SIGNATURE_THRESHOLDS_MAX_CURRENT_ASC',\n  SignatureThresholdsMaxCurrentDesc = 'SIGNATURE_THRESHOLDS_MAX_CURRENT_DESC',\n  SignatureThresholdsMaxIdAsc = 'SIGNATURE_THRESHOLDS_MAX_ID_ASC',\n  SignatureThresholdsMaxIdDesc = 'SIGNATURE_THRESHOLDS_MAX_ID_DESC',\n  SignatureThresholdsMaxNextAsc = 'SIGNATURE_THRESHOLDS_MAX_NEXT_ASC',\n  SignatureThresholdsMaxNextDesc = 'SIGNATURE_THRESHOLDS_MAX_NEXT_DESC',\n  SignatureThresholdsMaxPendingAsc = 'SIGNATURE_THRESHOLDS_MAX_PENDING_ASC',\n  SignatureThresholdsMaxPendingDesc = 'SIGNATURE_THRESHOLDS_MAX_PENDING_DESC',\n  SignatureThresholdsMinBlockIdAsc = 'SIGNATURE_THRESHOLDS_MIN_BLOCK_ID_ASC',\n  SignatureThresholdsMinBlockIdDesc = 'SIGNATURE_THRESHOLDS_MIN_BLOCK_ID_DESC',\n  SignatureThresholdsMinCurrentAsc = 'SIGNATURE_THRESHOLDS_MIN_CURRENT_ASC',\n  SignatureThresholdsMinCurrentDesc = 'SIGNATURE_THRESHOLDS_MIN_CURRENT_DESC',\n  SignatureThresholdsMinIdAsc = 'SIGNATURE_THRESHOLDS_MIN_ID_ASC',\n  SignatureThresholdsMinIdDesc = 'SIGNATURE_THRESHOLDS_MIN_ID_DESC',\n  SignatureThresholdsMinNextAsc = 'SIGNATURE_THRESHOLDS_MIN_NEXT_ASC',\n  SignatureThresholdsMinNextDesc = 'SIGNATURE_THRESHOLDS_MIN_NEXT_DESC',\n  SignatureThresholdsMinPendingAsc = 'SIGNATURE_THRESHOLDS_MIN_PENDING_ASC',\n  SignatureThresholdsMinPendingDesc = 'SIGNATURE_THRESHOLDS_MIN_PENDING_DESC',\n  SignatureThresholdsStddevPopulationBlockIdAsc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  SignatureThresholdsStddevPopulationBlockIdDesc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  SignatureThresholdsStddevPopulationCurrentAsc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_CURRENT_ASC',\n  SignatureThresholdsStddevPopulationCurrentDesc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_CURRENT_DESC',\n  SignatureThresholdsStddevPopulationIdAsc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_ID_ASC',\n  SignatureThresholdsStddevPopulationIdDesc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_ID_DESC',\n  SignatureThresholdsStddevPopulationNextAsc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_NEXT_ASC',\n  SignatureThresholdsStddevPopulationNextDesc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_NEXT_DESC',\n  SignatureThresholdsStddevPopulationPendingAsc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_PENDING_ASC',\n  SignatureThresholdsStddevPopulationPendingDesc = 'SIGNATURE_THRESHOLDS_STDDEV_POPULATION_PENDING_DESC',\n  SignatureThresholdsStddevSampleBlockIdAsc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  SignatureThresholdsStddevSampleBlockIdDesc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  SignatureThresholdsStddevSampleCurrentAsc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_CURRENT_ASC',\n  SignatureThresholdsStddevSampleCurrentDesc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_CURRENT_DESC',\n  SignatureThresholdsStddevSampleIdAsc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_ID_ASC',\n  SignatureThresholdsStddevSampleIdDesc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_ID_DESC',\n  SignatureThresholdsStddevSampleNextAsc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_NEXT_ASC',\n  SignatureThresholdsStddevSampleNextDesc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_NEXT_DESC',\n  SignatureThresholdsStddevSamplePendingAsc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_PENDING_ASC',\n  SignatureThresholdsStddevSamplePendingDesc = 'SIGNATURE_THRESHOLDS_STDDEV_SAMPLE_PENDING_DESC',\n  SignatureThresholdsSumBlockIdAsc = 'SIGNATURE_THRESHOLDS_SUM_BLOCK_ID_ASC',\n  SignatureThresholdsSumBlockIdDesc = 'SIGNATURE_THRESHOLDS_SUM_BLOCK_ID_DESC',\n  SignatureThresholdsSumCurrentAsc = 'SIGNATURE_THRESHOLDS_SUM_CURRENT_ASC',\n  SignatureThresholdsSumCurrentDesc = 'SIGNATURE_THRESHOLDS_SUM_CURRENT_DESC',\n  SignatureThresholdsSumIdAsc = 'SIGNATURE_THRESHOLDS_SUM_ID_ASC',\n  SignatureThresholdsSumIdDesc = 'SIGNATURE_THRESHOLDS_SUM_ID_DESC',\n  SignatureThresholdsSumNextAsc = 'SIGNATURE_THRESHOLDS_SUM_NEXT_ASC',\n  SignatureThresholdsSumNextDesc = 'SIGNATURE_THRESHOLDS_SUM_NEXT_DESC',\n  SignatureThresholdsSumPendingAsc = 'SIGNATURE_THRESHOLDS_SUM_PENDING_ASC',\n  SignatureThresholdsSumPendingDesc = 'SIGNATURE_THRESHOLDS_SUM_PENDING_DESC',\n  SignatureThresholdsVariancePopulationBlockIdAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  SignatureThresholdsVariancePopulationBlockIdDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  SignatureThresholdsVariancePopulationCurrentAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_CURRENT_ASC',\n  SignatureThresholdsVariancePopulationCurrentDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_CURRENT_DESC',\n  SignatureThresholdsVariancePopulationIdAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_ID_ASC',\n  SignatureThresholdsVariancePopulationIdDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_ID_DESC',\n  SignatureThresholdsVariancePopulationNextAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_NEXT_ASC',\n  SignatureThresholdsVariancePopulationNextDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_NEXT_DESC',\n  SignatureThresholdsVariancePopulationPendingAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_PENDING_ASC',\n  SignatureThresholdsVariancePopulationPendingDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_POPULATION_PENDING_DESC',\n  SignatureThresholdsVarianceSampleBlockIdAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  SignatureThresholdsVarianceSampleBlockIdDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  SignatureThresholdsVarianceSampleCurrentAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_CURRENT_ASC',\n  SignatureThresholdsVarianceSampleCurrentDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_CURRENT_DESC',\n  SignatureThresholdsVarianceSampleIdAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_ID_ASC',\n  SignatureThresholdsVarianceSampleIdDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_ID_DESC',\n  SignatureThresholdsVarianceSampleNextAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_NEXT_ASC',\n  SignatureThresholdsVarianceSampleNextDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_NEXT_DESC',\n  SignatureThresholdsVarianceSamplePendingAsc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_PENDING_ASC',\n  SignatureThresholdsVarianceSamplePendingDesc = 'SIGNATURE_THRESHOLDS_VARIANCE_SAMPLE_PENDING_DESC',\n  SpecVersionAsc = 'SPEC_VERSION_ASC',\n  SpecVersionDesc = 'SPEC_VERSION_DESC',\n  StateRootAsc = 'STATE_ROOT_ASC',\n  StateRootDesc = 'STATE_ROOT_DESC',\n  TimestampAsc = 'TIMESTAMP_ASC',\n  TimestampDesc = 'TIMESTAMP_DESC',\n  UnsignedProposalsQueuesAverageBlockIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_AVERAGE_BLOCK_ID_ASC',\n  UnsignedProposalsQueuesAverageBlockIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_AVERAGE_BLOCK_ID_DESC',\n  UnsignedProposalsQueuesAverageBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUES_AVERAGE_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueuesAverageBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUES_AVERAGE_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueuesAverageIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_AVERAGE_ID_ASC',\n  UnsignedProposalsQueuesAverageIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_AVERAGE_ID_DESC',\n  UnsignedProposalsQueuesCountAsc = 'UNSIGNED_PROPOSALS_QUEUES_COUNT_ASC',\n  UnsignedProposalsQueuesCountDesc = 'UNSIGNED_PROPOSALS_QUEUES_COUNT_DESC',\n  UnsignedProposalsQueuesDistinctCountBlockIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_DISTINCT_COUNT_BLOCK_ID_ASC',\n  UnsignedProposalsQueuesDistinctCountBlockIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_DISTINCT_COUNT_BLOCK_ID_DESC',\n  UnsignedProposalsQueuesDistinctCountBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUES_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueuesDistinctCountBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUES_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueuesDistinctCountIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_DISTINCT_COUNT_ID_ASC',\n  UnsignedProposalsQueuesDistinctCountIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_DISTINCT_COUNT_ID_DESC',\n  UnsignedProposalsQueuesMaxBlockIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_MAX_BLOCK_ID_ASC',\n  UnsignedProposalsQueuesMaxBlockIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_MAX_BLOCK_ID_DESC',\n  UnsignedProposalsQueuesMaxBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUES_MAX_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueuesMaxBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUES_MAX_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueuesMaxIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_MAX_ID_ASC',\n  UnsignedProposalsQueuesMaxIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_MAX_ID_DESC',\n  UnsignedProposalsQueuesMinBlockIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_MIN_BLOCK_ID_ASC',\n  UnsignedProposalsQueuesMinBlockIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_MIN_BLOCK_ID_DESC',\n  UnsignedProposalsQueuesMinBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUES_MIN_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueuesMinBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUES_MIN_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueuesMinIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_MIN_ID_ASC',\n  UnsignedProposalsQueuesMinIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_MIN_ID_DESC',\n  UnsignedProposalsQueuesStddevPopulationBlockIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_POPULATION_BLOCK_ID_ASC',\n  UnsignedProposalsQueuesStddevPopulationBlockIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_POPULATION_BLOCK_ID_DESC',\n  UnsignedProposalsQueuesStddevPopulationBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueuesStddevPopulationBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueuesStddevPopulationIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_POPULATION_ID_ASC',\n  UnsignedProposalsQueuesStddevPopulationIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_POPULATION_ID_DESC',\n  UnsignedProposalsQueuesStddevSampleBlockIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  UnsignedProposalsQueuesStddevSampleBlockIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  UnsignedProposalsQueuesStddevSampleBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueuesStddevSampleBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueuesStddevSampleIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_SAMPLE_ID_ASC',\n  UnsignedProposalsQueuesStddevSampleIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_STDDEV_SAMPLE_ID_DESC',\n  UnsignedProposalsQueuesSumBlockIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_SUM_BLOCK_ID_ASC',\n  UnsignedProposalsQueuesSumBlockIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_SUM_BLOCK_ID_DESC',\n  UnsignedProposalsQueuesSumBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUES_SUM_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueuesSumBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUES_SUM_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueuesSumIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_SUM_ID_ASC',\n  UnsignedProposalsQueuesSumIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_SUM_ID_DESC',\n  UnsignedProposalsQueuesVariancePopulationBlockIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  UnsignedProposalsQueuesVariancePopulationBlockIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  UnsignedProposalsQueuesVariancePopulationBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueuesVariancePopulationBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueuesVariancePopulationIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_POPULATION_ID_ASC',\n  UnsignedProposalsQueuesVariancePopulationIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_POPULATION_ID_DESC',\n  UnsignedProposalsQueuesVarianceSampleBlockIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  UnsignedProposalsQueuesVarianceSampleBlockIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  UnsignedProposalsQueuesVarianceSampleBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueuesVarianceSampleBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueuesVarianceSampleIdAsc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_SAMPLE_ID_ASC',\n  UnsignedProposalsQueuesVarianceSampleIdDesc = 'UNSIGNED_PROPOSALS_QUEUES_VARIANCE_SAMPLE_ID_DESC',\n}\n\n/** A filter to be used against Boolean fields. All fields are combined with a logical ‘and.’ */\nexport type BooleanFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<Scalars['Boolean']>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<Scalars['Boolean']>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<Scalars['Boolean']>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<Scalars['Boolean']>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<Scalars['Boolean']>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<Scalars['Boolean']>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<Scalars['Boolean']>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<Scalars['Boolean']>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<Scalars['Boolean']>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<Scalars['Boolean']>>;\n};\n\n/** A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’ */\nexport type DatetimeFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<Scalars['Datetime']>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<Scalars['Datetime']>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<Scalars['Datetime']>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<Scalars['Datetime']>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<Scalars['Datetime']>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<Scalars['Datetime']>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<Scalars['Datetime']>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<Scalars['Datetime']>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<Scalars['Datetime']>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<Scalars['Datetime']>>;\n};\n\nexport type Event = Node & {\n  __typename?: 'Event';\n  arguments?: Maybe<Scalars['String']>;\n  /** Reads a single `Block` that is related to this `Event`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  blockNumber: Scalars['BigFloat'];\n  data?: Maybe<Scalars['String']>;\n  docs?: Maybe<Scalars['String']>;\n  /** Reads a single `Extrinsic` that is related to this `Event`. */\n  extrinsic?: Maybe<Extrinsic>;\n  extrinsicId?: Maybe<Scalars['String']>;\n  id: Scalars['String'];\n  index: Scalars['Int'];\n  method?: Maybe<Scalars['String']>;\n  module?: Maybe<Scalars['String']>;\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  timestamp?: Maybe<Scalars['Datetime']>;\n};\n\nexport type EventAggregates = {\n  __typename?: 'EventAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<EventAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<EventDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<EventMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<EventMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<EventStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<EventStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<EventSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<EventVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<EventVarianceSampleAggregates>;\n};\n\nexport type EventAverageAggregates = {\n  __typename?: 'EventAverageAggregates';\n  /** Mean average of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type EventDistinctCountAggregates = {\n  __typename?: 'EventDistinctCountAggregates';\n  /** Distinct count of arguments across the matching connection */\n  arguments?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of data across the matching connection */\n  data?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of docs across the matching connection */\n  docs?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of extrinsicId across the matching connection */\n  extrinsicId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of index across the matching connection */\n  index?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of method across the matching connection */\n  method?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of module across the matching connection */\n  module?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of timestamp across the matching connection */\n  timestamp?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `Event` object types. All fields are combined with a logical ‘and.’ */\nexport type EventFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<EventFilter>>;\n  /** Filter by the object’s `arguments` field. */\n  arguments?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `blockNumber` field. */\n  blockNumber?: InputMaybe<BigFloatFilter>;\n  /** Filter by the object’s `data` field. */\n  data?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `docs` field. */\n  docs?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `extrinsicId` field. */\n  extrinsicId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `index` field. */\n  index?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `method` field. */\n  method?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `module` field. */\n  module?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<EventFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<EventFilter>>;\n  /** Filter by the object’s `timestamp` field. */\n  timestamp?: InputMaybe<DatetimeFilter>;\n};\n\nexport type EventMaxAggregates = {\n  __typename?: 'EventMaxAggregates';\n  /** Maximum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Maximum of index across the matching connection */\n  index?: Maybe<Scalars['Int']>;\n};\n\nexport type EventMinAggregates = {\n  __typename?: 'EventMinAggregates';\n  /** Minimum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Minimum of index across the matching connection */\n  index?: Maybe<Scalars['Int']>;\n};\n\nexport type EventStddevPopulationAggregates = {\n  __typename?: 'EventStddevPopulationAggregates';\n  /** Population standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type EventStddevSampleAggregates = {\n  __typename?: 'EventStddevSampleAggregates';\n  /** Sample standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type EventSumAggregates = {\n  __typename?: 'EventSumAggregates';\n  /** Sum of blockNumber across the matching connection */\n  blockNumber: Scalars['BigFloat'];\n  /** Sum of index across the matching connection */\n  index: Scalars['BigInt'];\n};\n\nexport type EventVariancePopulationAggregates = {\n  __typename?: 'EventVariancePopulationAggregates';\n  /** Population variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type EventVarianceSampleAggregates = {\n  __typename?: 'EventVarianceSampleAggregates';\n  /** Sample variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `Event` values. */\nexport type EventsConnection = {\n  __typename?: 'EventsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<EventAggregates>;\n  /** A list of edges which contains the `Event` and cursor to aid in pagination. */\n  edges: Array<EventsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<EventAggregates>>;\n  /** A list of `Event` objects. */\n  nodes: Array<Maybe<Event>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Event` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Event` values. */\nexport type EventsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<EventsGroupBy>;\n  having?: InputMaybe<EventsHavingInput>;\n};\n\n/** A `Event` edge in the connection. */\nexport type EventsEdge = {\n  __typename?: 'EventsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Event` at the end of the edge. */\n  node?: Maybe<Event>;\n};\n\n/** Grouping methods for `Event` for usage during aggregation. */\nexport enum EventsGroupBy {\n  Arguments = 'ARGUMENTS',\n  BlockId = 'BLOCK_ID',\n  BlockNumber = 'BLOCK_NUMBER',\n  Data = 'DATA',\n  Docs = 'DOCS',\n  ExtrinsicId = 'EXTRINSIC_ID',\n  Index = 'INDEX',\n  Method = 'METHOD',\n  Module = 'MODULE',\n  Timestamp = 'TIMESTAMP',\n  TimestampTruncatedToDay = 'TIMESTAMP_TRUNCATED_TO_DAY',\n  TimestampTruncatedToHour = 'TIMESTAMP_TRUNCATED_TO_HOUR',\n}\n\nexport type EventsHavingAverageInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type EventsHavingDistinctCountInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\n/** Conditions for `Event` aggregates. */\nexport type EventsHavingInput = {\n  AND?: InputMaybe<Array<EventsHavingInput>>;\n  OR?: InputMaybe<Array<EventsHavingInput>>;\n  average?: InputMaybe<EventsHavingAverageInput>;\n  distinctCount?: InputMaybe<EventsHavingDistinctCountInput>;\n  max?: InputMaybe<EventsHavingMaxInput>;\n  min?: InputMaybe<EventsHavingMinInput>;\n  stddevPopulation?: InputMaybe<EventsHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<EventsHavingStddevSampleInput>;\n  sum?: InputMaybe<EventsHavingSumInput>;\n  variancePopulation?: InputMaybe<EventsHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<EventsHavingVarianceSampleInput>;\n};\n\nexport type EventsHavingMaxInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type EventsHavingMinInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type EventsHavingStddevPopulationInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type EventsHavingStddevSampleInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type EventsHavingSumInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type EventsHavingVariancePopulationInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type EventsHavingVarianceSampleInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\n/** Methods to use when ordering `Event`. */\nexport enum EventsOrderBy {\n  ArgumentsAsc = 'ARGUMENTS_ASC',\n  ArgumentsDesc = 'ARGUMENTS_DESC',\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  BlockNumberAsc = 'BLOCK_NUMBER_ASC',\n  BlockNumberDesc = 'BLOCK_NUMBER_DESC',\n  DataAsc = 'DATA_ASC',\n  DataDesc = 'DATA_DESC',\n  DocsAsc = 'DOCS_ASC',\n  DocsDesc = 'DOCS_DESC',\n  ExtrinsicIdAsc = 'EXTRINSIC_ID_ASC',\n  ExtrinsicIdDesc = 'EXTRINSIC_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  IndexAsc = 'INDEX_ASC',\n  IndexDesc = 'INDEX_DESC',\n  MethodAsc = 'METHOD_ASC',\n  MethodDesc = 'METHOD_DESC',\n  ModuleAsc = 'MODULE_ASC',\n  ModuleDesc = 'MODULE_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  TimestampAsc = 'TIMESTAMP_ASC',\n  TimestampDesc = 'TIMESTAMP_DESC',\n}\n\nexport type Extrinsic = Node & {\n  __typename?: 'Extrinsic';\n  arguments?: Maybe<Scalars['String']>;\n  /** Reads a single `Block` that is related to this `Extrinsic`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  blockNumber: Scalars['BigFloat'];\n  /** Reads and enables pagination through a set of `Block`. */\n  blocksByEventExtrinsicIdAndBlockId: ExtrinsicBlocksByEventExtrinsicIdAndBlockIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `Event`. */\n  events: EventsConnection;\n  hash: Scalars['String'];\n  id: Scalars['String'];\n  index: Scalars['Int'];\n  isSigned?: Maybe<Scalars['Boolean']>;\n  isSuccess?: Maybe<Scalars['Boolean']>;\n  method?: Maybe<Scalars['String']>;\n  module?: Maybe<Scalars['String']>;\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  /** Reads a single `Account` that is related to this `Extrinsic`. */\n  signer?: Maybe<Account>;\n  signerId?: Maybe<Scalars['String']>;\n};\n\nexport type ExtrinsicBlocksByEventExtrinsicIdAndBlockIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<BlockFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<BlocksOrderBy>>;\n};\n\nexport type ExtrinsicEventsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<EventFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<EventsOrderBy>>;\n};\n\nexport type ExtrinsicAggregates = {\n  __typename?: 'ExtrinsicAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<ExtrinsicAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<ExtrinsicDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<ExtrinsicMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<ExtrinsicMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<ExtrinsicStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<ExtrinsicStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<ExtrinsicSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<ExtrinsicVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<ExtrinsicVarianceSampleAggregates>;\n};\n\nexport type ExtrinsicAverageAggregates = {\n  __typename?: 'ExtrinsicAverageAggregates';\n  /** Mean average of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `Block` values, with data from `Event`. */\nexport type ExtrinsicBlocksByEventExtrinsicIdAndBlockIdManyToManyConnection = {\n  __typename?: 'ExtrinsicBlocksByEventExtrinsicIdAndBlockIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<BlockAggregates>;\n  /** A list of edges which contains the `Block`, info from the `Event`, and the cursor to aid in pagination. */\n  edges: Array<ExtrinsicBlocksByEventExtrinsicIdAndBlockIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<BlockAggregates>>;\n  /** A list of `Block` objects. */\n  nodes: Array<Maybe<Block>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Block` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Block` values, with data from `Event`. */\nexport type ExtrinsicBlocksByEventExtrinsicIdAndBlockIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<BlocksGroupBy>;\n  having?: InputMaybe<BlocksHavingInput>;\n};\n\n/** A `Block` edge in the connection, with data from `Event`. */\nexport type ExtrinsicBlocksByEventExtrinsicIdAndBlockIdManyToManyEdge = {\n  __typename?: 'ExtrinsicBlocksByEventExtrinsicIdAndBlockIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** Reads and enables pagination through a set of `Event`. */\n  events: EventsConnection;\n  /** The `Block` at the end of the edge. */\n  node?: Maybe<Block>;\n};\n\n/** A `Block` edge in the connection, with data from `Event`. */\nexport type ExtrinsicBlocksByEventExtrinsicIdAndBlockIdManyToManyEdgeEventsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<EventFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<EventsOrderBy>>;\n};\n\nexport type ExtrinsicDistinctCountAggregates = {\n  __typename?: 'ExtrinsicDistinctCountAggregates';\n  /** Distinct count of arguments across the matching connection */\n  arguments?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of hash across the matching connection */\n  hash?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of index across the matching connection */\n  index?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of isSigned across the matching connection */\n  isSigned?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of isSuccess across the matching connection */\n  isSuccess?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of method across the matching connection */\n  method?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of module across the matching connection */\n  module?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of signerId across the matching connection */\n  signerId?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `Extrinsic` object types. All fields are combined with a logical ‘and.’ */\nexport type ExtrinsicFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ExtrinsicFilter>>;\n  /** Filter by the object’s `arguments` field. */\n  arguments?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `blockNumber` field. */\n  blockNumber?: InputMaybe<BigFloatFilter>;\n  /** Filter by the object’s `hash` field. */\n  hash?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `index` field. */\n  index?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `isSigned` field. */\n  isSigned?: InputMaybe<BooleanFilter>;\n  /** Filter by the object’s `isSuccess` field. */\n  isSuccess?: InputMaybe<BooleanFilter>;\n  /** Filter by the object’s `method` field. */\n  method?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `module` field. */\n  module?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ExtrinsicFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ExtrinsicFilter>>;\n  /** Filter by the object’s `signerId` field. */\n  signerId?: InputMaybe<StringFilter>;\n};\n\nexport type ExtrinsicMaxAggregates = {\n  __typename?: 'ExtrinsicMaxAggregates';\n  /** Maximum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Maximum of index across the matching connection */\n  index?: Maybe<Scalars['Int']>;\n};\n\nexport type ExtrinsicMinAggregates = {\n  __typename?: 'ExtrinsicMinAggregates';\n  /** Minimum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Minimum of index across the matching connection */\n  index?: Maybe<Scalars['Int']>;\n};\n\nexport type ExtrinsicStddevPopulationAggregates = {\n  __typename?: 'ExtrinsicStddevPopulationAggregates';\n  /** Population standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ExtrinsicStddevSampleAggregates = {\n  __typename?: 'ExtrinsicStddevSampleAggregates';\n  /** Sample standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ExtrinsicSumAggregates = {\n  __typename?: 'ExtrinsicSumAggregates';\n  /** Sum of blockNumber across the matching connection */\n  blockNumber: Scalars['BigFloat'];\n  /** Sum of index across the matching connection */\n  index: Scalars['BigInt'];\n};\n\nexport type ExtrinsicVariancePopulationAggregates = {\n  __typename?: 'ExtrinsicVariancePopulationAggregates';\n  /** Population variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ExtrinsicVarianceSampleAggregates = {\n  __typename?: 'ExtrinsicVarianceSampleAggregates';\n  /** Sample variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of index across the matching connection */\n  index?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `Extrinsic` values. */\nexport type ExtrinsicsConnection = {\n  __typename?: 'ExtrinsicsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ExtrinsicAggregates>;\n  /** A list of edges which contains the `Extrinsic` and cursor to aid in pagination. */\n  edges: Array<ExtrinsicsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ExtrinsicAggregates>>;\n  /** A list of `Extrinsic` objects. */\n  nodes: Array<Maybe<Extrinsic>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Extrinsic` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Extrinsic` values. */\nexport type ExtrinsicsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ExtrinsicsGroupBy>;\n  having?: InputMaybe<ExtrinsicsHavingInput>;\n};\n\n/** A `Extrinsic` edge in the connection. */\nexport type ExtrinsicsEdge = {\n  __typename?: 'ExtrinsicsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Extrinsic` at the end of the edge. */\n  node?: Maybe<Extrinsic>;\n};\n\n/** Grouping methods for `Extrinsic` for usage during aggregation. */\nexport enum ExtrinsicsGroupBy {\n  Arguments = 'ARGUMENTS',\n  BlockId = 'BLOCK_ID',\n  BlockNumber = 'BLOCK_NUMBER',\n  Hash = 'HASH',\n  Index = 'INDEX',\n  IsSigned = 'IS_SIGNED',\n  IsSuccess = 'IS_SUCCESS',\n  Method = 'METHOD',\n  Module = 'MODULE',\n  SignerId = 'SIGNER_ID',\n}\n\nexport type ExtrinsicsHavingAverageInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ExtrinsicsHavingDistinctCountInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `Extrinsic` aggregates. */\nexport type ExtrinsicsHavingInput = {\n  AND?: InputMaybe<Array<ExtrinsicsHavingInput>>;\n  OR?: InputMaybe<Array<ExtrinsicsHavingInput>>;\n  average?: InputMaybe<ExtrinsicsHavingAverageInput>;\n  distinctCount?: InputMaybe<ExtrinsicsHavingDistinctCountInput>;\n  max?: InputMaybe<ExtrinsicsHavingMaxInput>;\n  min?: InputMaybe<ExtrinsicsHavingMinInput>;\n  stddevPopulation?: InputMaybe<ExtrinsicsHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<ExtrinsicsHavingStddevSampleInput>;\n  sum?: InputMaybe<ExtrinsicsHavingSumInput>;\n  variancePopulation?: InputMaybe<ExtrinsicsHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<ExtrinsicsHavingVarianceSampleInput>;\n};\n\nexport type ExtrinsicsHavingMaxInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ExtrinsicsHavingMinInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ExtrinsicsHavingStddevPopulationInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ExtrinsicsHavingStddevSampleInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ExtrinsicsHavingSumInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ExtrinsicsHavingVariancePopulationInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ExtrinsicsHavingVarianceSampleInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  index?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `Extrinsic`. */\nexport enum ExtrinsicsOrderBy {\n  ArgumentsAsc = 'ARGUMENTS_ASC',\n  ArgumentsDesc = 'ARGUMENTS_DESC',\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  BlockNumberAsc = 'BLOCK_NUMBER_ASC',\n  BlockNumberDesc = 'BLOCK_NUMBER_DESC',\n  EventsAverageArgumentsAsc = 'EVENTS_AVERAGE_ARGUMENTS_ASC',\n  EventsAverageArgumentsDesc = 'EVENTS_AVERAGE_ARGUMENTS_DESC',\n  EventsAverageBlockIdAsc = 'EVENTS_AVERAGE_BLOCK_ID_ASC',\n  EventsAverageBlockIdDesc = 'EVENTS_AVERAGE_BLOCK_ID_DESC',\n  EventsAverageBlockNumberAsc = 'EVENTS_AVERAGE_BLOCK_NUMBER_ASC',\n  EventsAverageBlockNumberDesc = 'EVENTS_AVERAGE_BLOCK_NUMBER_DESC',\n  EventsAverageDataAsc = 'EVENTS_AVERAGE_DATA_ASC',\n  EventsAverageDataDesc = 'EVENTS_AVERAGE_DATA_DESC',\n  EventsAverageDocsAsc = 'EVENTS_AVERAGE_DOCS_ASC',\n  EventsAverageDocsDesc = 'EVENTS_AVERAGE_DOCS_DESC',\n  EventsAverageExtrinsicIdAsc = 'EVENTS_AVERAGE_EXTRINSIC_ID_ASC',\n  EventsAverageExtrinsicIdDesc = 'EVENTS_AVERAGE_EXTRINSIC_ID_DESC',\n  EventsAverageIdAsc = 'EVENTS_AVERAGE_ID_ASC',\n  EventsAverageIdDesc = 'EVENTS_AVERAGE_ID_DESC',\n  EventsAverageIndexAsc = 'EVENTS_AVERAGE_INDEX_ASC',\n  EventsAverageIndexDesc = 'EVENTS_AVERAGE_INDEX_DESC',\n  EventsAverageMethodAsc = 'EVENTS_AVERAGE_METHOD_ASC',\n  EventsAverageMethodDesc = 'EVENTS_AVERAGE_METHOD_DESC',\n  EventsAverageModuleAsc = 'EVENTS_AVERAGE_MODULE_ASC',\n  EventsAverageModuleDesc = 'EVENTS_AVERAGE_MODULE_DESC',\n  EventsAverageTimestampAsc = 'EVENTS_AVERAGE_TIMESTAMP_ASC',\n  EventsAverageTimestampDesc = 'EVENTS_AVERAGE_TIMESTAMP_DESC',\n  EventsCountAsc = 'EVENTS_COUNT_ASC',\n  EventsCountDesc = 'EVENTS_COUNT_DESC',\n  EventsDistinctCountArgumentsAsc = 'EVENTS_DISTINCT_COUNT_ARGUMENTS_ASC',\n  EventsDistinctCountArgumentsDesc = 'EVENTS_DISTINCT_COUNT_ARGUMENTS_DESC',\n  EventsDistinctCountBlockIdAsc = 'EVENTS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  EventsDistinctCountBlockIdDesc = 'EVENTS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  EventsDistinctCountBlockNumberAsc = 'EVENTS_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  EventsDistinctCountBlockNumberDesc = 'EVENTS_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  EventsDistinctCountDataAsc = 'EVENTS_DISTINCT_COUNT_DATA_ASC',\n  EventsDistinctCountDataDesc = 'EVENTS_DISTINCT_COUNT_DATA_DESC',\n  EventsDistinctCountDocsAsc = 'EVENTS_DISTINCT_COUNT_DOCS_ASC',\n  EventsDistinctCountDocsDesc = 'EVENTS_DISTINCT_COUNT_DOCS_DESC',\n  EventsDistinctCountExtrinsicIdAsc = 'EVENTS_DISTINCT_COUNT_EXTRINSIC_ID_ASC',\n  EventsDistinctCountExtrinsicIdDesc = 'EVENTS_DISTINCT_COUNT_EXTRINSIC_ID_DESC',\n  EventsDistinctCountIdAsc = 'EVENTS_DISTINCT_COUNT_ID_ASC',\n  EventsDistinctCountIdDesc = 'EVENTS_DISTINCT_COUNT_ID_DESC',\n  EventsDistinctCountIndexAsc = 'EVENTS_DISTINCT_COUNT_INDEX_ASC',\n  EventsDistinctCountIndexDesc = 'EVENTS_DISTINCT_COUNT_INDEX_DESC',\n  EventsDistinctCountMethodAsc = 'EVENTS_DISTINCT_COUNT_METHOD_ASC',\n  EventsDistinctCountMethodDesc = 'EVENTS_DISTINCT_COUNT_METHOD_DESC',\n  EventsDistinctCountModuleAsc = 'EVENTS_DISTINCT_COUNT_MODULE_ASC',\n  EventsDistinctCountModuleDesc = 'EVENTS_DISTINCT_COUNT_MODULE_DESC',\n  EventsDistinctCountTimestampAsc = 'EVENTS_DISTINCT_COUNT_TIMESTAMP_ASC',\n  EventsDistinctCountTimestampDesc = 'EVENTS_DISTINCT_COUNT_TIMESTAMP_DESC',\n  EventsMaxArgumentsAsc = 'EVENTS_MAX_ARGUMENTS_ASC',\n  EventsMaxArgumentsDesc = 'EVENTS_MAX_ARGUMENTS_DESC',\n  EventsMaxBlockIdAsc = 'EVENTS_MAX_BLOCK_ID_ASC',\n  EventsMaxBlockIdDesc = 'EVENTS_MAX_BLOCK_ID_DESC',\n  EventsMaxBlockNumberAsc = 'EVENTS_MAX_BLOCK_NUMBER_ASC',\n  EventsMaxBlockNumberDesc = 'EVENTS_MAX_BLOCK_NUMBER_DESC',\n  EventsMaxDataAsc = 'EVENTS_MAX_DATA_ASC',\n  EventsMaxDataDesc = 'EVENTS_MAX_DATA_DESC',\n  EventsMaxDocsAsc = 'EVENTS_MAX_DOCS_ASC',\n  EventsMaxDocsDesc = 'EVENTS_MAX_DOCS_DESC',\n  EventsMaxExtrinsicIdAsc = 'EVENTS_MAX_EXTRINSIC_ID_ASC',\n  EventsMaxExtrinsicIdDesc = 'EVENTS_MAX_EXTRINSIC_ID_DESC',\n  EventsMaxIdAsc = 'EVENTS_MAX_ID_ASC',\n  EventsMaxIdDesc = 'EVENTS_MAX_ID_DESC',\n  EventsMaxIndexAsc = 'EVENTS_MAX_INDEX_ASC',\n  EventsMaxIndexDesc = 'EVENTS_MAX_INDEX_DESC',\n  EventsMaxMethodAsc = 'EVENTS_MAX_METHOD_ASC',\n  EventsMaxMethodDesc = 'EVENTS_MAX_METHOD_DESC',\n  EventsMaxModuleAsc = 'EVENTS_MAX_MODULE_ASC',\n  EventsMaxModuleDesc = 'EVENTS_MAX_MODULE_DESC',\n  EventsMaxTimestampAsc = 'EVENTS_MAX_TIMESTAMP_ASC',\n  EventsMaxTimestampDesc = 'EVENTS_MAX_TIMESTAMP_DESC',\n  EventsMinArgumentsAsc = 'EVENTS_MIN_ARGUMENTS_ASC',\n  EventsMinArgumentsDesc = 'EVENTS_MIN_ARGUMENTS_DESC',\n  EventsMinBlockIdAsc = 'EVENTS_MIN_BLOCK_ID_ASC',\n  EventsMinBlockIdDesc = 'EVENTS_MIN_BLOCK_ID_DESC',\n  EventsMinBlockNumberAsc = 'EVENTS_MIN_BLOCK_NUMBER_ASC',\n  EventsMinBlockNumberDesc = 'EVENTS_MIN_BLOCK_NUMBER_DESC',\n  EventsMinDataAsc = 'EVENTS_MIN_DATA_ASC',\n  EventsMinDataDesc = 'EVENTS_MIN_DATA_DESC',\n  EventsMinDocsAsc = 'EVENTS_MIN_DOCS_ASC',\n  EventsMinDocsDesc = 'EVENTS_MIN_DOCS_DESC',\n  EventsMinExtrinsicIdAsc = 'EVENTS_MIN_EXTRINSIC_ID_ASC',\n  EventsMinExtrinsicIdDesc = 'EVENTS_MIN_EXTRINSIC_ID_DESC',\n  EventsMinIdAsc = 'EVENTS_MIN_ID_ASC',\n  EventsMinIdDesc = 'EVENTS_MIN_ID_DESC',\n  EventsMinIndexAsc = 'EVENTS_MIN_INDEX_ASC',\n  EventsMinIndexDesc = 'EVENTS_MIN_INDEX_DESC',\n  EventsMinMethodAsc = 'EVENTS_MIN_METHOD_ASC',\n  EventsMinMethodDesc = 'EVENTS_MIN_METHOD_DESC',\n  EventsMinModuleAsc = 'EVENTS_MIN_MODULE_ASC',\n  EventsMinModuleDesc = 'EVENTS_MIN_MODULE_DESC',\n  EventsMinTimestampAsc = 'EVENTS_MIN_TIMESTAMP_ASC',\n  EventsMinTimestampDesc = 'EVENTS_MIN_TIMESTAMP_DESC',\n  EventsStddevPopulationArgumentsAsc = 'EVENTS_STDDEV_POPULATION_ARGUMENTS_ASC',\n  EventsStddevPopulationArgumentsDesc = 'EVENTS_STDDEV_POPULATION_ARGUMENTS_DESC',\n  EventsStddevPopulationBlockIdAsc = 'EVENTS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  EventsStddevPopulationBlockIdDesc = 'EVENTS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  EventsStddevPopulationBlockNumberAsc = 'EVENTS_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  EventsStddevPopulationBlockNumberDesc = 'EVENTS_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  EventsStddevPopulationDataAsc = 'EVENTS_STDDEV_POPULATION_DATA_ASC',\n  EventsStddevPopulationDataDesc = 'EVENTS_STDDEV_POPULATION_DATA_DESC',\n  EventsStddevPopulationDocsAsc = 'EVENTS_STDDEV_POPULATION_DOCS_ASC',\n  EventsStddevPopulationDocsDesc = 'EVENTS_STDDEV_POPULATION_DOCS_DESC',\n  EventsStddevPopulationExtrinsicIdAsc = 'EVENTS_STDDEV_POPULATION_EXTRINSIC_ID_ASC',\n  EventsStddevPopulationExtrinsicIdDesc = 'EVENTS_STDDEV_POPULATION_EXTRINSIC_ID_DESC',\n  EventsStddevPopulationIdAsc = 'EVENTS_STDDEV_POPULATION_ID_ASC',\n  EventsStddevPopulationIdDesc = 'EVENTS_STDDEV_POPULATION_ID_DESC',\n  EventsStddevPopulationIndexAsc = 'EVENTS_STDDEV_POPULATION_INDEX_ASC',\n  EventsStddevPopulationIndexDesc = 'EVENTS_STDDEV_POPULATION_INDEX_DESC',\n  EventsStddevPopulationMethodAsc = 'EVENTS_STDDEV_POPULATION_METHOD_ASC',\n  EventsStddevPopulationMethodDesc = 'EVENTS_STDDEV_POPULATION_METHOD_DESC',\n  EventsStddevPopulationModuleAsc = 'EVENTS_STDDEV_POPULATION_MODULE_ASC',\n  EventsStddevPopulationModuleDesc = 'EVENTS_STDDEV_POPULATION_MODULE_DESC',\n  EventsStddevPopulationTimestampAsc = 'EVENTS_STDDEV_POPULATION_TIMESTAMP_ASC',\n  EventsStddevPopulationTimestampDesc = 'EVENTS_STDDEV_POPULATION_TIMESTAMP_DESC',\n  EventsStddevSampleArgumentsAsc = 'EVENTS_STDDEV_SAMPLE_ARGUMENTS_ASC',\n  EventsStddevSampleArgumentsDesc = 'EVENTS_STDDEV_SAMPLE_ARGUMENTS_DESC',\n  EventsStddevSampleBlockIdAsc = 'EVENTS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  EventsStddevSampleBlockIdDesc = 'EVENTS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  EventsStddevSampleBlockNumberAsc = 'EVENTS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  EventsStddevSampleBlockNumberDesc = 'EVENTS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  EventsStddevSampleDataAsc = 'EVENTS_STDDEV_SAMPLE_DATA_ASC',\n  EventsStddevSampleDataDesc = 'EVENTS_STDDEV_SAMPLE_DATA_DESC',\n  EventsStddevSampleDocsAsc = 'EVENTS_STDDEV_SAMPLE_DOCS_ASC',\n  EventsStddevSampleDocsDesc = 'EVENTS_STDDEV_SAMPLE_DOCS_DESC',\n  EventsStddevSampleExtrinsicIdAsc = 'EVENTS_STDDEV_SAMPLE_EXTRINSIC_ID_ASC',\n  EventsStddevSampleExtrinsicIdDesc = 'EVENTS_STDDEV_SAMPLE_EXTRINSIC_ID_DESC',\n  EventsStddevSampleIdAsc = 'EVENTS_STDDEV_SAMPLE_ID_ASC',\n  EventsStddevSampleIdDesc = 'EVENTS_STDDEV_SAMPLE_ID_DESC',\n  EventsStddevSampleIndexAsc = 'EVENTS_STDDEV_SAMPLE_INDEX_ASC',\n  EventsStddevSampleIndexDesc = 'EVENTS_STDDEV_SAMPLE_INDEX_DESC',\n  EventsStddevSampleMethodAsc = 'EVENTS_STDDEV_SAMPLE_METHOD_ASC',\n  EventsStddevSampleMethodDesc = 'EVENTS_STDDEV_SAMPLE_METHOD_DESC',\n  EventsStddevSampleModuleAsc = 'EVENTS_STDDEV_SAMPLE_MODULE_ASC',\n  EventsStddevSampleModuleDesc = 'EVENTS_STDDEV_SAMPLE_MODULE_DESC',\n  EventsStddevSampleTimestampAsc = 'EVENTS_STDDEV_SAMPLE_TIMESTAMP_ASC',\n  EventsStddevSampleTimestampDesc = 'EVENTS_STDDEV_SAMPLE_TIMESTAMP_DESC',\n  EventsSumArgumentsAsc = 'EVENTS_SUM_ARGUMENTS_ASC',\n  EventsSumArgumentsDesc = 'EVENTS_SUM_ARGUMENTS_DESC',\n  EventsSumBlockIdAsc = 'EVENTS_SUM_BLOCK_ID_ASC',\n  EventsSumBlockIdDesc = 'EVENTS_SUM_BLOCK_ID_DESC',\n  EventsSumBlockNumberAsc = 'EVENTS_SUM_BLOCK_NUMBER_ASC',\n  EventsSumBlockNumberDesc = 'EVENTS_SUM_BLOCK_NUMBER_DESC',\n  EventsSumDataAsc = 'EVENTS_SUM_DATA_ASC',\n  EventsSumDataDesc = 'EVENTS_SUM_DATA_DESC',\n  EventsSumDocsAsc = 'EVENTS_SUM_DOCS_ASC',\n  EventsSumDocsDesc = 'EVENTS_SUM_DOCS_DESC',\n  EventsSumExtrinsicIdAsc = 'EVENTS_SUM_EXTRINSIC_ID_ASC',\n  EventsSumExtrinsicIdDesc = 'EVENTS_SUM_EXTRINSIC_ID_DESC',\n  EventsSumIdAsc = 'EVENTS_SUM_ID_ASC',\n  EventsSumIdDesc = 'EVENTS_SUM_ID_DESC',\n  EventsSumIndexAsc = 'EVENTS_SUM_INDEX_ASC',\n  EventsSumIndexDesc = 'EVENTS_SUM_INDEX_DESC',\n  EventsSumMethodAsc = 'EVENTS_SUM_METHOD_ASC',\n  EventsSumMethodDesc = 'EVENTS_SUM_METHOD_DESC',\n  EventsSumModuleAsc = 'EVENTS_SUM_MODULE_ASC',\n  EventsSumModuleDesc = 'EVENTS_SUM_MODULE_DESC',\n  EventsSumTimestampAsc = 'EVENTS_SUM_TIMESTAMP_ASC',\n  EventsSumTimestampDesc = 'EVENTS_SUM_TIMESTAMP_DESC',\n  EventsVariancePopulationArgumentsAsc = 'EVENTS_VARIANCE_POPULATION_ARGUMENTS_ASC',\n  EventsVariancePopulationArgumentsDesc = 'EVENTS_VARIANCE_POPULATION_ARGUMENTS_DESC',\n  EventsVariancePopulationBlockIdAsc = 'EVENTS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  EventsVariancePopulationBlockIdDesc = 'EVENTS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  EventsVariancePopulationBlockNumberAsc = 'EVENTS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  EventsVariancePopulationBlockNumberDesc = 'EVENTS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  EventsVariancePopulationDataAsc = 'EVENTS_VARIANCE_POPULATION_DATA_ASC',\n  EventsVariancePopulationDataDesc = 'EVENTS_VARIANCE_POPULATION_DATA_DESC',\n  EventsVariancePopulationDocsAsc = 'EVENTS_VARIANCE_POPULATION_DOCS_ASC',\n  EventsVariancePopulationDocsDesc = 'EVENTS_VARIANCE_POPULATION_DOCS_DESC',\n  EventsVariancePopulationExtrinsicIdAsc = 'EVENTS_VARIANCE_POPULATION_EXTRINSIC_ID_ASC',\n  EventsVariancePopulationExtrinsicIdDesc = 'EVENTS_VARIANCE_POPULATION_EXTRINSIC_ID_DESC',\n  EventsVariancePopulationIdAsc = 'EVENTS_VARIANCE_POPULATION_ID_ASC',\n  EventsVariancePopulationIdDesc = 'EVENTS_VARIANCE_POPULATION_ID_DESC',\n  EventsVariancePopulationIndexAsc = 'EVENTS_VARIANCE_POPULATION_INDEX_ASC',\n  EventsVariancePopulationIndexDesc = 'EVENTS_VARIANCE_POPULATION_INDEX_DESC',\n  EventsVariancePopulationMethodAsc = 'EVENTS_VARIANCE_POPULATION_METHOD_ASC',\n  EventsVariancePopulationMethodDesc = 'EVENTS_VARIANCE_POPULATION_METHOD_DESC',\n  EventsVariancePopulationModuleAsc = 'EVENTS_VARIANCE_POPULATION_MODULE_ASC',\n  EventsVariancePopulationModuleDesc = 'EVENTS_VARIANCE_POPULATION_MODULE_DESC',\n  EventsVariancePopulationTimestampAsc = 'EVENTS_VARIANCE_POPULATION_TIMESTAMP_ASC',\n  EventsVariancePopulationTimestampDesc = 'EVENTS_VARIANCE_POPULATION_TIMESTAMP_DESC',\n  EventsVarianceSampleArgumentsAsc = 'EVENTS_VARIANCE_SAMPLE_ARGUMENTS_ASC',\n  EventsVarianceSampleArgumentsDesc = 'EVENTS_VARIANCE_SAMPLE_ARGUMENTS_DESC',\n  EventsVarianceSampleBlockIdAsc = 'EVENTS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  EventsVarianceSampleBlockIdDesc = 'EVENTS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  EventsVarianceSampleBlockNumberAsc = 'EVENTS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  EventsVarianceSampleBlockNumberDesc = 'EVENTS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  EventsVarianceSampleDataAsc = 'EVENTS_VARIANCE_SAMPLE_DATA_ASC',\n  EventsVarianceSampleDataDesc = 'EVENTS_VARIANCE_SAMPLE_DATA_DESC',\n  EventsVarianceSampleDocsAsc = 'EVENTS_VARIANCE_SAMPLE_DOCS_ASC',\n  EventsVarianceSampleDocsDesc = 'EVENTS_VARIANCE_SAMPLE_DOCS_DESC',\n  EventsVarianceSampleExtrinsicIdAsc = 'EVENTS_VARIANCE_SAMPLE_EXTRINSIC_ID_ASC',\n  EventsVarianceSampleExtrinsicIdDesc = 'EVENTS_VARIANCE_SAMPLE_EXTRINSIC_ID_DESC',\n  EventsVarianceSampleIdAsc = 'EVENTS_VARIANCE_SAMPLE_ID_ASC',\n  EventsVarianceSampleIdDesc = 'EVENTS_VARIANCE_SAMPLE_ID_DESC',\n  EventsVarianceSampleIndexAsc = 'EVENTS_VARIANCE_SAMPLE_INDEX_ASC',\n  EventsVarianceSampleIndexDesc = 'EVENTS_VARIANCE_SAMPLE_INDEX_DESC',\n  EventsVarianceSampleMethodAsc = 'EVENTS_VARIANCE_SAMPLE_METHOD_ASC',\n  EventsVarianceSampleMethodDesc = 'EVENTS_VARIANCE_SAMPLE_METHOD_DESC',\n  EventsVarianceSampleModuleAsc = 'EVENTS_VARIANCE_SAMPLE_MODULE_ASC',\n  EventsVarianceSampleModuleDesc = 'EVENTS_VARIANCE_SAMPLE_MODULE_DESC',\n  EventsVarianceSampleTimestampAsc = 'EVENTS_VARIANCE_SAMPLE_TIMESTAMP_ASC',\n  EventsVarianceSampleTimestampDesc = 'EVENTS_VARIANCE_SAMPLE_TIMESTAMP_DESC',\n  HashAsc = 'HASH_ASC',\n  HashDesc = 'HASH_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  IndexAsc = 'INDEX_ASC',\n  IndexDesc = 'INDEX_DESC',\n  IsSignedAsc = 'IS_SIGNED_ASC',\n  IsSignedDesc = 'IS_SIGNED_DESC',\n  IsSuccessAsc = 'IS_SUCCESS_ASC',\n  IsSuccessDesc = 'IS_SUCCESS_DESC',\n  MethodAsc = 'METHOD_ASC',\n  MethodDesc = 'METHOD_DESC',\n  ModuleAsc = 'MODULE_ASC',\n  ModuleDesc = 'MODULE_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SignerIdAsc = 'SIGNER_ID_ASC',\n  SignerIdDesc = 'SIGNER_ID_DESC',\n}\n\nexport type HavingBigfloatFilter = {\n  equalTo?: InputMaybe<Scalars['BigFloat']>;\n  greaterThan?: InputMaybe<Scalars['BigFloat']>;\n  greaterThanOrEqualTo?: InputMaybe<Scalars['BigFloat']>;\n  lessThan?: InputMaybe<Scalars['BigFloat']>;\n  lessThanOrEqualTo?: InputMaybe<Scalars['BigFloat']>;\n  notEqualTo?: InputMaybe<Scalars['BigFloat']>;\n};\n\nexport type HavingDatetimeFilter = {\n  equalTo?: InputMaybe<Scalars['Datetime']>;\n  greaterThan?: InputMaybe<Scalars['Datetime']>;\n  greaterThanOrEqualTo?: InputMaybe<Scalars['Datetime']>;\n  lessThan?: InputMaybe<Scalars['Datetime']>;\n  lessThanOrEqualTo?: InputMaybe<Scalars['Datetime']>;\n  notEqualTo?: InputMaybe<Scalars['Datetime']>;\n};\n\nexport type HavingIntFilter = {\n  equalTo?: InputMaybe<Scalars['Int']>;\n  greaterThan?: InputMaybe<Scalars['Int']>;\n  greaterThanOrEqualTo?: InputMaybe<Scalars['Int']>;\n  lessThan?: InputMaybe<Scalars['Int']>;\n  lessThanOrEqualTo?: InputMaybe<Scalars['Int']>;\n  notEqualTo?: InputMaybe<Scalars['Int']>;\n};\n\n/** A filter to be used against Int fields. All fields are combined with a logical ‘and.’ */\nexport type IntFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<Scalars['Int']>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<Scalars['Int']>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<Scalars['Int']>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<Scalars['Int']>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<Scalars['Int']>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<Scalars['Int']>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<Scalars['Int']>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<Scalars['Int']>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<Scalars['Int']>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** A filter to be used against JSON fields. All fields are combined with a logical ‘and.’ */\nexport type JsonFilter = {\n  /** Contained by the specified JSON. */\n  containedBy?: InputMaybe<Scalars['JSON']>;\n  /** Contains the specified JSON. */\n  contains?: InputMaybe<Scalars['JSON']>;\n  /** Contains all of the specified keys. */\n  containsAllKeys?: InputMaybe<Array<Scalars['String']>>;\n  /** Contains any of the specified keys. */\n  containsAnyKeys?: InputMaybe<Array<Scalars['String']>>;\n  /** Contains the specified key. */\n  containsKey?: InputMaybe<Scalars['String']>;\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<Scalars['JSON']>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<Scalars['JSON']>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<Scalars['JSON']>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<Scalars['JSON']>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<Scalars['JSON']>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<Scalars['JSON']>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<Scalars['JSON']>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<Scalars['JSON']>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<Scalars['JSON']>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<Scalars['JSON']>>;\n};\n\nexport type KeygenThreshold = Node & {\n  __typename?: 'KeygenThreshold';\n  /** Reads a single `Block` that is related to this `KeygenThreshold`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  current?: Maybe<Scalars['Int']>;\n  id: Scalars['String'];\n  next?: Maybe<Scalars['Int']>;\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  pending?: Maybe<Scalars['Int']>;\n};\n\nexport type KeygenThresholdAggregates = {\n  __typename?: 'KeygenThresholdAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<KeygenThresholdAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<KeygenThresholdDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<KeygenThresholdMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<KeygenThresholdMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<KeygenThresholdStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<KeygenThresholdStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<KeygenThresholdSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<KeygenThresholdVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<KeygenThresholdVarianceSampleAggregates>;\n};\n\nexport type KeygenThresholdAverageAggregates = {\n  __typename?: 'KeygenThresholdAverageAggregates';\n  /** Mean average of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type KeygenThresholdDistinctCountAggregates = {\n  __typename?: 'KeygenThresholdDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of current across the matching connection */\n  current?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of next across the matching connection */\n  next?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of pending across the matching connection */\n  pending?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `KeygenThreshold` object types. All fields are combined with a logical ‘and.’ */\nexport type KeygenThresholdFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<KeygenThresholdFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `current` field. */\n  current?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `next` field. */\n  next?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<KeygenThresholdFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<KeygenThresholdFilter>>;\n  /** Filter by the object’s `pending` field. */\n  pending?: InputMaybe<IntFilter>;\n};\n\nexport type KeygenThresholdMaxAggregates = {\n  __typename?: 'KeygenThresholdMaxAggregates';\n  /** Maximum of current across the matching connection */\n  current?: Maybe<Scalars['Int']>;\n  /** Maximum of next across the matching connection */\n  next?: Maybe<Scalars['Int']>;\n  /** Maximum of pending across the matching connection */\n  pending?: Maybe<Scalars['Int']>;\n};\n\nexport type KeygenThresholdMinAggregates = {\n  __typename?: 'KeygenThresholdMinAggregates';\n  /** Minimum of current across the matching connection */\n  current?: Maybe<Scalars['Int']>;\n  /** Minimum of next across the matching connection */\n  next?: Maybe<Scalars['Int']>;\n  /** Minimum of pending across the matching connection */\n  pending?: Maybe<Scalars['Int']>;\n};\n\nexport type KeygenThresholdStddevPopulationAggregates = {\n  __typename?: 'KeygenThresholdStddevPopulationAggregates';\n  /** Population standard deviation of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type KeygenThresholdStddevSampleAggregates = {\n  __typename?: 'KeygenThresholdStddevSampleAggregates';\n  /** Sample standard deviation of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type KeygenThresholdSumAggregates = {\n  __typename?: 'KeygenThresholdSumAggregates';\n  /** Sum of current across the matching connection */\n  current: Scalars['BigInt'];\n  /** Sum of next across the matching connection */\n  next: Scalars['BigInt'];\n  /** Sum of pending across the matching connection */\n  pending: Scalars['BigInt'];\n};\n\nexport type KeygenThresholdVariancePopulationAggregates = {\n  __typename?: 'KeygenThresholdVariancePopulationAggregates';\n  /** Population variance of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type KeygenThresholdVarianceSampleAggregates = {\n  __typename?: 'KeygenThresholdVarianceSampleAggregates';\n  /** Sample variance of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `KeygenThreshold` values. */\nexport type KeygenThresholdsConnection = {\n  __typename?: 'KeygenThresholdsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<KeygenThresholdAggregates>;\n  /** A list of edges which contains the `KeygenThreshold` and cursor to aid in pagination. */\n  edges: Array<KeygenThresholdsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<KeygenThresholdAggregates>>;\n  /** A list of `KeygenThreshold` objects. */\n  nodes: Array<Maybe<KeygenThreshold>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `KeygenThreshold` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `KeygenThreshold` values. */\nexport type KeygenThresholdsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<KeygenThresholdsGroupBy>;\n  having?: InputMaybe<KeygenThresholdsHavingInput>;\n};\n\n/** A `KeygenThreshold` edge in the connection. */\nexport type KeygenThresholdsEdge = {\n  __typename?: 'KeygenThresholdsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `KeygenThreshold` at the end of the edge. */\n  node?: Maybe<KeygenThreshold>;\n};\n\n/** Grouping methods for `KeygenThreshold` for usage during aggregation. */\nexport enum KeygenThresholdsGroupBy {\n  BlockId = 'BLOCK_ID',\n  Current = 'CURRENT',\n  Next = 'NEXT',\n  Pending = 'PENDING',\n}\n\nexport type KeygenThresholdsHavingAverageInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type KeygenThresholdsHavingDistinctCountInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `KeygenThreshold` aggregates. */\nexport type KeygenThresholdsHavingInput = {\n  AND?: InputMaybe<Array<KeygenThresholdsHavingInput>>;\n  OR?: InputMaybe<Array<KeygenThresholdsHavingInput>>;\n  average?: InputMaybe<KeygenThresholdsHavingAverageInput>;\n  distinctCount?: InputMaybe<KeygenThresholdsHavingDistinctCountInput>;\n  max?: InputMaybe<KeygenThresholdsHavingMaxInput>;\n  min?: InputMaybe<KeygenThresholdsHavingMinInput>;\n  stddevPopulation?: InputMaybe<KeygenThresholdsHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<KeygenThresholdsHavingStddevSampleInput>;\n  sum?: InputMaybe<KeygenThresholdsHavingSumInput>;\n  variancePopulation?: InputMaybe<KeygenThresholdsHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<KeygenThresholdsHavingVarianceSampleInput>;\n};\n\nexport type KeygenThresholdsHavingMaxInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type KeygenThresholdsHavingMinInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type KeygenThresholdsHavingStddevPopulationInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type KeygenThresholdsHavingStddevSampleInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type KeygenThresholdsHavingSumInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type KeygenThresholdsHavingVariancePopulationInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type KeygenThresholdsHavingVarianceSampleInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `KeygenThreshold`. */\nexport enum KeygenThresholdsOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  CurrentAsc = 'CURRENT_ASC',\n  CurrentDesc = 'CURRENT_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  NextAsc = 'NEXT_ASC',\n  NextDesc = 'NEXT_DESC',\n  PendingAsc = 'PENDING_ASC',\n  PendingDesc = 'PENDING_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n}\n\n/** An object with a globally unique `ID`. */\nexport type Node = {\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n};\n\n/** Information about pagination in a connection. */\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  /** When paginating forwards, the cursor to continue. */\n  endCursor?: Maybe<Scalars['Cursor']>;\n  /** When paginating forwards, are there more items? */\n  hasNextPage: Scalars['Boolean'];\n  /** When paginating backwards, are there more items? */\n  hasPreviousPage: Scalars['Boolean'];\n  /** When paginating backwards, the cursor to continue. */\n  startCursor?: Maybe<Scalars['Cursor']>;\n};\n\nexport type ProposalCounter = Node & {\n  __typename?: 'ProposalCounter';\n  /** Reads a single `Block` that is related to this `ProposalCounter`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  blockNumber: Scalars['Int'];\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  signedProposalsCount: Scalars['Int'];\n  signedProposalsMap?: Maybe<Scalars['JSON']>;\n  statusMap?: Maybe<Scalars['JSON']>;\n  unSignedProposalsCount: Scalars['Int'];\n  unSignedProposalsMap?: Maybe<Scalars['JSON']>;\n};\n\nexport type ProposalCounterAggregates = {\n  __typename?: 'ProposalCounterAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<ProposalCounterAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<ProposalCounterDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<ProposalCounterMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<ProposalCounterMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<ProposalCounterStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<ProposalCounterStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<ProposalCounterSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<ProposalCounterVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<ProposalCounterVarianceSampleAggregates>;\n};\n\nexport type ProposalCounterAverageAggregates = {\n  __typename?: 'ProposalCounterAverageAggregates';\n  /** Mean average of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of signedProposalsCount across the matching connection */\n  signedProposalsCount?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of unSignedProposalsCount across the matching connection */\n  unSignedProposalsCount?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalCounterDistinctCountAggregates = {\n  __typename?: 'ProposalCounterDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of signedProposalsCount across the matching connection */\n  signedProposalsCount?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of signedProposalsMap across the matching connection */\n  signedProposalsMap?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of statusMap across the matching connection */\n  statusMap?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of unSignedProposalsCount across the matching connection */\n  unSignedProposalsCount?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of unSignedProposalsMap across the matching connection */\n  unSignedProposalsMap?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `ProposalCounter` object types. All fields are combined with a logical ‘and.’ */\nexport type ProposalCounterFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ProposalCounterFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `blockNumber` field. */\n  blockNumber?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ProposalCounterFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ProposalCounterFilter>>;\n  /** Filter by the object’s `signedProposalsCount` field. */\n  signedProposalsCount?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `signedProposalsMap` field. */\n  signedProposalsMap?: InputMaybe<JsonFilter>;\n  /** Filter by the object’s `statusMap` field. */\n  statusMap?: InputMaybe<JsonFilter>;\n  /** Filter by the object’s `unSignedProposalsCount` field. */\n  unSignedProposalsCount?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `unSignedProposalsMap` field. */\n  unSignedProposalsMap?: InputMaybe<JsonFilter>;\n};\n\nexport type ProposalCounterMaxAggregates = {\n  __typename?: 'ProposalCounterMaxAggregates';\n  /** Maximum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n  /** Maximum of signedProposalsCount across the matching connection */\n  signedProposalsCount?: Maybe<Scalars['Int']>;\n  /** Maximum of unSignedProposalsCount across the matching connection */\n  unSignedProposalsCount?: Maybe<Scalars['Int']>;\n};\n\nexport type ProposalCounterMinAggregates = {\n  __typename?: 'ProposalCounterMinAggregates';\n  /** Minimum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n  /** Minimum of signedProposalsCount across the matching connection */\n  signedProposalsCount?: Maybe<Scalars['Int']>;\n  /** Minimum of unSignedProposalsCount across the matching connection */\n  unSignedProposalsCount?: Maybe<Scalars['Int']>;\n};\n\nexport type ProposalCounterStddevPopulationAggregates = {\n  __typename?: 'ProposalCounterStddevPopulationAggregates';\n  /** Population standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of signedProposalsCount across the matching connection */\n  signedProposalsCount?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of unSignedProposalsCount across the matching connection */\n  unSignedProposalsCount?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalCounterStddevSampleAggregates = {\n  __typename?: 'ProposalCounterStddevSampleAggregates';\n  /** Sample standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of signedProposalsCount across the matching connection */\n  signedProposalsCount?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of unSignedProposalsCount across the matching connection */\n  unSignedProposalsCount?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalCounterSumAggregates = {\n  __typename?: 'ProposalCounterSumAggregates';\n  /** Sum of blockNumber across the matching connection */\n  blockNumber: Scalars['BigInt'];\n  /** Sum of signedProposalsCount across the matching connection */\n  signedProposalsCount: Scalars['BigInt'];\n  /** Sum of unSignedProposalsCount across the matching connection */\n  unSignedProposalsCount: Scalars['BigInt'];\n};\n\nexport type ProposalCounterVariancePopulationAggregates = {\n  __typename?: 'ProposalCounterVariancePopulationAggregates';\n  /** Population variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of signedProposalsCount across the matching connection */\n  signedProposalsCount?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of unSignedProposalsCount across the matching connection */\n  unSignedProposalsCount?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalCounterVarianceSampleAggregates = {\n  __typename?: 'ProposalCounterVarianceSampleAggregates';\n  /** Sample variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of signedProposalsCount across the matching connection */\n  signedProposalsCount?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of unSignedProposalsCount across the matching connection */\n  unSignedProposalsCount?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `ProposalCounter` values. */\nexport type ProposalCountersConnection = {\n  __typename?: 'ProposalCountersConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposalCounterAggregates>;\n  /** A list of edges which contains the `ProposalCounter` and cursor to aid in pagination. */\n  edges: Array<ProposalCountersEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposalCounterAggregates>>;\n  /** A list of `ProposalCounter` objects. */\n  nodes: Array<Maybe<ProposalCounter>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ProposalCounter` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `ProposalCounter` values. */\nexport type ProposalCountersConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposalCountersGroupBy>;\n  having?: InputMaybe<ProposalCountersHavingInput>;\n};\n\n/** A `ProposalCounter` edge in the connection. */\nexport type ProposalCountersEdge = {\n  __typename?: 'ProposalCountersEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `ProposalCounter` at the end of the edge. */\n  node?: Maybe<ProposalCounter>;\n};\n\n/** Grouping methods for `ProposalCounter` for usage during aggregation. */\nexport enum ProposalCountersGroupBy {\n  BlockId = 'BLOCK_ID',\n  BlockNumber = 'BLOCK_NUMBER',\n  SignedProposalsCount = 'SIGNED_PROPOSALS_COUNT',\n  SignedProposalsMap = 'SIGNED_PROPOSALS_MAP',\n  StatusMap = 'STATUS_MAP',\n  UnSignedProposalsCount = 'UN_SIGNED_PROPOSALS_COUNT',\n  UnSignedProposalsMap = 'UN_SIGNED_PROPOSALS_MAP',\n}\n\nexport type ProposalCountersHavingAverageInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  signedProposalsCount?: InputMaybe<HavingIntFilter>;\n  unSignedProposalsCount?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalCountersHavingDistinctCountInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  signedProposalsCount?: InputMaybe<HavingIntFilter>;\n  unSignedProposalsCount?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `ProposalCounter` aggregates. */\nexport type ProposalCountersHavingInput = {\n  AND?: InputMaybe<Array<ProposalCountersHavingInput>>;\n  OR?: InputMaybe<Array<ProposalCountersHavingInput>>;\n  average?: InputMaybe<ProposalCountersHavingAverageInput>;\n  distinctCount?: InputMaybe<ProposalCountersHavingDistinctCountInput>;\n  max?: InputMaybe<ProposalCountersHavingMaxInput>;\n  min?: InputMaybe<ProposalCountersHavingMinInput>;\n  stddevPopulation?: InputMaybe<ProposalCountersHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<ProposalCountersHavingStddevSampleInput>;\n  sum?: InputMaybe<ProposalCountersHavingSumInput>;\n  variancePopulation?: InputMaybe<ProposalCountersHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<ProposalCountersHavingVarianceSampleInput>;\n};\n\nexport type ProposalCountersHavingMaxInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  signedProposalsCount?: InputMaybe<HavingIntFilter>;\n  unSignedProposalsCount?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalCountersHavingMinInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  signedProposalsCount?: InputMaybe<HavingIntFilter>;\n  unSignedProposalsCount?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalCountersHavingStddevPopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  signedProposalsCount?: InputMaybe<HavingIntFilter>;\n  unSignedProposalsCount?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalCountersHavingStddevSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  signedProposalsCount?: InputMaybe<HavingIntFilter>;\n  unSignedProposalsCount?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalCountersHavingSumInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  signedProposalsCount?: InputMaybe<HavingIntFilter>;\n  unSignedProposalsCount?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalCountersHavingVariancePopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  signedProposalsCount?: InputMaybe<HavingIntFilter>;\n  unSignedProposalsCount?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalCountersHavingVarianceSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  signedProposalsCount?: InputMaybe<HavingIntFilter>;\n  unSignedProposalsCount?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `ProposalCounter`. */\nexport enum ProposalCountersOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  BlockNumberAsc = 'BLOCK_NUMBER_ASC',\n  BlockNumberDesc = 'BLOCK_NUMBER_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SignedProposalsCountAsc = 'SIGNED_PROPOSALS_COUNT_ASC',\n  SignedProposalsCountDesc = 'SIGNED_PROPOSALS_COUNT_DESC',\n  SignedProposalsMapAsc = 'SIGNED_PROPOSALS_MAP_ASC',\n  SignedProposalsMapDesc = 'SIGNED_PROPOSALS_MAP_DESC',\n  StatusMapAsc = 'STATUS_MAP_ASC',\n  StatusMapDesc = 'STATUS_MAP_DESC',\n  UnSignedProposalsCountAsc = 'UN_SIGNED_PROPOSALS_COUNT_ASC',\n  UnSignedProposalsCountDesc = 'UN_SIGNED_PROPOSALS_COUNT_DESC',\n  UnSignedProposalsMapAsc = 'UN_SIGNED_PROPOSALS_MAP_ASC',\n  UnSignedProposalsMapDesc = 'UN_SIGNED_PROPOSALS_MAP_DESC',\n}\n\nexport type ProposalItem = Node & {\n  __typename?: 'ProposalItem';\n  /** Reads a single `Block` that is related to this `ProposalItem`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  blockNumber: Scalars['Int'];\n  /** Reads and enables pagination through a set of `Block`. */\n  blocksByProposalVoteProposalIdAndBlockId: ProposalItemBlocksByProposalVoteProposalIdAndBlockIdManyToManyConnection;\n  chainId?: Maybe<Scalars['Int']>;\n  data: Scalars['String'];\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  nonce: Scalars['Int'];\n  /** Reads and enables pagination through a set of `ProposalTimelineStatus`. */\n  proposalTimelineStatuses: ProposalTimelineStatusesConnection;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  proposalVotesByProposalId: ProposalVotesConnection;\n  /** Reads and enables pagination through a set of `Proposer`. */\n  proposersByProposalVoteProposalIdAndVoterId: ProposalItemProposersByProposalVoteProposalIdAndVoterIdManyToManyConnection;\n  removed?: Maybe<Scalars['Boolean']>;\n  signature?: Maybe<Scalars['String']>;\n  status: Scalars['String'];\n  type: ProposalType;\n  /** Reads and enables pagination through a set of `UnsignedProposalsQueueItem`. */\n  unsignedProposalsQueueItemsByProposalId: UnsignedProposalsQueueItemsConnection;\n  /** Reads and enables pagination through a set of `UnsignedProposalsQueue`. */\n  unsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueId: ProposalItemUnsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueIdManyToManyConnection;\n};\n\nexport type ProposalItemBlocksByProposalVoteProposalIdAndBlockIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<BlockFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<BlocksOrderBy>>;\n};\n\nexport type ProposalItemProposalTimelineStatusesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalTimelineStatusFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalTimelineStatusesOrderBy>>;\n};\n\nexport type ProposalItemProposalVotesByProposalIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\nexport type ProposalItemProposersByProposalVoteProposalIdAndVoterIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposersOrderBy>>;\n};\n\nexport type ProposalItemUnsignedProposalsQueueItemsByProposalIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<UnsignedProposalsQueueItemFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<UnsignedProposalsQueueItemsOrderBy>>;\n};\n\nexport type ProposalItemUnsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<UnsignedProposalsQueueFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<UnsignedProposalsQueuesOrderBy>>;\n};\n\nexport type ProposalItemAggregates = {\n  __typename?: 'ProposalItemAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<ProposalItemAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<ProposalItemDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<ProposalItemMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<ProposalItemMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<ProposalItemStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<ProposalItemStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<ProposalItemSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<ProposalItemVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<ProposalItemVarianceSampleAggregates>;\n};\n\nexport type ProposalItemAverageAggregates = {\n  __typename?: 'ProposalItemAverageAggregates';\n  /** Mean average of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of chainId across the matching connection */\n  chainId?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of nonce across the matching connection */\n  nonce?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `Block` values, with data from `ProposalVote`. */\nexport type ProposalItemBlocksByProposalVoteProposalIdAndBlockIdManyToManyConnection = {\n  __typename?: 'ProposalItemBlocksByProposalVoteProposalIdAndBlockIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<BlockAggregates>;\n  /** A list of edges which contains the `Block`, info from the `ProposalVote`, and the cursor to aid in pagination. */\n  edges: Array<ProposalItemBlocksByProposalVoteProposalIdAndBlockIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<BlockAggregates>>;\n  /** A list of `Block` objects. */\n  nodes: Array<Maybe<Block>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Block` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Block` values, with data from `ProposalVote`. */\nexport type ProposalItemBlocksByProposalVoteProposalIdAndBlockIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<BlocksGroupBy>;\n  having?: InputMaybe<BlocksHavingInput>;\n};\n\n/** A `Block` edge in the connection, with data from `ProposalVote`. */\nexport type ProposalItemBlocksByProposalVoteProposalIdAndBlockIdManyToManyEdge = {\n  __typename?: 'ProposalItemBlocksByProposalVoteProposalIdAndBlockIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Block` at the end of the edge. */\n  node?: Maybe<Block>;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  proposalVotes: ProposalVotesConnection;\n};\n\n/** A `Block` edge in the connection, with data from `ProposalVote`. */\nexport type ProposalItemBlocksByProposalVoteProposalIdAndBlockIdManyToManyEdgeProposalVotesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\nexport type ProposalItemDistinctCountAggregates = {\n  __typename?: 'ProposalItemDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of chainId across the matching connection */\n  chainId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of data across the matching connection */\n  data?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of nonce across the matching connection */\n  nonce?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of removed across the matching connection */\n  removed?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of signature across the matching connection */\n  signature?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of status across the matching connection */\n  status?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of type across the matching connection */\n  type?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `ProposalItem` object types. All fields are combined with a logical ‘and.’ */\nexport type ProposalItemFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ProposalItemFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `blockNumber` field. */\n  blockNumber?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `chainId` field. */\n  chainId?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `data` field. */\n  data?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `nonce` field. */\n  nonce?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ProposalItemFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ProposalItemFilter>>;\n  /** Filter by the object’s `removed` field. */\n  removed?: InputMaybe<BooleanFilter>;\n  /** Filter by the object’s `signature` field. */\n  signature?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `status` field. */\n  status?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `type` field. */\n  type?: InputMaybe<ProposalTypeFilter>;\n};\n\nexport type ProposalItemMaxAggregates = {\n  __typename?: 'ProposalItemMaxAggregates';\n  /** Maximum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n  /** Maximum of chainId across the matching connection */\n  chainId?: Maybe<Scalars['Int']>;\n  /** Maximum of nonce across the matching connection */\n  nonce?: Maybe<Scalars['Int']>;\n};\n\nexport type ProposalItemMinAggregates = {\n  __typename?: 'ProposalItemMinAggregates';\n  /** Minimum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n  /** Minimum of chainId across the matching connection */\n  chainId?: Maybe<Scalars['Int']>;\n  /** Minimum of nonce across the matching connection */\n  nonce?: Maybe<Scalars['Int']>;\n};\n\n/** A connection to a list of `Proposer` values, with data from `ProposalVote`. */\nexport type ProposalItemProposersByProposalVoteProposalIdAndVoterIdManyToManyConnection = {\n  __typename?: 'ProposalItemProposersByProposalVoteProposalIdAndVoterIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposerAggregates>;\n  /** A list of edges which contains the `Proposer`, info from the `ProposalVote`, and the cursor to aid in pagination. */\n  edges: Array<ProposalItemProposersByProposalVoteProposalIdAndVoterIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposerAggregates>>;\n  /** A list of `Proposer` objects. */\n  nodes: Array<Maybe<Proposer>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Proposer` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Proposer` values, with data from `ProposalVote`. */\nexport type ProposalItemProposersByProposalVoteProposalIdAndVoterIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposersGroupBy>;\n  having?: InputMaybe<ProposersHavingInput>;\n};\n\n/** A `Proposer` edge in the connection, with data from `ProposalVote`. */\nexport type ProposalItemProposersByProposalVoteProposalIdAndVoterIdManyToManyEdge = {\n  __typename?: 'ProposalItemProposersByProposalVoteProposalIdAndVoterIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Proposer` at the end of the edge. */\n  node?: Maybe<Proposer>;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  votes: ProposalVotesConnection;\n};\n\n/** A `Proposer` edge in the connection, with data from `ProposalVote`. */\nexport type ProposalItemProposersByProposalVoteProposalIdAndVoterIdManyToManyEdgeVotesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\nexport type ProposalItemStddevPopulationAggregates = {\n  __typename?: 'ProposalItemStddevPopulationAggregates';\n  /** Population standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of chainId across the matching connection */\n  chainId?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of nonce across the matching connection */\n  nonce?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalItemStddevSampleAggregates = {\n  __typename?: 'ProposalItemStddevSampleAggregates';\n  /** Sample standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of chainId across the matching connection */\n  chainId?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of nonce across the matching connection */\n  nonce?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalItemSumAggregates = {\n  __typename?: 'ProposalItemSumAggregates';\n  /** Sum of blockNumber across the matching connection */\n  blockNumber: Scalars['BigInt'];\n  /** Sum of chainId across the matching connection */\n  chainId: Scalars['BigInt'];\n  /** Sum of nonce across the matching connection */\n  nonce: Scalars['BigInt'];\n};\n\n/** A connection to a list of `UnsignedProposalsQueue` values, with data from `UnsignedProposalsQueueItem`. */\nexport type ProposalItemUnsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueIdManyToManyConnection = {\n  __typename?: 'ProposalItemUnsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<UnsignedProposalsQueueAggregates>;\n  /** A list of edges which contains the `UnsignedProposalsQueue`, info from the `UnsignedProposalsQueueItem`, and the cursor to aid in pagination. */\n  edges: Array<ProposalItemUnsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<UnsignedProposalsQueueAggregates>>;\n  /** A list of `UnsignedProposalsQueue` objects. */\n  nodes: Array<Maybe<UnsignedProposalsQueue>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `UnsignedProposalsQueue` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `UnsignedProposalsQueue` values, with data from `UnsignedProposalsQueueItem`. */\nexport type ProposalItemUnsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueIdManyToManyConnectionGroupedAggregatesArgs =\n  {\n    groupBy: Array<UnsignedProposalsQueuesGroupBy>;\n    having?: InputMaybe<UnsignedProposalsQueuesHavingInput>;\n  };\n\n/** A `UnsignedProposalsQueue` edge in the connection, with data from `UnsignedProposalsQueueItem`. */\nexport type ProposalItemUnsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueIdManyToManyEdge = {\n  __typename?: 'ProposalItemUnsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `UnsignedProposalsQueue` at the end of the edge. */\n  node?: Maybe<UnsignedProposalsQueue>;\n  /** Reads and enables pagination through a set of `UnsignedProposalsQueueItem`. */\n  unsignedProposalsQueueItemsByQueueId: UnsignedProposalsQueueItemsConnection;\n};\n\n/** A `UnsignedProposalsQueue` edge in the connection, with data from `UnsignedProposalsQueueItem`. */\nexport type ProposalItemUnsignedProposalsQueuesByUnsignedProposalsQueueItemProposalIdAndQueueIdManyToManyEdgeUnsignedProposalsQueueItemsByQueueIdArgs =\n  {\n    after?: InputMaybe<Scalars['Cursor']>;\n    before?: InputMaybe<Scalars['Cursor']>;\n    filter?: InputMaybe<UnsignedProposalsQueueItemFilter>;\n    first?: InputMaybe<Scalars['Int']>;\n    last?: InputMaybe<Scalars['Int']>;\n    offset?: InputMaybe<Scalars['Int']>;\n    orderBy?: InputMaybe<Array<UnsignedProposalsQueueItemsOrderBy>>;\n  };\n\nexport type ProposalItemVariancePopulationAggregates = {\n  __typename?: 'ProposalItemVariancePopulationAggregates';\n  /** Population variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of chainId across the matching connection */\n  chainId?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of nonce across the matching connection */\n  nonce?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalItemVarianceSampleAggregates = {\n  __typename?: 'ProposalItemVarianceSampleAggregates';\n  /** Sample variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of chainId across the matching connection */\n  chainId?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of nonce across the matching connection */\n  nonce?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `ProposalItem` values. */\nexport type ProposalItemsConnection = {\n  __typename?: 'ProposalItemsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposalItemAggregates>;\n  /** A list of edges which contains the `ProposalItem` and cursor to aid in pagination. */\n  edges: Array<ProposalItemsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposalItemAggregates>>;\n  /** A list of `ProposalItem` objects. */\n  nodes: Array<Maybe<ProposalItem>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ProposalItem` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `ProposalItem` values. */\nexport type ProposalItemsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposalItemsGroupBy>;\n  having?: InputMaybe<ProposalItemsHavingInput>;\n};\n\n/** A `ProposalItem` edge in the connection. */\nexport type ProposalItemsEdge = {\n  __typename?: 'ProposalItemsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `ProposalItem` at the end of the edge. */\n  node?: Maybe<ProposalItem>;\n};\n\n/** Grouping methods for `ProposalItem` for usage during aggregation. */\nexport enum ProposalItemsGroupBy {\n  BlockId = 'BLOCK_ID',\n  BlockNumber = 'BLOCK_NUMBER',\n  ChainId = 'CHAIN_ID',\n  Data = 'DATA',\n  Nonce = 'NONCE',\n  Removed = 'REMOVED',\n  Signature = 'SIGNATURE',\n  Status = 'STATUS',\n  Type = 'TYPE',\n}\n\nexport type ProposalItemsHavingAverageInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  chainId?: InputMaybe<HavingIntFilter>;\n  nonce?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalItemsHavingDistinctCountInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  chainId?: InputMaybe<HavingIntFilter>;\n  nonce?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `ProposalItem` aggregates. */\nexport type ProposalItemsHavingInput = {\n  AND?: InputMaybe<Array<ProposalItemsHavingInput>>;\n  OR?: InputMaybe<Array<ProposalItemsHavingInput>>;\n  average?: InputMaybe<ProposalItemsHavingAverageInput>;\n  distinctCount?: InputMaybe<ProposalItemsHavingDistinctCountInput>;\n  max?: InputMaybe<ProposalItemsHavingMaxInput>;\n  min?: InputMaybe<ProposalItemsHavingMinInput>;\n  stddevPopulation?: InputMaybe<ProposalItemsHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<ProposalItemsHavingStddevSampleInput>;\n  sum?: InputMaybe<ProposalItemsHavingSumInput>;\n  variancePopulation?: InputMaybe<ProposalItemsHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<ProposalItemsHavingVarianceSampleInput>;\n};\n\nexport type ProposalItemsHavingMaxInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  chainId?: InputMaybe<HavingIntFilter>;\n  nonce?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalItemsHavingMinInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  chainId?: InputMaybe<HavingIntFilter>;\n  nonce?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalItemsHavingStddevPopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  chainId?: InputMaybe<HavingIntFilter>;\n  nonce?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalItemsHavingStddevSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  chainId?: InputMaybe<HavingIntFilter>;\n  nonce?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalItemsHavingSumInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  chainId?: InputMaybe<HavingIntFilter>;\n  nonce?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalItemsHavingVariancePopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  chainId?: InputMaybe<HavingIntFilter>;\n  nonce?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposalItemsHavingVarianceSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n  chainId?: InputMaybe<HavingIntFilter>;\n  nonce?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `ProposalItem`. */\nexport enum ProposalItemsOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  BlockNumberAsc = 'BLOCK_NUMBER_ASC',\n  BlockNumberDesc = 'BLOCK_NUMBER_DESC',\n  ChainIdAsc = 'CHAIN_ID_ASC',\n  ChainIdDesc = 'CHAIN_ID_DESC',\n  DataAsc = 'DATA_ASC',\n  DataDesc = 'DATA_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  NonceAsc = 'NONCE_ASC',\n  NonceDesc = 'NONCE_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ProposalTimelineStatusesAverageBlockNumberAsc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_BLOCK_NUMBER_ASC',\n  ProposalTimelineStatusesAverageBlockNumberDesc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_BLOCK_NUMBER_DESC',\n  ProposalTimelineStatusesAverageIdAsc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_ID_ASC',\n  ProposalTimelineStatusesAverageIdDesc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_ID_DESC',\n  ProposalTimelineStatusesAverageProposalItemIdAsc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_PROPOSAL_ITEM_ID_ASC',\n  ProposalTimelineStatusesAverageProposalItemIdDesc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_PROPOSAL_ITEM_ID_DESC',\n  ProposalTimelineStatusesAverageStatusAsc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_STATUS_ASC',\n  ProposalTimelineStatusesAverageStatusDesc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_STATUS_DESC',\n  ProposalTimelineStatusesAverageTimestampAsc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_TIMESTAMP_ASC',\n  ProposalTimelineStatusesAverageTimestampDesc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_TIMESTAMP_DESC',\n  ProposalTimelineStatusesAverageTxHashAsc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_TX_HASH_ASC',\n  ProposalTimelineStatusesAverageTxHashDesc = 'PROPOSAL_TIMELINE_STATUSES_AVERAGE_TX_HASH_DESC',\n  ProposalTimelineStatusesCountAsc = 'PROPOSAL_TIMELINE_STATUSES_COUNT_ASC',\n  ProposalTimelineStatusesCountDesc = 'PROPOSAL_TIMELINE_STATUSES_COUNT_DESC',\n  ProposalTimelineStatusesDistinctCountBlockNumberAsc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  ProposalTimelineStatusesDistinctCountBlockNumberDesc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  ProposalTimelineStatusesDistinctCountIdAsc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_ID_ASC',\n  ProposalTimelineStatusesDistinctCountIdDesc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_ID_DESC',\n  ProposalTimelineStatusesDistinctCountProposalItemIdAsc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_PROPOSAL_ITEM_ID_ASC',\n  ProposalTimelineStatusesDistinctCountProposalItemIdDesc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_PROPOSAL_ITEM_ID_DESC',\n  ProposalTimelineStatusesDistinctCountStatusAsc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_STATUS_ASC',\n  ProposalTimelineStatusesDistinctCountStatusDesc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_STATUS_DESC',\n  ProposalTimelineStatusesDistinctCountTimestampAsc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_TIMESTAMP_ASC',\n  ProposalTimelineStatusesDistinctCountTimestampDesc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_TIMESTAMP_DESC',\n  ProposalTimelineStatusesDistinctCountTxHashAsc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_TX_HASH_ASC',\n  ProposalTimelineStatusesDistinctCountTxHashDesc = 'PROPOSAL_TIMELINE_STATUSES_DISTINCT_COUNT_TX_HASH_DESC',\n  ProposalTimelineStatusesMaxBlockNumberAsc = 'PROPOSAL_TIMELINE_STATUSES_MAX_BLOCK_NUMBER_ASC',\n  ProposalTimelineStatusesMaxBlockNumberDesc = 'PROPOSAL_TIMELINE_STATUSES_MAX_BLOCK_NUMBER_DESC',\n  ProposalTimelineStatusesMaxIdAsc = 'PROPOSAL_TIMELINE_STATUSES_MAX_ID_ASC',\n  ProposalTimelineStatusesMaxIdDesc = 'PROPOSAL_TIMELINE_STATUSES_MAX_ID_DESC',\n  ProposalTimelineStatusesMaxProposalItemIdAsc = 'PROPOSAL_TIMELINE_STATUSES_MAX_PROPOSAL_ITEM_ID_ASC',\n  ProposalTimelineStatusesMaxProposalItemIdDesc = 'PROPOSAL_TIMELINE_STATUSES_MAX_PROPOSAL_ITEM_ID_DESC',\n  ProposalTimelineStatusesMaxStatusAsc = 'PROPOSAL_TIMELINE_STATUSES_MAX_STATUS_ASC',\n  ProposalTimelineStatusesMaxStatusDesc = 'PROPOSAL_TIMELINE_STATUSES_MAX_STATUS_DESC',\n  ProposalTimelineStatusesMaxTimestampAsc = 'PROPOSAL_TIMELINE_STATUSES_MAX_TIMESTAMP_ASC',\n  ProposalTimelineStatusesMaxTimestampDesc = 'PROPOSAL_TIMELINE_STATUSES_MAX_TIMESTAMP_DESC',\n  ProposalTimelineStatusesMaxTxHashAsc = 'PROPOSAL_TIMELINE_STATUSES_MAX_TX_HASH_ASC',\n  ProposalTimelineStatusesMaxTxHashDesc = 'PROPOSAL_TIMELINE_STATUSES_MAX_TX_HASH_DESC',\n  ProposalTimelineStatusesMinBlockNumberAsc = 'PROPOSAL_TIMELINE_STATUSES_MIN_BLOCK_NUMBER_ASC',\n  ProposalTimelineStatusesMinBlockNumberDesc = 'PROPOSAL_TIMELINE_STATUSES_MIN_BLOCK_NUMBER_DESC',\n  ProposalTimelineStatusesMinIdAsc = 'PROPOSAL_TIMELINE_STATUSES_MIN_ID_ASC',\n  ProposalTimelineStatusesMinIdDesc = 'PROPOSAL_TIMELINE_STATUSES_MIN_ID_DESC',\n  ProposalTimelineStatusesMinProposalItemIdAsc = 'PROPOSAL_TIMELINE_STATUSES_MIN_PROPOSAL_ITEM_ID_ASC',\n  ProposalTimelineStatusesMinProposalItemIdDesc = 'PROPOSAL_TIMELINE_STATUSES_MIN_PROPOSAL_ITEM_ID_DESC',\n  ProposalTimelineStatusesMinStatusAsc = 'PROPOSAL_TIMELINE_STATUSES_MIN_STATUS_ASC',\n  ProposalTimelineStatusesMinStatusDesc = 'PROPOSAL_TIMELINE_STATUSES_MIN_STATUS_DESC',\n  ProposalTimelineStatusesMinTimestampAsc = 'PROPOSAL_TIMELINE_STATUSES_MIN_TIMESTAMP_ASC',\n  ProposalTimelineStatusesMinTimestampDesc = 'PROPOSAL_TIMELINE_STATUSES_MIN_TIMESTAMP_DESC',\n  ProposalTimelineStatusesMinTxHashAsc = 'PROPOSAL_TIMELINE_STATUSES_MIN_TX_HASH_ASC',\n  ProposalTimelineStatusesMinTxHashDesc = 'PROPOSAL_TIMELINE_STATUSES_MIN_TX_HASH_DESC',\n  ProposalTimelineStatusesStddevPopulationBlockNumberAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalTimelineStatusesStddevPopulationBlockNumberDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalTimelineStatusesStddevPopulationIdAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_ID_ASC',\n  ProposalTimelineStatusesStddevPopulationIdDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_ID_DESC',\n  ProposalTimelineStatusesStddevPopulationProposalItemIdAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_PROPOSAL_ITEM_ID_ASC',\n  ProposalTimelineStatusesStddevPopulationProposalItemIdDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_PROPOSAL_ITEM_ID_DESC',\n  ProposalTimelineStatusesStddevPopulationStatusAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_STATUS_ASC',\n  ProposalTimelineStatusesStddevPopulationStatusDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_STATUS_DESC',\n  ProposalTimelineStatusesStddevPopulationTimestampAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_TIMESTAMP_ASC',\n  ProposalTimelineStatusesStddevPopulationTimestampDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_TIMESTAMP_DESC',\n  ProposalTimelineStatusesStddevPopulationTxHashAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_TX_HASH_ASC',\n  ProposalTimelineStatusesStddevPopulationTxHashDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_POPULATION_TX_HASH_DESC',\n  ProposalTimelineStatusesStddevSampleBlockNumberAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalTimelineStatusesStddevSampleBlockNumberDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalTimelineStatusesStddevSampleIdAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_ID_ASC',\n  ProposalTimelineStatusesStddevSampleIdDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_ID_DESC',\n  ProposalTimelineStatusesStddevSampleProposalItemIdAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_PROPOSAL_ITEM_ID_ASC',\n  ProposalTimelineStatusesStddevSampleProposalItemIdDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_PROPOSAL_ITEM_ID_DESC',\n  ProposalTimelineStatusesStddevSampleStatusAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_STATUS_ASC',\n  ProposalTimelineStatusesStddevSampleStatusDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_STATUS_DESC',\n  ProposalTimelineStatusesStddevSampleTimestampAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_TIMESTAMP_ASC',\n  ProposalTimelineStatusesStddevSampleTimestampDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_TIMESTAMP_DESC',\n  ProposalTimelineStatusesStddevSampleTxHashAsc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_TX_HASH_ASC',\n  ProposalTimelineStatusesStddevSampleTxHashDesc = 'PROPOSAL_TIMELINE_STATUSES_STDDEV_SAMPLE_TX_HASH_DESC',\n  ProposalTimelineStatusesSumBlockNumberAsc = 'PROPOSAL_TIMELINE_STATUSES_SUM_BLOCK_NUMBER_ASC',\n  ProposalTimelineStatusesSumBlockNumberDesc = 'PROPOSAL_TIMELINE_STATUSES_SUM_BLOCK_NUMBER_DESC',\n  ProposalTimelineStatusesSumIdAsc = 'PROPOSAL_TIMELINE_STATUSES_SUM_ID_ASC',\n  ProposalTimelineStatusesSumIdDesc = 'PROPOSAL_TIMELINE_STATUSES_SUM_ID_DESC',\n  ProposalTimelineStatusesSumProposalItemIdAsc = 'PROPOSAL_TIMELINE_STATUSES_SUM_PROPOSAL_ITEM_ID_ASC',\n  ProposalTimelineStatusesSumProposalItemIdDesc = 'PROPOSAL_TIMELINE_STATUSES_SUM_PROPOSAL_ITEM_ID_DESC',\n  ProposalTimelineStatusesSumStatusAsc = 'PROPOSAL_TIMELINE_STATUSES_SUM_STATUS_ASC',\n  ProposalTimelineStatusesSumStatusDesc = 'PROPOSAL_TIMELINE_STATUSES_SUM_STATUS_DESC',\n  ProposalTimelineStatusesSumTimestampAsc = 'PROPOSAL_TIMELINE_STATUSES_SUM_TIMESTAMP_ASC',\n  ProposalTimelineStatusesSumTimestampDesc = 'PROPOSAL_TIMELINE_STATUSES_SUM_TIMESTAMP_DESC',\n  ProposalTimelineStatusesSumTxHashAsc = 'PROPOSAL_TIMELINE_STATUSES_SUM_TX_HASH_ASC',\n  ProposalTimelineStatusesSumTxHashDesc = 'PROPOSAL_TIMELINE_STATUSES_SUM_TX_HASH_DESC',\n  ProposalTimelineStatusesVariancePopulationBlockNumberAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalTimelineStatusesVariancePopulationBlockNumberDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalTimelineStatusesVariancePopulationIdAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_ID_ASC',\n  ProposalTimelineStatusesVariancePopulationIdDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_ID_DESC',\n  ProposalTimelineStatusesVariancePopulationProposalItemIdAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_PROPOSAL_ITEM_ID_ASC',\n  ProposalTimelineStatusesVariancePopulationProposalItemIdDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_PROPOSAL_ITEM_ID_DESC',\n  ProposalTimelineStatusesVariancePopulationStatusAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_STATUS_ASC',\n  ProposalTimelineStatusesVariancePopulationStatusDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_STATUS_DESC',\n  ProposalTimelineStatusesVariancePopulationTimestampAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_TIMESTAMP_ASC',\n  ProposalTimelineStatusesVariancePopulationTimestampDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_TIMESTAMP_DESC',\n  ProposalTimelineStatusesVariancePopulationTxHashAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_TX_HASH_ASC',\n  ProposalTimelineStatusesVariancePopulationTxHashDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_POPULATION_TX_HASH_DESC',\n  ProposalTimelineStatusesVarianceSampleBlockNumberAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalTimelineStatusesVarianceSampleBlockNumberDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalTimelineStatusesVarianceSampleIdAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_ID_ASC',\n  ProposalTimelineStatusesVarianceSampleIdDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_ID_DESC',\n  ProposalTimelineStatusesVarianceSampleProposalItemIdAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_PROPOSAL_ITEM_ID_ASC',\n  ProposalTimelineStatusesVarianceSampleProposalItemIdDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_PROPOSAL_ITEM_ID_DESC',\n  ProposalTimelineStatusesVarianceSampleStatusAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_STATUS_ASC',\n  ProposalTimelineStatusesVarianceSampleStatusDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_STATUS_DESC',\n  ProposalTimelineStatusesVarianceSampleTimestampAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_TIMESTAMP_ASC',\n  ProposalTimelineStatusesVarianceSampleTimestampDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_TIMESTAMP_DESC',\n  ProposalTimelineStatusesVarianceSampleTxHashAsc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_TX_HASH_ASC',\n  ProposalTimelineStatusesVarianceSampleTxHashDesc = 'PROPOSAL_TIMELINE_STATUSES_VARIANCE_SAMPLE_TX_HASH_DESC',\n  ProposalVotesByProposalIdAverageBlockIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_BLOCK_ID_ASC',\n  ProposalVotesByProposalIdAverageBlockIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_BLOCK_ID_DESC',\n  ProposalVotesByProposalIdAverageBlockNumberAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_BLOCK_NUMBER_ASC',\n  ProposalVotesByProposalIdAverageBlockNumberDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_BLOCK_NUMBER_DESC',\n  ProposalVotesByProposalIdAverageIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_ID_ASC',\n  ProposalVotesByProposalIdAverageIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_ID_DESC',\n  ProposalVotesByProposalIdAverageProposalIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_PROPOSAL_ID_ASC',\n  ProposalVotesByProposalIdAverageProposalIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_PROPOSAL_ID_DESC',\n  ProposalVotesByProposalIdAverageVoterIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_VOTER_ID_ASC',\n  ProposalVotesByProposalIdAverageVoterIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_VOTER_ID_DESC',\n  ProposalVotesByProposalIdAverageVoteStatusAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_VOTE_STATUS_ASC',\n  ProposalVotesByProposalIdAverageVoteStatusDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_AVERAGE_VOTE_STATUS_DESC',\n  ProposalVotesByProposalIdCountAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_COUNT_ASC',\n  ProposalVotesByProposalIdCountDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_COUNT_DESC',\n  ProposalVotesByProposalIdDistinctCountBlockIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_BLOCK_ID_ASC',\n  ProposalVotesByProposalIdDistinctCountBlockIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_BLOCK_ID_DESC',\n  ProposalVotesByProposalIdDistinctCountBlockNumberAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  ProposalVotesByProposalIdDistinctCountBlockNumberDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  ProposalVotesByProposalIdDistinctCountIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_ID_ASC',\n  ProposalVotesByProposalIdDistinctCountIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_ID_DESC',\n  ProposalVotesByProposalIdDistinctCountProposalIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_PROPOSAL_ID_ASC',\n  ProposalVotesByProposalIdDistinctCountProposalIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_PROPOSAL_ID_DESC',\n  ProposalVotesByProposalIdDistinctCountVoterIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_VOTER_ID_ASC',\n  ProposalVotesByProposalIdDistinctCountVoterIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_VOTER_ID_DESC',\n  ProposalVotesByProposalIdDistinctCountVoteStatusAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_VOTE_STATUS_ASC',\n  ProposalVotesByProposalIdDistinctCountVoteStatusDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_DISTINCT_COUNT_VOTE_STATUS_DESC',\n  ProposalVotesByProposalIdMaxBlockIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_BLOCK_ID_ASC',\n  ProposalVotesByProposalIdMaxBlockIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_BLOCK_ID_DESC',\n  ProposalVotesByProposalIdMaxBlockNumberAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_BLOCK_NUMBER_ASC',\n  ProposalVotesByProposalIdMaxBlockNumberDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_BLOCK_NUMBER_DESC',\n  ProposalVotesByProposalIdMaxIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_ID_ASC',\n  ProposalVotesByProposalIdMaxIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_ID_DESC',\n  ProposalVotesByProposalIdMaxProposalIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_PROPOSAL_ID_ASC',\n  ProposalVotesByProposalIdMaxProposalIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_PROPOSAL_ID_DESC',\n  ProposalVotesByProposalIdMaxVoterIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_VOTER_ID_ASC',\n  ProposalVotesByProposalIdMaxVoterIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_VOTER_ID_DESC',\n  ProposalVotesByProposalIdMaxVoteStatusAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_VOTE_STATUS_ASC',\n  ProposalVotesByProposalIdMaxVoteStatusDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MAX_VOTE_STATUS_DESC',\n  ProposalVotesByProposalIdMinBlockIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_BLOCK_ID_ASC',\n  ProposalVotesByProposalIdMinBlockIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_BLOCK_ID_DESC',\n  ProposalVotesByProposalIdMinBlockNumberAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_BLOCK_NUMBER_ASC',\n  ProposalVotesByProposalIdMinBlockNumberDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_BLOCK_NUMBER_DESC',\n  ProposalVotesByProposalIdMinIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_ID_ASC',\n  ProposalVotesByProposalIdMinIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_ID_DESC',\n  ProposalVotesByProposalIdMinProposalIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_PROPOSAL_ID_ASC',\n  ProposalVotesByProposalIdMinProposalIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_PROPOSAL_ID_DESC',\n  ProposalVotesByProposalIdMinVoterIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_VOTER_ID_ASC',\n  ProposalVotesByProposalIdMinVoterIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_VOTER_ID_DESC',\n  ProposalVotesByProposalIdMinVoteStatusAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_VOTE_STATUS_ASC',\n  ProposalVotesByProposalIdMinVoteStatusDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_MIN_VOTE_STATUS_DESC',\n  ProposalVotesByProposalIdStddevPopulationBlockIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_BLOCK_ID_ASC',\n  ProposalVotesByProposalIdStddevPopulationBlockIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_BLOCK_ID_DESC',\n  ProposalVotesByProposalIdStddevPopulationBlockNumberAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalVotesByProposalIdStddevPopulationBlockNumberDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalVotesByProposalIdStddevPopulationIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_ID_ASC',\n  ProposalVotesByProposalIdStddevPopulationIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_ID_DESC',\n  ProposalVotesByProposalIdStddevPopulationProposalIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_PROPOSAL_ID_ASC',\n  ProposalVotesByProposalIdStddevPopulationProposalIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_PROPOSAL_ID_DESC',\n  ProposalVotesByProposalIdStddevPopulationVoterIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_VOTER_ID_ASC',\n  ProposalVotesByProposalIdStddevPopulationVoterIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_VOTER_ID_DESC',\n  ProposalVotesByProposalIdStddevPopulationVoteStatusAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_VOTE_STATUS_ASC',\n  ProposalVotesByProposalIdStddevPopulationVoteStatusDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_POPULATION_VOTE_STATUS_DESC',\n  ProposalVotesByProposalIdStddevSampleBlockIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  ProposalVotesByProposalIdStddevSampleBlockIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  ProposalVotesByProposalIdStddevSampleBlockNumberAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalVotesByProposalIdStddevSampleBlockNumberDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalVotesByProposalIdStddevSampleIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_ID_ASC',\n  ProposalVotesByProposalIdStddevSampleIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_ID_DESC',\n  ProposalVotesByProposalIdStddevSampleProposalIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_PROPOSAL_ID_ASC',\n  ProposalVotesByProposalIdStddevSampleProposalIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_PROPOSAL_ID_DESC',\n  ProposalVotesByProposalIdStddevSampleVoterIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_VOTER_ID_ASC',\n  ProposalVotesByProposalIdStddevSampleVoterIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_VOTER_ID_DESC',\n  ProposalVotesByProposalIdStddevSampleVoteStatusAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_VOTE_STATUS_ASC',\n  ProposalVotesByProposalIdStddevSampleVoteStatusDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_STDDEV_SAMPLE_VOTE_STATUS_DESC',\n  ProposalVotesByProposalIdSumBlockIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_BLOCK_ID_ASC',\n  ProposalVotesByProposalIdSumBlockIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_BLOCK_ID_DESC',\n  ProposalVotesByProposalIdSumBlockNumberAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_BLOCK_NUMBER_ASC',\n  ProposalVotesByProposalIdSumBlockNumberDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_BLOCK_NUMBER_DESC',\n  ProposalVotesByProposalIdSumIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_ID_ASC',\n  ProposalVotesByProposalIdSumIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_ID_DESC',\n  ProposalVotesByProposalIdSumProposalIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_PROPOSAL_ID_ASC',\n  ProposalVotesByProposalIdSumProposalIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_PROPOSAL_ID_DESC',\n  ProposalVotesByProposalIdSumVoterIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_VOTER_ID_ASC',\n  ProposalVotesByProposalIdSumVoterIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_VOTER_ID_DESC',\n  ProposalVotesByProposalIdSumVoteStatusAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_VOTE_STATUS_ASC',\n  ProposalVotesByProposalIdSumVoteStatusDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_SUM_VOTE_STATUS_DESC',\n  ProposalVotesByProposalIdVariancePopulationBlockIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  ProposalVotesByProposalIdVariancePopulationBlockIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  ProposalVotesByProposalIdVariancePopulationBlockNumberAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  ProposalVotesByProposalIdVariancePopulationBlockNumberDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  ProposalVotesByProposalIdVariancePopulationIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_ID_ASC',\n  ProposalVotesByProposalIdVariancePopulationIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_ID_DESC',\n  ProposalVotesByProposalIdVariancePopulationProposalIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_PROPOSAL_ID_ASC',\n  ProposalVotesByProposalIdVariancePopulationProposalIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_PROPOSAL_ID_DESC',\n  ProposalVotesByProposalIdVariancePopulationVoterIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_VOTER_ID_ASC',\n  ProposalVotesByProposalIdVariancePopulationVoterIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_VOTER_ID_DESC',\n  ProposalVotesByProposalIdVariancePopulationVoteStatusAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_VOTE_STATUS_ASC',\n  ProposalVotesByProposalIdVariancePopulationVoteStatusDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_POPULATION_VOTE_STATUS_DESC',\n  ProposalVotesByProposalIdVarianceSampleBlockIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  ProposalVotesByProposalIdVarianceSampleBlockIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  ProposalVotesByProposalIdVarianceSampleBlockNumberAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  ProposalVotesByProposalIdVarianceSampleBlockNumberDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  ProposalVotesByProposalIdVarianceSampleIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_ID_ASC',\n  ProposalVotesByProposalIdVarianceSampleIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_ID_DESC',\n  ProposalVotesByProposalIdVarianceSampleProposalIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_PROPOSAL_ID_ASC',\n  ProposalVotesByProposalIdVarianceSampleProposalIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_PROPOSAL_ID_DESC',\n  ProposalVotesByProposalIdVarianceSampleVoterIdAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_VOTER_ID_ASC',\n  ProposalVotesByProposalIdVarianceSampleVoterIdDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_VOTER_ID_DESC',\n  ProposalVotesByProposalIdVarianceSampleVoteStatusAsc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_VOTE_STATUS_ASC',\n  ProposalVotesByProposalIdVarianceSampleVoteStatusDesc = 'PROPOSAL_VOTES_BY_PROPOSAL_ID_VARIANCE_SAMPLE_VOTE_STATUS_DESC',\n  RemovedAsc = 'REMOVED_ASC',\n  RemovedDesc = 'REMOVED_DESC',\n  SignatureAsc = 'SIGNATURE_ASC',\n  SignatureDesc = 'SIGNATURE_DESC',\n  StatusAsc = 'STATUS_ASC',\n  StatusDesc = 'STATUS_DESC',\n  TypeAsc = 'TYPE_ASC',\n  TypeDesc = 'TYPE_DESC',\n  UnsignedProposalsQueueItemsByProposalIdAverageBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_AVERAGE_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByProposalIdAverageBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_AVERAGE_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByProposalIdAverageIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_AVERAGE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdAverageIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_AVERAGE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdAverageProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_AVERAGE_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdAverageProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_AVERAGE_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdAverageQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_AVERAGE_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdAverageQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_AVERAGE_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdCountAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_COUNT_ASC',\n  UnsignedProposalsQueueItemsByProposalIdCountDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_COUNT_DESC',\n  UnsignedProposalsQueueItemsByProposalIdDistinctCountBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByProposalIdDistinctCountBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByProposalIdDistinctCountIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_DISTINCT_COUNT_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdDistinctCountIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_DISTINCT_COUNT_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdDistinctCountProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_DISTINCT_COUNT_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdDistinctCountProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_DISTINCT_COUNT_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdDistinctCountQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_DISTINCT_COUNT_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdDistinctCountQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_DISTINCT_COUNT_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdMaxBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MAX_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByProposalIdMaxBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MAX_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByProposalIdMaxIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MAX_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdMaxIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MAX_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdMaxProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MAX_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdMaxProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MAX_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdMaxQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MAX_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdMaxQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MAX_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdMinBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MIN_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByProposalIdMinBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MIN_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByProposalIdMinIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MIN_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdMinIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MIN_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdMinProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MIN_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdMinProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MIN_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdMinQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MIN_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdMinQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_MIN_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdStddevPopulationBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByProposalIdStddevPopulationBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByProposalIdStddevPopulationIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_POPULATION_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdStddevPopulationIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_POPULATION_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdStddevPopulationProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_POPULATION_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdStddevPopulationProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_POPULATION_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdStddevPopulationQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_POPULATION_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdStddevPopulationQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_POPULATION_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdStddevSampleBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByProposalIdStddevSampleBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByProposalIdStddevSampleIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_SAMPLE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdStddevSampleIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_SAMPLE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdStddevSampleProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_SAMPLE_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdStddevSampleProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_SAMPLE_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdStddevSampleQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_SAMPLE_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdStddevSampleQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_STDDEV_SAMPLE_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdSumBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_SUM_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByProposalIdSumBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_SUM_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByProposalIdSumIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_SUM_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdSumIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_SUM_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdSumProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_SUM_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdSumProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_SUM_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdSumQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_SUM_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdSumQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_SUM_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdVariancePopulationBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByProposalIdVariancePopulationBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByProposalIdVariancePopulationIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_POPULATION_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdVariancePopulationIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_POPULATION_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdVariancePopulationProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_POPULATION_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdVariancePopulationProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_POPULATION_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdVariancePopulationQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_POPULATION_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdVariancePopulationQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_POPULATION_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdVarianceSampleBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByProposalIdVarianceSampleBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByProposalIdVarianceSampleIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_SAMPLE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdVarianceSampleIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_SAMPLE_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdVarianceSampleProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_SAMPLE_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdVarianceSampleProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_SAMPLE_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByProposalIdVarianceSampleQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_SAMPLE_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByProposalIdVarianceSampleQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_PROPOSAL_ID_VARIANCE_SAMPLE_QUEUE_ID_DESC',\n}\n\nexport enum ProposalStatus {\n  Accepted = 'Accepted',\n  Executed = 'Executed',\n  FailedToExecute = 'FailedToExecute',\n  Open = 'Open',\n  Rejected = 'Rejected',\n  Removed = 'Removed',\n  Signed = 'Signed',\n}\n\n/** A filter to be used against ProposalStatus fields. All fields are combined with a logical ‘and.’ */\nexport type ProposalStatusFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<ProposalStatus>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<ProposalStatus>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<ProposalStatus>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<ProposalStatus>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<ProposalStatus>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<ProposalStatus>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<ProposalStatus>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<ProposalStatus>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<ProposalStatus>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<ProposalStatus>>;\n};\n\nexport type ProposalTimelineStatus = Node & {\n  __typename?: 'ProposalTimelineStatus';\n  blockNumber: Scalars['BigFloat'];\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  /** Reads a single `ProposalItem` that is related to this `ProposalTimelineStatus`. */\n  proposalItem?: Maybe<ProposalItem>;\n  proposalItemId: Scalars['String'];\n  status: ProposalStatus;\n  timestamp: Scalars['Datetime'];\n  txHash?: Maybe<Scalars['String']>;\n};\n\nexport type ProposalTimelineStatusAggregates = {\n  __typename?: 'ProposalTimelineStatusAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<ProposalTimelineStatusAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<ProposalTimelineStatusDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<ProposalTimelineStatusMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<ProposalTimelineStatusMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<ProposalTimelineStatusStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<ProposalTimelineStatusStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<ProposalTimelineStatusSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<ProposalTimelineStatusVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<ProposalTimelineStatusVarianceSampleAggregates>;\n};\n\nexport type ProposalTimelineStatusAverageAggregates = {\n  __typename?: 'ProposalTimelineStatusAverageAggregates';\n  /** Mean average of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalTimelineStatusDistinctCountAggregates = {\n  __typename?: 'ProposalTimelineStatusDistinctCountAggregates';\n  /** Distinct count of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of proposalItemId across the matching connection */\n  proposalItemId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of status across the matching connection */\n  status?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of timestamp across the matching connection */\n  timestamp?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of txHash across the matching connection */\n  txHash?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `ProposalTimelineStatus` object types. All fields are combined with a logical ‘and.’ */\nexport type ProposalTimelineStatusFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ProposalTimelineStatusFilter>>;\n  /** Filter by the object’s `blockNumber` field. */\n  blockNumber?: InputMaybe<BigFloatFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ProposalTimelineStatusFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ProposalTimelineStatusFilter>>;\n  /** Filter by the object’s `proposalItemId` field. */\n  proposalItemId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `status` field. */\n  status?: InputMaybe<ProposalStatusFilter>;\n  /** Filter by the object’s `timestamp` field. */\n  timestamp?: InputMaybe<DatetimeFilter>;\n  /** Filter by the object’s `txHash` field. */\n  txHash?: InputMaybe<StringFilter>;\n};\n\nexport type ProposalTimelineStatusMaxAggregates = {\n  __typename?: 'ProposalTimelineStatusMaxAggregates';\n  /** Maximum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalTimelineStatusMinAggregates = {\n  __typename?: 'ProposalTimelineStatusMinAggregates';\n  /** Minimum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalTimelineStatusStddevPopulationAggregates = {\n  __typename?: 'ProposalTimelineStatusStddevPopulationAggregates';\n  /** Population standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalTimelineStatusStddevSampleAggregates = {\n  __typename?: 'ProposalTimelineStatusStddevSampleAggregates';\n  /** Sample standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalTimelineStatusSumAggregates = {\n  __typename?: 'ProposalTimelineStatusSumAggregates';\n  /** Sum of blockNumber across the matching connection */\n  blockNumber: Scalars['BigFloat'];\n};\n\nexport type ProposalTimelineStatusVariancePopulationAggregates = {\n  __typename?: 'ProposalTimelineStatusVariancePopulationAggregates';\n  /** Population variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalTimelineStatusVarianceSampleAggregates = {\n  __typename?: 'ProposalTimelineStatusVarianceSampleAggregates';\n  /** Sample variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `ProposalTimelineStatus` values. */\nexport type ProposalTimelineStatusesConnection = {\n  __typename?: 'ProposalTimelineStatusesConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposalTimelineStatusAggregates>;\n  /** A list of edges which contains the `ProposalTimelineStatus` and cursor to aid in pagination. */\n  edges: Array<ProposalTimelineStatusesEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposalTimelineStatusAggregates>>;\n  /** A list of `ProposalTimelineStatus` objects. */\n  nodes: Array<Maybe<ProposalTimelineStatus>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ProposalTimelineStatus` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `ProposalTimelineStatus` values. */\nexport type ProposalTimelineStatusesConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposalTimelineStatusesGroupBy>;\n  having?: InputMaybe<ProposalTimelineStatusesHavingInput>;\n};\n\n/** A `ProposalTimelineStatus` edge in the connection. */\nexport type ProposalTimelineStatusesEdge = {\n  __typename?: 'ProposalTimelineStatusesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `ProposalTimelineStatus` at the end of the edge. */\n  node?: Maybe<ProposalTimelineStatus>;\n};\n\n/** Grouping methods for `ProposalTimelineStatus` for usage during aggregation. */\nexport enum ProposalTimelineStatusesGroupBy {\n  BlockNumber = 'BLOCK_NUMBER',\n  ProposalItemId = 'PROPOSAL_ITEM_ID',\n  Status = 'STATUS',\n  Timestamp = 'TIMESTAMP',\n  TimestampTruncatedToDay = 'TIMESTAMP_TRUNCATED_TO_DAY',\n  TimestampTruncatedToHour = 'TIMESTAMP_TRUNCATED_TO_HOUR',\n  TxHash = 'TX_HASH',\n}\n\nexport type ProposalTimelineStatusesHavingAverageInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type ProposalTimelineStatusesHavingDistinctCountInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\n/** Conditions for `ProposalTimelineStatus` aggregates. */\nexport type ProposalTimelineStatusesHavingInput = {\n  AND?: InputMaybe<Array<ProposalTimelineStatusesHavingInput>>;\n  OR?: InputMaybe<Array<ProposalTimelineStatusesHavingInput>>;\n  average?: InputMaybe<ProposalTimelineStatusesHavingAverageInput>;\n  distinctCount?: InputMaybe<ProposalTimelineStatusesHavingDistinctCountInput>;\n  max?: InputMaybe<ProposalTimelineStatusesHavingMaxInput>;\n  min?: InputMaybe<ProposalTimelineStatusesHavingMinInput>;\n  stddevPopulation?: InputMaybe<ProposalTimelineStatusesHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<ProposalTimelineStatusesHavingStddevSampleInput>;\n  sum?: InputMaybe<ProposalTimelineStatusesHavingSumInput>;\n  variancePopulation?: InputMaybe<ProposalTimelineStatusesHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<ProposalTimelineStatusesHavingVarianceSampleInput>;\n};\n\nexport type ProposalTimelineStatusesHavingMaxInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type ProposalTimelineStatusesHavingMinInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type ProposalTimelineStatusesHavingStddevPopulationInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type ProposalTimelineStatusesHavingStddevSampleInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type ProposalTimelineStatusesHavingSumInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type ProposalTimelineStatusesHavingVariancePopulationInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\nexport type ProposalTimelineStatusesHavingVarianceSampleInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n  timestamp?: InputMaybe<HavingDatetimeFilter>;\n};\n\n/** Methods to use when ordering `ProposalTimelineStatus`. */\nexport enum ProposalTimelineStatusesOrderBy {\n  BlockNumberAsc = 'BLOCK_NUMBER_ASC',\n  BlockNumberDesc = 'BLOCK_NUMBER_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ProposalItemIdAsc = 'PROPOSAL_ITEM_ID_ASC',\n  ProposalItemIdDesc = 'PROPOSAL_ITEM_ID_DESC',\n  StatusAsc = 'STATUS_ASC',\n  StatusDesc = 'STATUS_DESC',\n  TimestampAsc = 'TIMESTAMP_ASC',\n  TimestampDesc = 'TIMESTAMP_DESC',\n  TxHashAsc = 'TX_HASH_ASC',\n  TxHashDesc = 'TX_HASH_DESC',\n}\n\nexport enum ProposalType {\n  AnchorCreateProposal = 'AnchorCreateProposal',\n  AnchorUpdateProposal = 'AnchorUpdateProposal',\n  EvmProposal = 'EvmProposal',\n  FeeRecipientUpdateProposal = 'FeeRecipientUpdateProposal',\n  MaxDepositLimitUpdateProposal = 'MaxDepositLimitUpdateProposal',\n  MinWithdrawalLimitUpdateProposal = 'MinWithdrawalLimitUpdateProposal',\n  ProposerSetUpdateProposal = 'ProposerSetUpdateProposal',\n  RefreshVote = 'RefreshVote',\n  RescueTokensProposal = 'RescueTokensProposal',\n  ResourceIdUpdateProposal = 'ResourceIdUpdateProposal',\n  SetTreasuryHandlerProposal = 'SetTreasuryHandlerProposal',\n  SetVerifierProposal = 'SetVerifierProposal',\n  TokenAddProposal = 'TokenAddProposal',\n  TokenRemoveProposal = 'TokenRemoveProposal',\n  Unknown = 'Unknown',\n  WrappingFeeUpdateProposal = 'WrappingFeeUpdateProposal',\n}\n\n/** A filter to be used against ProposalType fields. All fields are combined with a logical ‘and.’ */\nexport type ProposalTypeFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<ProposalType>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<ProposalType>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<ProposalType>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<ProposalType>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<ProposalType>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<ProposalType>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<ProposalType>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<ProposalType>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<ProposalType>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<ProposalType>>;\n};\n\nexport type ProposalVote = Node & {\n  __typename?: 'ProposalVote';\n  /** Reads a single `Block` that is related to this `ProposalVote`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  blockNumber: Scalars['BigFloat'];\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  /** Reads a single `ProposalItem` that is related to this `ProposalVote`. */\n  proposal?: Maybe<ProposalItem>;\n  proposalId: Scalars['String'];\n  voteStatus: VoteStatus;\n  /** Reads a single `Proposer` that is related to this `ProposalVote`. */\n  voter?: Maybe<Proposer>;\n  voterId: Scalars['String'];\n};\n\nexport type ProposalVoteAggregates = {\n  __typename?: 'ProposalVoteAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<ProposalVoteAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<ProposalVoteDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<ProposalVoteMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<ProposalVoteMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<ProposalVoteStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<ProposalVoteStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<ProposalVoteSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<ProposalVoteVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<ProposalVoteVarianceSampleAggregates>;\n};\n\nexport type ProposalVoteAverageAggregates = {\n  __typename?: 'ProposalVoteAverageAggregates';\n  /** Mean average of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalVoteDistinctCountAggregates = {\n  __typename?: 'ProposalVoteDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of proposalId across the matching connection */\n  proposalId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of voteStatus across the matching connection */\n  voteStatus?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of voterId across the matching connection */\n  voterId?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `ProposalVote` object types. All fields are combined with a logical ‘and.’ */\nexport type ProposalVoteFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ProposalVoteFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `blockNumber` field. */\n  blockNumber?: InputMaybe<BigFloatFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ProposalVoteFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ProposalVoteFilter>>;\n  /** Filter by the object’s `proposalId` field. */\n  proposalId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `voteStatus` field. */\n  voteStatus?: InputMaybe<VoteStatusFilter>;\n  /** Filter by the object’s `voterId` field. */\n  voterId?: InputMaybe<StringFilter>;\n};\n\nexport type ProposalVoteMaxAggregates = {\n  __typename?: 'ProposalVoteMaxAggregates';\n  /** Maximum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalVoteMinAggregates = {\n  __typename?: 'ProposalVoteMinAggregates';\n  /** Minimum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalVoteStddevPopulationAggregates = {\n  __typename?: 'ProposalVoteStddevPopulationAggregates';\n  /** Population standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalVoteStddevSampleAggregates = {\n  __typename?: 'ProposalVoteStddevSampleAggregates';\n  /** Sample standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalVoteSumAggregates = {\n  __typename?: 'ProposalVoteSumAggregates';\n  /** Sum of blockNumber across the matching connection */\n  blockNumber: Scalars['BigFloat'];\n};\n\nexport type ProposalVoteVariancePopulationAggregates = {\n  __typename?: 'ProposalVoteVariancePopulationAggregates';\n  /** Population variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposalVoteVarianceSampleAggregates = {\n  __typename?: 'ProposalVoteVarianceSampleAggregates';\n  /** Sample variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `ProposalVote` values. */\nexport type ProposalVotesConnection = {\n  __typename?: 'ProposalVotesConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposalVoteAggregates>;\n  /** A list of edges which contains the `ProposalVote` and cursor to aid in pagination. */\n  edges: Array<ProposalVotesEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposalVoteAggregates>>;\n  /** A list of `ProposalVote` objects. */\n  nodes: Array<Maybe<ProposalVote>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ProposalVote` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `ProposalVote` values. */\nexport type ProposalVotesConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposalVotesGroupBy>;\n  having?: InputMaybe<ProposalVotesHavingInput>;\n};\n\n/** A `ProposalVote` edge in the connection. */\nexport type ProposalVotesEdge = {\n  __typename?: 'ProposalVotesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `ProposalVote` at the end of the edge. */\n  node?: Maybe<ProposalVote>;\n};\n\n/** Grouping methods for `ProposalVote` for usage during aggregation. */\nexport enum ProposalVotesGroupBy {\n  BlockId = 'BLOCK_ID',\n  BlockNumber = 'BLOCK_NUMBER',\n  ProposalId = 'PROPOSAL_ID',\n  VoterId = 'VOTER_ID',\n  VoteStatus = 'VOTE_STATUS',\n}\n\nexport type ProposalVotesHavingAverageInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n};\n\nexport type ProposalVotesHavingDistinctCountInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n};\n\n/** Conditions for `ProposalVote` aggregates. */\nexport type ProposalVotesHavingInput = {\n  AND?: InputMaybe<Array<ProposalVotesHavingInput>>;\n  OR?: InputMaybe<Array<ProposalVotesHavingInput>>;\n  average?: InputMaybe<ProposalVotesHavingAverageInput>;\n  distinctCount?: InputMaybe<ProposalVotesHavingDistinctCountInput>;\n  max?: InputMaybe<ProposalVotesHavingMaxInput>;\n  min?: InputMaybe<ProposalVotesHavingMinInput>;\n  stddevPopulation?: InputMaybe<ProposalVotesHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<ProposalVotesHavingStddevSampleInput>;\n  sum?: InputMaybe<ProposalVotesHavingSumInput>;\n  variancePopulation?: InputMaybe<ProposalVotesHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<ProposalVotesHavingVarianceSampleInput>;\n};\n\nexport type ProposalVotesHavingMaxInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n};\n\nexport type ProposalVotesHavingMinInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n};\n\nexport type ProposalVotesHavingStddevPopulationInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n};\n\nexport type ProposalVotesHavingStddevSampleInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n};\n\nexport type ProposalVotesHavingSumInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n};\n\nexport type ProposalVotesHavingVariancePopulationInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n};\n\nexport type ProposalVotesHavingVarianceSampleInput = {\n  blockNumber?: InputMaybe<HavingBigfloatFilter>;\n};\n\n/** Methods to use when ordering `ProposalVote`. */\nexport enum ProposalVotesOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  BlockNumberAsc = 'BLOCK_NUMBER_ASC',\n  BlockNumberDesc = 'BLOCK_NUMBER_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ProposalIdAsc = 'PROPOSAL_ID_ASC',\n  ProposalIdDesc = 'PROPOSAL_ID_DESC',\n  VoterIdAsc = 'VOTER_ID_ASC',\n  VoterIdDesc = 'VOTER_ID_DESC',\n  VoteStatusAsc = 'VOTE_STATUS_ASC',\n  VoteStatusDesc = 'VOTE_STATUS_DESC',\n}\n\nexport type Proposer = Node & {\n  __typename?: 'Proposer';\n  /** Reads a single `Account` that is related to this `Proposer`. */\n  account?: Maybe<Account>;\n  accountId: Scalars['String'];\n  /** Reads and enables pagination through a set of `Block`. */\n  blocksByProposalVoteVoterIdAndBlockId: ProposerBlocksByProposalVoteVoterIdAndBlockIdManyToManyConnection;\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  /** Reads and enables pagination through a set of `ProposalItem`. */\n  proposalItemsByProposalVoteVoterIdAndProposalId: ProposerProposalItemsByProposalVoteVoterIdAndProposalIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `SessionProposer`. */\n  sessionProposers: SessionProposersConnection;\n  /** Reads and enables pagination through a set of `Session`. */\n  sessionsBySessionProposerProposerIdAndSessionId: ProposerSessionsBySessionProposerProposerIdAndSessionIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  votes: ProposalVotesConnection;\n};\n\nexport type ProposerBlocksByProposalVoteVoterIdAndBlockIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<BlockFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<BlocksOrderBy>>;\n};\n\nexport type ProposerProposalItemsByProposalVoteVoterIdAndProposalIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalItemFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalItemsOrderBy>>;\n};\n\nexport type ProposerSessionProposersArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionProposersOrderBy>>;\n};\n\nexport type ProposerSessionsBySessionProposerProposerIdAndSessionIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionsOrderBy>>;\n};\n\nexport type ProposerVotesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\nexport type ProposerAggregates = {\n  __typename?: 'ProposerAggregates';\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<ProposerDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n};\n\n/** A connection to a list of `Block` values, with data from `ProposalVote`. */\nexport type ProposerBlocksByProposalVoteVoterIdAndBlockIdManyToManyConnection = {\n  __typename?: 'ProposerBlocksByProposalVoteVoterIdAndBlockIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<BlockAggregates>;\n  /** A list of edges which contains the `Block`, info from the `ProposalVote`, and the cursor to aid in pagination. */\n  edges: Array<ProposerBlocksByProposalVoteVoterIdAndBlockIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<BlockAggregates>>;\n  /** A list of `Block` objects. */\n  nodes: Array<Maybe<Block>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Block` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Block` values, with data from `ProposalVote`. */\nexport type ProposerBlocksByProposalVoteVoterIdAndBlockIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<BlocksGroupBy>;\n  having?: InputMaybe<BlocksHavingInput>;\n};\n\n/** A `Block` edge in the connection, with data from `ProposalVote`. */\nexport type ProposerBlocksByProposalVoteVoterIdAndBlockIdManyToManyEdge = {\n  __typename?: 'ProposerBlocksByProposalVoteVoterIdAndBlockIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Block` at the end of the edge. */\n  node?: Maybe<Block>;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  proposalVotes: ProposalVotesConnection;\n};\n\n/** A `Block` edge in the connection, with data from `ProposalVote`. */\nexport type ProposerBlocksByProposalVoteVoterIdAndBlockIdManyToManyEdgeProposalVotesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\nexport type ProposerDistinctCountAggregates = {\n  __typename?: 'ProposerDistinctCountAggregates';\n  /** Distinct count of accountId across the matching connection */\n  accountId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `Proposer` object types. All fields are combined with a logical ‘and.’ */\nexport type ProposerFilter = {\n  /** Filter by the object’s `accountId` field. */\n  accountId?: InputMaybe<StringFilter>;\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ProposerFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ProposerFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ProposerFilter>>;\n};\n\n/** A connection to a list of `ProposalItem` values, with data from `ProposalVote`. */\nexport type ProposerProposalItemsByProposalVoteVoterIdAndProposalIdManyToManyConnection = {\n  __typename?: 'ProposerProposalItemsByProposalVoteVoterIdAndProposalIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposalItemAggregates>;\n  /** A list of edges which contains the `ProposalItem`, info from the `ProposalVote`, and the cursor to aid in pagination. */\n  edges: Array<ProposerProposalItemsByProposalVoteVoterIdAndProposalIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposalItemAggregates>>;\n  /** A list of `ProposalItem` objects. */\n  nodes: Array<Maybe<ProposalItem>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ProposalItem` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `ProposalItem` values, with data from `ProposalVote`. */\nexport type ProposerProposalItemsByProposalVoteVoterIdAndProposalIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposalItemsGroupBy>;\n  having?: InputMaybe<ProposalItemsHavingInput>;\n};\n\n/** A `ProposalItem` edge in the connection, with data from `ProposalVote`. */\nexport type ProposerProposalItemsByProposalVoteVoterIdAndProposalIdManyToManyEdge = {\n  __typename?: 'ProposerProposalItemsByProposalVoteVoterIdAndProposalIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `ProposalItem` at the end of the edge. */\n  node?: Maybe<ProposalItem>;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  proposalVotesByProposalId: ProposalVotesConnection;\n};\n\n/** A `ProposalItem` edge in the connection, with data from `ProposalVote`. */\nexport type ProposerProposalItemsByProposalVoteVoterIdAndProposalIdManyToManyEdgeProposalVotesByProposalIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\n/** A connection to a list of `Session` values, with data from `SessionProposer`. */\nexport type ProposerSessionsBySessionProposerProposerIdAndSessionIdManyToManyConnection = {\n  __typename?: 'ProposerSessionsBySessionProposerProposerIdAndSessionIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<SessionAggregates>;\n  /** A list of edges which contains the `Session`, info from the `SessionProposer`, and the cursor to aid in pagination. */\n  edges: Array<ProposerSessionsBySessionProposerProposerIdAndSessionIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<SessionAggregates>>;\n  /** A list of `Session` objects. */\n  nodes: Array<Maybe<Session>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Session` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Session` values, with data from `SessionProposer`. */\nexport type ProposerSessionsBySessionProposerProposerIdAndSessionIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<SessionsGroupBy>;\n  having?: InputMaybe<SessionsHavingInput>;\n};\n\n/** A `Session` edge in the connection, with data from `SessionProposer`. */\nexport type ProposerSessionsBySessionProposerProposerIdAndSessionIdManyToManyEdge = {\n  __typename?: 'ProposerSessionsBySessionProposerProposerIdAndSessionIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Session` at the end of the edge. */\n  node?: Maybe<Session>;\n  /** Reads and enables pagination through a set of `SessionProposer`. */\n  sessionProposers: SessionProposersConnection;\n};\n\n/** A `Session` edge in the connection, with data from `SessionProposer`. */\nexport type ProposerSessionsBySessionProposerProposerIdAndSessionIdManyToManyEdgeSessionProposersArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionProposersOrderBy>>;\n};\n\nexport type ProposerThreshold = Node & {\n  __typename?: 'ProposerThreshold';\n  /** Reads a single `Block` that is related to this `ProposerThreshold`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  value?: Maybe<Scalars['Int']>;\n};\n\nexport type ProposerThresholdAggregates = {\n  __typename?: 'ProposerThresholdAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<ProposerThresholdAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<ProposerThresholdDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<ProposerThresholdMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<ProposerThresholdMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<ProposerThresholdStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<ProposerThresholdStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<ProposerThresholdSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<ProposerThresholdVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<ProposerThresholdVarianceSampleAggregates>;\n};\n\nexport type ProposerThresholdAverageAggregates = {\n  __typename?: 'ProposerThresholdAverageAggregates';\n  /** Mean average of value across the matching connection */\n  value?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposerThresholdDistinctCountAggregates = {\n  __typename?: 'ProposerThresholdDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of value across the matching connection */\n  value?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `ProposerThreshold` object types. All fields are combined with a logical ‘and.’ */\nexport type ProposerThresholdFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ProposerThresholdFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ProposerThresholdFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ProposerThresholdFilter>>;\n  /** Filter by the object’s `value` field. */\n  value?: InputMaybe<IntFilter>;\n};\n\nexport type ProposerThresholdMaxAggregates = {\n  __typename?: 'ProposerThresholdMaxAggregates';\n  /** Maximum of value across the matching connection */\n  value?: Maybe<Scalars['Int']>;\n};\n\nexport type ProposerThresholdMinAggregates = {\n  __typename?: 'ProposerThresholdMinAggregates';\n  /** Minimum of value across the matching connection */\n  value?: Maybe<Scalars['Int']>;\n};\n\nexport type ProposerThresholdStddevPopulationAggregates = {\n  __typename?: 'ProposerThresholdStddevPopulationAggregates';\n  /** Population standard deviation of value across the matching connection */\n  value?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposerThresholdStddevSampleAggregates = {\n  __typename?: 'ProposerThresholdStddevSampleAggregates';\n  /** Sample standard deviation of value across the matching connection */\n  value?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposerThresholdSumAggregates = {\n  __typename?: 'ProposerThresholdSumAggregates';\n  /** Sum of value across the matching connection */\n  value: Scalars['BigInt'];\n};\n\nexport type ProposerThresholdVariancePopulationAggregates = {\n  __typename?: 'ProposerThresholdVariancePopulationAggregates';\n  /** Population variance of value across the matching connection */\n  value?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type ProposerThresholdVarianceSampleAggregates = {\n  __typename?: 'ProposerThresholdVarianceSampleAggregates';\n  /** Sample variance of value across the matching connection */\n  value?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `ProposerThreshold` values. */\nexport type ProposerThresholdsConnection = {\n  __typename?: 'ProposerThresholdsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposerThresholdAggregates>;\n  /** A list of edges which contains the `ProposerThreshold` and cursor to aid in pagination. */\n  edges: Array<ProposerThresholdsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposerThresholdAggregates>>;\n  /** A list of `ProposerThreshold` objects. */\n  nodes: Array<Maybe<ProposerThreshold>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ProposerThreshold` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `ProposerThreshold` values. */\nexport type ProposerThresholdsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposerThresholdsGroupBy>;\n  having?: InputMaybe<ProposerThresholdsHavingInput>;\n};\n\n/** A `ProposerThreshold` edge in the connection. */\nexport type ProposerThresholdsEdge = {\n  __typename?: 'ProposerThresholdsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `ProposerThreshold` at the end of the edge. */\n  node?: Maybe<ProposerThreshold>;\n};\n\n/** Grouping methods for `ProposerThreshold` for usage during aggregation. */\nexport enum ProposerThresholdsGroupBy {\n  BlockId = 'BLOCK_ID',\n  Value = 'VALUE',\n}\n\nexport type ProposerThresholdsHavingAverageInput = {\n  value?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposerThresholdsHavingDistinctCountInput = {\n  value?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `ProposerThreshold` aggregates. */\nexport type ProposerThresholdsHavingInput = {\n  AND?: InputMaybe<Array<ProposerThresholdsHavingInput>>;\n  OR?: InputMaybe<Array<ProposerThresholdsHavingInput>>;\n  average?: InputMaybe<ProposerThresholdsHavingAverageInput>;\n  distinctCount?: InputMaybe<ProposerThresholdsHavingDistinctCountInput>;\n  max?: InputMaybe<ProposerThresholdsHavingMaxInput>;\n  min?: InputMaybe<ProposerThresholdsHavingMinInput>;\n  stddevPopulation?: InputMaybe<ProposerThresholdsHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<ProposerThresholdsHavingStddevSampleInput>;\n  sum?: InputMaybe<ProposerThresholdsHavingSumInput>;\n  variancePopulation?: InputMaybe<ProposerThresholdsHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<ProposerThresholdsHavingVarianceSampleInput>;\n};\n\nexport type ProposerThresholdsHavingMaxInput = {\n  value?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposerThresholdsHavingMinInput = {\n  value?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposerThresholdsHavingStddevPopulationInput = {\n  value?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposerThresholdsHavingStddevSampleInput = {\n  value?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposerThresholdsHavingSumInput = {\n  value?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposerThresholdsHavingVariancePopulationInput = {\n  value?: InputMaybe<HavingIntFilter>;\n};\n\nexport type ProposerThresholdsHavingVarianceSampleInput = {\n  value?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `ProposerThreshold`. */\nexport enum ProposerThresholdsOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ValueAsc = 'VALUE_ASC',\n  ValueDesc = 'VALUE_DESC',\n}\n\n/** A connection to a list of `Proposer` values. */\nexport type ProposersConnection = {\n  __typename?: 'ProposersConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposerAggregates>;\n  /** A list of edges which contains the `Proposer` and cursor to aid in pagination. */\n  edges: Array<ProposersEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposerAggregates>>;\n  /** A list of `Proposer` objects. */\n  nodes: Array<Maybe<Proposer>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Proposer` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Proposer` values. */\nexport type ProposersConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposersGroupBy>;\n  having?: InputMaybe<ProposersHavingInput>;\n};\n\n/** A `Proposer` edge in the connection. */\nexport type ProposersEdge = {\n  __typename?: 'ProposersEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Proposer` at the end of the edge. */\n  node?: Maybe<Proposer>;\n};\n\n/** Grouping methods for `Proposer` for usage during aggregation. */\nexport enum ProposersGroupBy {\n  AccountId = 'ACCOUNT_ID',\n}\n\n/** Conditions for `Proposer` aggregates. */\nexport type ProposersHavingInput = {\n  AND?: InputMaybe<Array<ProposersHavingInput>>;\n  OR?: InputMaybe<Array<ProposersHavingInput>>;\n};\n\n/** Methods to use when ordering `Proposer`. */\nexport enum ProposersOrderBy {\n  AccountIdAsc = 'ACCOUNT_ID_ASC',\n  AccountIdDesc = 'ACCOUNT_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SessionProposersAverageIdAsc = 'SESSION_PROPOSERS_AVERAGE_ID_ASC',\n  SessionProposersAverageIdDesc = 'SESSION_PROPOSERS_AVERAGE_ID_DESC',\n  SessionProposersAverageProposerIdAsc = 'SESSION_PROPOSERS_AVERAGE_PROPOSER_ID_ASC',\n  SessionProposersAverageProposerIdDesc = 'SESSION_PROPOSERS_AVERAGE_PROPOSER_ID_DESC',\n  SessionProposersAverageSessionIdAsc = 'SESSION_PROPOSERS_AVERAGE_SESSION_ID_ASC',\n  SessionProposersAverageSessionIdDesc = 'SESSION_PROPOSERS_AVERAGE_SESSION_ID_DESC',\n  SessionProposersCountAsc = 'SESSION_PROPOSERS_COUNT_ASC',\n  SessionProposersCountDesc = 'SESSION_PROPOSERS_COUNT_DESC',\n  SessionProposersDistinctCountIdAsc = 'SESSION_PROPOSERS_DISTINCT_COUNT_ID_ASC',\n  SessionProposersDistinctCountIdDesc = 'SESSION_PROPOSERS_DISTINCT_COUNT_ID_DESC',\n  SessionProposersDistinctCountProposerIdAsc = 'SESSION_PROPOSERS_DISTINCT_COUNT_PROPOSER_ID_ASC',\n  SessionProposersDistinctCountProposerIdDesc = 'SESSION_PROPOSERS_DISTINCT_COUNT_PROPOSER_ID_DESC',\n  SessionProposersDistinctCountSessionIdAsc = 'SESSION_PROPOSERS_DISTINCT_COUNT_SESSION_ID_ASC',\n  SessionProposersDistinctCountSessionIdDesc = 'SESSION_PROPOSERS_DISTINCT_COUNT_SESSION_ID_DESC',\n  SessionProposersMaxIdAsc = 'SESSION_PROPOSERS_MAX_ID_ASC',\n  SessionProposersMaxIdDesc = 'SESSION_PROPOSERS_MAX_ID_DESC',\n  SessionProposersMaxProposerIdAsc = 'SESSION_PROPOSERS_MAX_PROPOSER_ID_ASC',\n  SessionProposersMaxProposerIdDesc = 'SESSION_PROPOSERS_MAX_PROPOSER_ID_DESC',\n  SessionProposersMaxSessionIdAsc = 'SESSION_PROPOSERS_MAX_SESSION_ID_ASC',\n  SessionProposersMaxSessionIdDesc = 'SESSION_PROPOSERS_MAX_SESSION_ID_DESC',\n  SessionProposersMinIdAsc = 'SESSION_PROPOSERS_MIN_ID_ASC',\n  SessionProposersMinIdDesc = 'SESSION_PROPOSERS_MIN_ID_DESC',\n  SessionProposersMinProposerIdAsc = 'SESSION_PROPOSERS_MIN_PROPOSER_ID_ASC',\n  SessionProposersMinProposerIdDesc = 'SESSION_PROPOSERS_MIN_PROPOSER_ID_DESC',\n  SessionProposersMinSessionIdAsc = 'SESSION_PROPOSERS_MIN_SESSION_ID_ASC',\n  SessionProposersMinSessionIdDesc = 'SESSION_PROPOSERS_MIN_SESSION_ID_DESC',\n  SessionProposersStddevPopulationIdAsc = 'SESSION_PROPOSERS_STDDEV_POPULATION_ID_ASC',\n  SessionProposersStddevPopulationIdDesc = 'SESSION_PROPOSERS_STDDEV_POPULATION_ID_DESC',\n  SessionProposersStddevPopulationProposerIdAsc = 'SESSION_PROPOSERS_STDDEV_POPULATION_PROPOSER_ID_ASC',\n  SessionProposersStddevPopulationProposerIdDesc = 'SESSION_PROPOSERS_STDDEV_POPULATION_PROPOSER_ID_DESC',\n  SessionProposersStddevPopulationSessionIdAsc = 'SESSION_PROPOSERS_STDDEV_POPULATION_SESSION_ID_ASC',\n  SessionProposersStddevPopulationSessionIdDesc = 'SESSION_PROPOSERS_STDDEV_POPULATION_SESSION_ID_DESC',\n  SessionProposersStddevSampleIdAsc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_ID_ASC',\n  SessionProposersStddevSampleIdDesc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_ID_DESC',\n  SessionProposersStddevSampleProposerIdAsc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_PROPOSER_ID_ASC',\n  SessionProposersStddevSampleProposerIdDesc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_PROPOSER_ID_DESC',\n  SessionProposersStddevSampleSessionIdAsc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_SESSION_ID_ASC',\n  SessionProposersStddevSampleSessionIdDesc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_SESSION_ID_DESC',\n  SessionProposersSumIdAsc = 'SESSION_PROPOSERS_SUM_ID_ASC',\n  SessionProposersSumIdDesc = 'SESSION_PROPOSERS_SUM_ID_DESC',\n  SessionProposersSumProposerIdAsc = 'SESSION_PROPOSERS_SUM_PROPOSER_ID_ASC',\n  SessionProposersSumProposerIdDesc = 'SESSION_PROPOSERS_SUM_PROPOSER_ID_DESC',\n  SessionProposersSumSessionIdAsc = 'SESSION_PROPOSERS_SUM_SESSION_ID_ASC',\n  SessionProposersSumSessionIdDesc = 'SESSION_PROPOSERS_SUM_SESSION_ID_DESC',\n  SessionProposersVariancePopulationIdAsc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_ID_ASC',\n  SessionProposersVariancePopulationIdDesc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_ID_DESC',\n  SessionProposersVariancePopulationProposerIdAsc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_PROPOSER_ID_ASC',\n  SessionProposersVariancePopulationProposerIdDesc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_PROPOSER_ID_DESC',\n  SessionProposersVariancePopulationSessionIdAsc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_SESSION_ID_ASC',\n  SessionProposersVariancePopulationSessionIdDesc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_SESSION_ID_DESC',\n  SessionProposersVarianceSampleIdAsc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_ID_ASC',\n  SessionProposersVarianceSampleIdDesc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_ID_DESC',\n  SessionProposersVarianceSampleProposerIdAsc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_PROPOSER_ID_ASC',\n  SessionProposersVarianceSampleProposerIdDesc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_PROPOSER_ID_DESC',\n  SessionProposersVarianceSampleSessionIdAsc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_SESSION_ID_ASC',\n  SessionProposersVarianceSampleSessionIdDesc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_SESSION_ID_DESC',\n  VotesAverageBlockIdAsc = 'VOTES_AVERAGE_BLOCK_ID_ASC',\n  VotesAverageBlockIdDesc = 'VOTES_AVERAGE_BLOCK_ID_DESC',\n  VotesAverageBlockNumberAsc = 'VOTES_AVERAGE_BLOCK_NUMBER_ASC',\n  VotesAverageBlockNumberDesc = 'VOTES_AVERAGE_BLOCK_NUMBER_DESC',\n  VotesAverageIdAsc = 'VOTES_AVERAGE_ID_ASC',\n  VotesAverageIdDesc = 'VOTES_AVERAGE_ID_DESC',\n  VotesAverageProposalIdAsc = 'VOTES_AVERAGE_PROPOSAL_ID_ASC',\n  VotesAverageProposalIdDesc = 'VOTES_AVERAGE_PROPOSAL_ID_DESC',\n  VotesAverageVoterIdAsc = 'VOTES_AVERAGE_VOTER_ID_ASC',\n  VotesAverageVoterIdDesc = 'VOTES_AVERAGE_VOTER_ID_DESC',\n  VotesAverageVoteStatusAsc = 'VOTES_AVERAGE_VOTE_STATUS_ASC',\n  VotesAverageVoteStatusDesc = 'VOTES_AVERAGE_VOTE_STATUS_DESC',\n  VotesCountAsc = 'VOTES_COUNT_ASC',\n  VotesCountDesc = 'VOTES_COUNT_DESC',\n  VotesDistinctCountBlockIdAsc = 'VOTES_DISTINCT_COUNT_BLOCK_ID_ASC',\n  VotesDistinctCountBlockIdDesc = 'VOTES_DISTINCT_COUNT_BLOCK_ID_DESC',\n  VotesDistinctCountBlockNumberAsc = 'VOTES_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  VotesDistinctCountBlockNumberDesc = 'VOTES_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  VotesDistinctCountIdAsc = 'VOTES_DISTINCT_COUNT_ID_ASC',\n  VotesDistinctCountIdDesc = 'VOTES_DISTINCT_COUNT_ID_DESC',\n  VotesDistinctCountProposalIdAsc = 'VOTES_DISTINCT_COUNT_PROPOSAL_ID_ASC',\n  VotesDistinctCountProposalIdDesc = 'VOTES_DISTINCT_COUNT_PROPOSAL_ID_DESC',\n  VotesDistinctCountVoterIdAsc = 'VOTES_DISTINCT_COUNT_VOTER_ID_ASC',\n  VotesDistinctCountVoterIdDesc = 'VOTES_DISTINCT_COUNT_VOTER_ID_DESC',\n  VotesDistinctCountVoteStatusAsc = 'VOTES_DISTINCT_COUNT_VOTE_STATUS_ASC',\n  VotesDistinctCountVoteStatusDesc = 'VOTES_DISTINCT_COUNT_VOTE_STATUS_DESC',\n  VotesMaxBlockIdAsc = 'VOTES_MAX_BLOCK_ID_ASC',\n  VotesMaxBlockIdDesc = 'VOTES_MAX_BLOCK_ID_DESC',\n  VotesMaxBlockNumberAsc = 'VOTES_MAX_BLOCK_NUMBER_ASC',\n  VotesMaxBlockNumberDesc = 'VOTES_MAX_BLOCK_NUMBER_DESC',\n  VotesMaxIdAsc = 'VOTES_MAX_ID_ASC',\n  VotesMaxIdDesc = 'VOTES_MAX_ID_DESC',\n  VotesMaxProposalIdAsc = 'VOTES_MAX_PROPOSAL_ID_ASC',\n  VotesMaxProposalIdDesc = 'VOTES_MAX_PROPOSAL_ID_DESC',\n  VotesMaxVoterIdAsc = 'VOTES_MAX_VOTER_ID_ASC',\n  VotesMaxVoterIdDesc = 'VOTES_MAX_VOTER_ID_DESC',\n  VotesMaxVoteStatusAsc = 'VOTES_MAX_VOTE_STATUS_ASC',\n  VotesMaxVoteStatusDesc = 'VOTES_MAX_VOTE_STATUS_DESC',\n  VotesMinBlockIdAsc = 'VOTES_MIN_BLOCK_ID_ASC',\n  VotesMinBlockIdDesc = 'VOTES_MIN_BLOCK_ID_DESC',\n  VotesMinBlockNumberAsc = 'VOTES_MIN_BLOCK_NUMBER_ASC',\n  VotesMinBlockNumberDesc = 'VOTES_MIN_BLOCK_NUMBER_DESC',\n  VotesMinIdAsc = 'VOTES_MIN_ID_ASC',\n  VotesMinIdDesc = 'VOTES_MIN_ID_DESC',\n  VotesMinProposalIdAsc = 'VOTES_MIN_PROPOSAL_ID_ASC',\n  VotesMinProposalIdDesc = 'VOTES_MIN_PROPOSAL_ID_DESC',\n  VotesMinVoterIdAsc = 'VOTES_MIN_VOTER_ID_ASC',\n  VotesMinVoterIdDesc = 'VOTES_MIN_VOTER_ID_DESC',\n  VotesMinVoteStatusAsc = 'VOTES_MIN_VOTE_STATUS_ASC',\n  VotesMinVoteStatusDesc = 'VOTES_MIN_VOTE_STATUS_DESC',\n  VotesStddevPopulationBlockIdAsc = 'VOTES_STDDEV_POPULATION_BLOCK_ID_ASC',\n  VotesStddevPopulationBlockIdDesc = 'VOTES_STDDEV_POPULATION_BLOCK_ID_DESC',\n  VotesStddevPopulationBlockNumberAsc = 'VOTES_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  VotesStddevPopulationBlockNumberDesc = 'VOTES_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  VotesStddevPopulationIdAsc = 'VOTES_STDDEV_POPULATION_ID_ASC',\n  VotesStddevPopulationIdDesc = 'VOTES_STDDEV_POPULATION_ID_DESC',\n  VotesStddevPopulationProposalIdAsc = 'VOTES_STDDEV_POPULATION_PROPOSAL_ID_ASC',\n  VotesStddevPopulationProposalIdDesc = 'VOTES_STDDEV_POPULATION_PROPOSAL_ID_DESC',\n  VotesStddevPopulationVoterIdAsc = 'VOTES_STDDEV_POPULATION_VOTER_ID_ASC',\n  VotesStddevPopulationVoterIdDesc = 'VOTES_STDDEV_POPULATION_VOTER_ID_DESC',\n  VotesStddevPopulationVoteStatusAsc = 'VOTES_STDDEV_POPULATION_VOTE_STATUS_ASC',\n  VotesStddevPopulationVoteStatusDesc = 'VOTES_STDDEV_POPULATION_VOTE_STATUS_DESC',\n  VotesStddevSampleBlockIdAsc = 'VOTES_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  VotesStddevSampleBlockIdDesc = 'VOTES_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  VotesStddevSampleBlockNumberAsc = 'VOTES_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  VotesStddevSampleBlockNumberDesc = 'VOTES_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  VotesStddevSampleIdAsc = 'VOTES_STDDEV_SAMPLE_ID_ASC',\n  VotesStddevSampleIdDesc = 'VOTES_STDDEV_SAMPLE_ID_DESC',\n  VotesStddevSampleProposalIdAsc = 'VOTES_STDDEV_SAMPLE_PROPOSAL_ID_ASC',\n  VotesStddevSampleProposalIdDesc = 'VOTES_STDDEV_SAMPLE_PROPOSAL_ID_DESC',\n  VotesStddevSampleVoterIdAsc = 'VOTES_STDDEV_SAMPLE_VOTER_ID_ASC',\n  VotesStddevSampleVoterIdDesc = 'VOTES_STDDEV_SAMPLE_VOTER_ID_DESC',\n  VotesStddevSampleVoteStatusAsc = 'VOTES_STDDEV_SAMPLE_VOTE_STATUS_ASC',\n  VotesStddevSampleVoteStatusDesc = 'VOTES_STDDEV_SAMPLE_VOTE_STATUS_DESC',\n  VotesSumBlockIdAsc = 'VOTES_SUM_BLOCK_ID_ASC',\n  VotesSumBlockIdDesc = 'VOTES_SUM_BLOCK_ID_DESC',\n  VotesSumBlockNumberAsc = 'VOTES_SUM_BLOCK_NUMBER_ASC',\n  VotesSumBlockNumberDesc = 'VOTES_SUM_BLOCK_NUMBER_DESC',\n  VotesSumIdAsc = 'VOTES_SUM_ID_ASC',\n  VotesSumIdDesc = 'VOTES_SUM_ID_DESC',\n  VotesSumProposalIdAsc = 'VOTES_SUM_PROPOSAL_ID_ASC',\n  VotesSumProposalIdDesc = 'VOTES_SUM_PROPOSAL_ID_DESC',\n  VotesSumVoterIdAsc = 'VOTES_SUM_VOTER_ID_ASC',\n  VotesSumVoterIdDesc = 'VOTES_SUM_VOTER_ID_DESC',\n  VotesSumVoteStatusAsc = 'VOTES_SUM_VOTE_STATUS_ASC',\n  VotesSumVoteStatusDesc = 'VOTES_SUM_VOTE_STATUS_DESC',\n  VotesVariancePopulationBlockIdAsc = 'VOTES_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  VotesVariancePopulationBlockIdDesc = 'VOTES_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  VotesVariancePopulationBlockNumberAsc = 'VOTES_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  VotesVariancePopulationBlockNumberDesc = 'VOTES_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  VotesVariancePopulationIdAsc = 'VOTES_VARIANCE_POPULATION_ID_ASC',\n  VotesVariancePopulationIdDesc = 'VOTES_VARIANCE_POPULATION_ID_DESC',\n  VotesVariancePopulationProposalIdAsc = 'VOTES_VARIANCE_POPULATION_PROPOSAL_ID_ASC',\n  VotesVariancePopulationProposalIdDesc = 'VOTES_VARIANCE_POPULATION_PROPOSAL_ID_DESC',\n  VotesVariancePopulationVoterIdAsc = 'VOTES_VARIANCE_POPULATION_VOTER_ID_ASC',\n  VotesVariancePopulationVoterIdDesc = 'VOTES_VARIANCE_POPULATION_VOTER_ID_DESC',\n  VotesVariancePopulationVoteStatusAsc = 'VOTES_VARIANCE_POPULATION_VOTE_STATUS_ASC',\n  VotesVariancePopulationVoteStatusDesc = 'VOTES_VARIANCE_POPULATION_VOTE_STATUS_DESC',\n  VotesVarianceSampleBlockIdAsc = 'VOTES_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  VotesVarianceSampleBlockIdDesc = 'VOTES_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  VotesVarianceSampleBlockNumberAsc = 'VOTES_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  VotesVarianceSampleBlockNumberDesc = 'VOTES_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  VotesVarianceSampleIdAsc = 'VOTES_VARIANCE_SAMPLE_ID_ASC',\n  VotesVarianceSampleIdDesc = 'VOTES_VARIANCE_SAMPLE_ID_DESC',\n  VotesVarianceSampleProposalIdAsc = 'VOTES_VARIANCE_SAMPLE_PROPOSAL_ID_ASC',\n  VotesVarianceSampleProposalIdDesc = 'VOTES_VARIANCE_SAMPLE_PROPOSAL_ID_DESC',\n  VotesVarianceSampleVoterIdAsc = 'VOTES_VARIANCE_SAMPLE_VOTER_ID_ASC',\n  VotesVarianceSampleVoterIdDesc = 'VOTES_VARIANCE_SAMPLE_VOTER_ID_DESC',\n  VotesVarianceSampleVoteStatusAsc = 'VOTES_VARIANCE_SAMPLE_VOTE_STATUS_ASC',\n  VotesVarianceSampleVoteStatusDesc = 'VOTES_VARIANCE_SAMPLE_VOTE_STATUS_DESC',\n}\n\nexport type PublicKey = Node & {\n  __typename?: 'PublicKey';\n  /** Reads a single `Block` that is related to this `PublicKey`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  /** Reads and enables pagination through a set of `Block`. */\n  blocksBySessionPublicKeyIdAndBlockId: PublicKeyBlocksBySessionPublicKeyIdAndBlockIdManyToManyConnection;\n  compressed?: Maybe<Scalars['String']>;\n  history: Scalars['JSON'];\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  /** Reads and enables pagination through a set of `Session`. */\n  sessions: SessionsConnection;\n  uncompressed?: Maybe<Scalars['String']>;\n};\n\nexport type PublicKeyBlocksBySessionPublicKeyIdAndBlockIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<BlockFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<BlocksOrderBy>>;\n};\n\nexport type PublicKeySessionsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionsOrderBy>>;\n};\n\nexport type PublicKeyAggregates = {\n  __typename?: 'PublicKeyAggregates';\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<PublicKeyDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n};\n\n/** A connection to a list of `Block` values, with data from `Session`. */\nexport type PublicKeyBlocksBySessionPublicKeyIdAndBlockIdManyToManyConnection = {\n  __typename?: 'PublicKeyBlocksBySessionPublicKeyIdAndBlockIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<BlockAggregates>;\n  /** A list of edges which contains the `Block`, info from the `Session`, and the cursor to aid in pagination. */\n  edges: Array<PublicKeyBlocksBySessionPublicKeyIdAndBlockIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<BlockAggregates>>;\n  /** A list of `Block` objects. */\n  nodes: Array<Maybe<Block>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Block` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Block` values, with data from `Session`. */\nexport type PublicKeyBlocksBySessionPublicKeyIdAndBlockIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<BlocksGroupBy>;\n  having?: InputMaybe<BlocksHavingInput>;\n};\n\n/** A `Block` edge in the connection, with data from `Session`. */\nexport type PublicKeyBlocksBySessionPublicKeyIdAndBlockIdManyToManyEdge = {\n  __typename?: 'PublicKeyBlocksBySessionPublicKeyIdAndBlockIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Block` at the end of the edge. */\n  node?: Maybe<Block>;\n  /** Reads and enables pagination through a set of `Session`. */\n  sessions: SessionsConnection;\n};\n\n/** A `Block` edge in the connection, with data from `Session`. */\nexport type PublicKeyBlocksBySessionPublicKeyIdAndBlockIdManyToManyEdgeSessionsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionsOrderBy>>;\n};\n\nexport type PublicKeyDistinctCountAggregates = {\n  __typename?: 'PublicKeyDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of compressed across the matching connection */\n  compressed?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of history across the matching connection */\n  history?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of uncompressed across the matching connection */\n  uncompressed?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `PublicKey` object types. All fields are combined with a logical ‘and.’ */\nexport type PublicKeyFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<PublicKeyFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `compressed` field. */\n  compressed?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `history` field. */\n  history?: InputMaybe<JsonFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<PublicKeyFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<PublicKeyFilter>>;\n  /** Filter by the object’s `uncompressed` field. */\n  uncompressed?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `PublicKey` values. */\nexport type PublicKeysConnection = {\n  __typename?: 'PublicKeysConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<PublicKeyAggregates>;\n  /** A list of edges which contains the `PublicKey` and cursor to aid in pagination. */\n  edges: Array<PublicKeysEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<PublicKeyAggregates>>;\n  /** A list of `PublicKey` objects. */\n  nodes: Array<Maybe<PublicKey>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `PublicKey` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `PublicKey` values. */\nexport type PublicKeysConnectionGroupedAggregatesArgs = {\n  groupBy: Array<PublicKeysGroupBy>;\n  having?: InputMaybe<PublicKeysHavingInput>;\n};\n\n/** A `PublicKey` edge in the connection. */\nexport type PublicKeysEdge = {\n  __typename?: 'PublicKeysEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `PublicKey` at the end of the edge. */\n  node?: Maybe<PublicKey>;\n};\n\n/** Grouping methods for `PublicKey` for usage during aggregation. */\nexport enum PublicKeysGroupBy {\n  BlockId = 'BLOCK_ID',\n  Compressed = 'COMPRESSED',\n  History = 'HISTORY',\n}\n\n/** Conditions for `PublicKey` aggregates. */\nexport type PublicKeysHavingInput = {\n  AND?: InputMaybe<Array<PublicKeysHavingInput>>;\n  OR?: InputMaybe<Array<PublicKeysHavingInput>>;\n};\n\n/** Methods to use when ordering `PublicKey`. */\nexport enum PublicKeysOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  CompressedAsc = 'COMPRESSED_ASC',\n  CompressedDesc = 'COMPRESSED_DESC',\n  HistoryAsc = 'HISTORY_ASC',\n  HistoryDesc = 'HISTORY_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SessionsAverageBlockIdAsc = 'SESSIONS_AVERAGE_BLOCK_ID_ASC',\n  SessionsAverageBlockIdDesc = 'SESSIONS_AVERAGE_BLOCK_ID_DESC',\n  SessionsAverageBlockNumberAsc = 'SESSIONS_AVERAGE_BLOCK_NUMBER_ASC',\n  SessionsAverageBlockNumberDesc = 'SESSIONS_AVERAGE_BLOCK_NUMBER_DESC',\n  SessionsAverageIdAsc = 'SESSIONS_AVERAGE_ID_ASC',\n  SessionsAverageIdDesc = 'SESSIONS_AVERAGE_ID_DESC',\n  SessionsAverageKeyGenThresholdAsc = 'SESSIONS_AVERAGE_KEY_GEN_THRESHOLD_ASC',\n  SessionsAverageKeyGenThresholdDesc = 'SESSIONS_AVERAGE_KEY_GEN_THRESHOLD_DESC',\n  SessionsAverageProposerThresholdAsc = 'SESSIONS_AVERAGE_PROPOSER_THRESHOLD_ASC',\n  SessionsAverageProposerThresholdDesc = 'SESSIONS_AVERAGE_PROPOSER_THRESHOLD_DESC',\n  SessionsAveragePublicKeyIdAsc = 'SESSIONS_AVERAGE_PUBLIC_KEY_ID_ASC',\n  SessionsAveragePublicKeyIdDesc = 'SESSIONS_AVERAGE_PUBLIC_KEY_ID_DESC',\n  SessionsAverageSignatureThresholdAsc = 'SESSIONS_AVERAGE_SIGNATURE_THRESHOLD_ASC',\n  SessionsAverageSignatureThresholdDesc = 'SESSIONS_AVERAGE_SIGNATURE_THRESHOLD_DESC',\n  SessionsCountAsc = 'SESSIONS_COUNT_ASC',\n  SessionsCountDesc = 'SESSIONS_COUNT_DESC',\n  SessionsDistinctCountBlockIdAsc = 'SESSIONS_DISTINCT_COUNT_BLOCK_ID_ASC',\n  SessionsDistinctCountBlockIdDesc = 'SESSIONS_DISTINCT_COUNT_BLOCK_ID_DESC',\n  SessionsDistinctCountBlockNumberAsc = 'SESSIONS_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  SessionsDistinctCountBlockNumberDesc = 'SESSIONS_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  SessionsDistinctCountIdAsc = 'SESSIONS_DISTINCT_COUNT_ID_ASC',\n  SessionsDistinctCountIdDesc = 'SESSIONS_DISTINCT_COUNT_ID_DESC',\n  SessionsDistinctCountKeyGenThresholdAsc = 'SESSIONS_DISTINCT_COUNT_KEY_GEN_THRESHOLD_ASC',\n  SessionsDistinctCountKeyGenThresholdDesc = 'SESSIONS_DISTINCT_COUNT_KEY_GEN_THRESHOLD_DESC',\n  SessionsDistinctCountProposerThresholdAsc = 'SESSIONS_DISTINCT_COUNT_PROPOSER_THRESHOLD_ASC',\n  SessionsDistinctCountProposerThresholdDesc = 'SESSIONS_DISTINCT_COUNT_PROPOSER_THRESHOLD_DESC',\n  SessionsDistinctCountPublicKeyIdAsc = 'SESSIONS_DISTINCT_COUNT_PUBLIC_KEY_ID_ASC',\n  SessionsDistinctCountPublicKeyIdDesc = 'SESSIONS_DISTINCT_COUNT_PUBLIC_KEY_ID_DESC',\n  SessionsDistinctCountSignatureThresholdAsc = 'SESSIONS_DISTINCT_COUNT_SIGNATURE_THRESHOLD_ASC',\n  SessionsDistinctCountSignatureThresholdDesc = 'SESSIONS_DISTINCT_COUNT_SIGNATURE_THRESHOLD_DESC',\n  SessionsMaxBlockIdAsc = 'SESSIONS_MAX_BLOCK_ID_ASC',\n  SessionsMaxBlockIdDesc = 'SESSIONS_MAX_BLOCK_ID_DESC',\n  SessionsMaxBlockNumberAsc = 'SESSIONS_MAX_BLOCK_NUMBER_ASC',\n  SessionsMaxBlockNumberDesc = 'SESSIONS_MAX_BLOCK_NUMBER_DESC',\n  SessionsMaxIdAsc = 'SESSIONS_MAX_ID_ASC',\n  SessionsMaxIdDesc = 'SESSIONS_MAX_ID_DESC',\n  SessionsMaxKeyGenThresholdAsc = 'SESSIONS_MAX_KEY_GEN_THRESHOLD_ASC',\n  SessionsMaxKeyGenThresholdDesc = 'SESSIONS_MAX_KEY_GEN_THRESHOLD_DESC',\n  SessionsMaxProposerThresholdAsc = 'SESSIONS_MAX_PROPOSER_THRESHOLD_ASC',\n  SessionsMaxProposerThresholdDesc = 'SESSIONS_MAX_PROPOSER_THRESHOLD_DESC',\n  SessionsMaxPublicKeyIdAsc = 'SESSIONS_MAX_PUBLIC_KEY_ID_ASC',\n  SessionsMaxPublicKeyIdDesc = 'SESSIONS_MAX_PUBLIC_KEY_ID_DESC',\n  SessionsMaxSignatureThresholdAsc = 'SESSIONS_MAX_SIGNATURE_THRESHOLD_ASC',\n  SessionsMaxSignatureThresholdDesc = 'SESSIONS_MAX_SIGNATURE_THRESHOLD_DESC',\n  SessionsMinBlockIdAsc = 'SESSIONS_MIN_BLOCK_ID_ASC',\n  SessionsMinBlockIdDesc = 'SESSIONS_MIN_BLOCK_ID_DESC',\n  SessionsMinBlockNumberAsc = 'SESSIONS_MIN_BLOCK_NUMBER_ASC',\n  SessionsMinBlockNumberDesc = 'SESSIONS_MIN_BLOCK_NUMBER_DESC',\n  SessionsMinIdAsc = 'SESSIONS_MIN_ID_ASC',\n  SessionsMinIdDesc = 'SESSIONS_MIN_ID_DESC',\n  SessionsMinKeyGenThresholdAsc = 'SESSIONS_MIN_KEY_GEN_THRESHOLD_ASC',\n  SessionsMinKeyGenThresholdDesc = 'SESSIONS_MIN_KEY_GEN_THRESHOLD_DESC',\n  SessionsMinProposerThresholdAsc = 'SESSIONS_MIN_PROPOSER_THRESHOLD_ASC',\n  SessionsMinProposerThresholdDesc = 'SESSIONS_MIN_PROPOSER_THRESHOLD_DESC',\n  SessionsMinPublicKeyIdAsc = 'SESSIONS_MIN_PUBLIC_KEY_ID_ASC',\n  SessionsMinPublicKeyIdDesc = 'SESSIONS_MIN_PUBLIC_KEY_ID_DESC',\n  SessionsMinSignatureThresholdAsc = 'SESSIONS_MIN_SIGNATURE_THRESHOLD_ASC',\n  SessionsMinSignatureThresholdDesc = 'SESSIONS_MIN_SIGNATURE_THRESHOLD_DESC',\n  SessionsStddevPopulationBlockIdAsc = 'SESSIONS_STDDEV_POPULATION_BLOCK_ID_ASC',\n  SessionsStddevPopulationBlockIdDesc = 'SESSIONS_STDDEV_POPULATION_BLOCK_ID_DESC',\n  SessionsStddevPopulationBlockNumberAsc = 'SESSIONS_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  SessionsStddevPopulationBlockNumberDesc = 'SESSIONS_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  SessionsStddevPopulationIdAsc = 'SESSIONS_STDDEV_POPULATION_ID_ASC',\n  SessionsStddevPopulationIdDesc = 'SESSIONS_STDDEV_POPULATION_ID_DESC',\n  SessionsStddevPopulationKeyGenThresholdAsc = 'SESSIONS_STDDEV_POPULATION_KEY_GEN_THRESHOLD_ASC',\n  SessionsStddevPopulationKeyGenThresholdDesc = 'SESSIONS_STDDEV_POPULATION_KEY_GEN_THRESHOLD_DESC',\n  SessionsStddevPopulationProposerThresholdAsc = 'SESSIONS_STDDEV_POPULATION_PROPOSER_THRESHOLD_ASC',\n  SessionsStddevPopulationProposerThresholdDesc = 'SESSIONS_STDDEV_POPULATION_PROPOSER_THRESHOLD_DESC',\n  SessionsStddevPopulationPublicKeyIdAsc = 'SESSIONS_STDDEV_POPULATION_PUBLIC_KEY_ID_ASC',\n  SessionsStddevPopulationPublicKeyIdDesc = 'SESSIONS_STDDEV_POPULATION_PUBLIC_KEY_ID_DESC',\n  SessionsStddevPopulationSignatureThresholdAsc = 'SESSIONS_STDDEV_POPULATION_SIGNATURE_THRESHOLD_ASC',\n  SessionsStddevPopulationSignatureThresholdDesc = 'SESSIONS_STDDEV_POPULATION_SIGNATURE_THRESHOLD_DESC',\n  SessionsStddevSampleBlockIdAsc = 'SESSIONS_STDDEV_SAMPLE_BLOCK_ID_ASC',\n  SessionsStddevSampleBlockIdDesc = 'SESSIONS_STDDEV_SAMPLE_BLOCK_ID_DESC',\n  SessionsStddevSampleBlockNumberAsc = 'SESSIONS_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  SessionsStddevSampleBlockNumberDesc = 'SESSIONS_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  SessionsStddevSampleIdAsc = 'SESSIONS_STDDEV_SAMPLE_ID_ASC',\n  SessionsStddevSampleIdDesc = 'SESSIONS_STDDEV_SAMPLE_ID_DESC',\n  SessionsStddevSampleKeyGenThresholdAsc = 'SESSIONS_STDDEV_SAMPLE_KEY_GEN_THRESHOLD_ASC',\n  SessionsStddevSampleKeyGenThresholdDesc = 'SESSIONS_STDDEV_SAMPLE_KEY_GEN_THRESHOLD_DESC',\n  SessionsStddevSampleProposerThresholdAsc = 'SESSIONS_STDDEV_SAMPLE_PROPOSER_THRESHOLD_ASC',\n  SessionsStddevSampleProposerThresholdDesc = 'SESSIONS_STDDEV_SAMPLE_PROPOSER_THRESHOLD_DESC',\n  SessionsStddevSamplePublicKeyIdAsc = 'SESSIONS_STDDEV_SAMPLE_PUBLIC_KEY_ID_ASC',\n  SessionsStddevSamplePublicKeyIdDesc = 'SESSIONS_STDDEV_SAMPLE_PUBLIC_KEY_ID_DESC',\n  SessionsStddevSampleSignatureThresholdAsc = 'SESSIONS_STDDEV_SAMPLE_SIGNATURE_THRESHOLD_ASC',\n  SessionsStddevSampleSignatureThresholdDesc = 'SESSIONS_STDDEV_SAMPLE_SIGNATURE_THRESHOLD_DESC',\n  SessionsSumBlockIdAsc = 'SESSIONS_SUM_BLOCK_ID_ASC',\n  SessionsSumBlockIdDesc = 'SESSIONS_SUM_BLOCK_ID_DESC',\n  SessionsSumBlockNumberAsc = 'SESSIONS_SUM_BLOCK_NUMBER_ASC',\n  SessionsSumBlockNumberDesc = 'SESSIONS_SUM_BLOCK_NUMBER_DESC',\n  SessionsSumIdAsc = 'SESSIONS_SUM_ID_ASC',\n  SessionsSumIdDesc = 'SESSIONS_SUM_ID_DESC',\n  SessionsSumKeyGenThresholdAsc = 'SESSIONS_SUM_KEY_GEN_THRESHOLD_ASC',\n  SessionsSumKeyGenThresholdDesc = 'SESSIONS_SUM_KEY_GEN_THRESHOLD_DESC',\n  SessionsSumProposerThresholdAsc = 'SESSIONS_SUM_PROPOSER_THRESHOLD_ASC',\n  SessionsSumProposerThresholdDesc = 'SESSIONS_SUM_PROPOSER_THRESHOLD_DESC',\n  SessionsSumPublicKeyIdAsc = 'SESSIONS_SUM_PUBLIC_KEY_ID_ASC',\n  SessionsSumPublicKeyIdDesc = 'SESSIONS_SUM_PUBLIC_KEY_ID_DESC',\n  SessionsSumSignatureThresholdAsc = 'SESSIONS_SUM_SIGNATURE_THRESHOLD_ASC',\n  SessionsSumSignatureThresholdDesc = 'SESSIONS_SUM_SIGNATURE_THRESHOLD_DESC',\n  SessionsVariancePopulationBlockIdAsc = 'SESSIONS_VARIANCE_POPULATION_BLOCK_ID_ASC',\n  SessionsVariancePopulationBlockIdDesc = 'SESSIONS_VARIANCE_POPULATION_BLOCK_ID_DESC',\n  SessionsVariancePopulationBlockNumberAsc = 'SESSIONS_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  SessionsVariancePopulationBlockNumberDesc = 'SESSIONS_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  SessionsVariancePopulationIdAsc = 'SESSIONS_VARIANCE_POPULATION_ID_ASC',\n  SessionsVariancePopulationIdDesc = 'SESSIONS_VARIANCE_POPULATION_ID_DESC',\n  SessionsVariancePopulationKeyGenThresholdAsc = 'SESSIONS_VARIANCE_POPULATION_KEY_GEN_THRESHOLD_ASC',\n  SessionsVariancePopulationKeyGenThresholdDesc = 'SESSIONS_VARIANCE_POPULATION_KEY_GEN_THRESHOLD_DESC',\n  SessionsVariancePopulationProposerThresholdAsc = 'SESSIONS_VARIANCE_POPULATION_PROPOSER_THRESHOLD_ASC',\n  SessionsVariancePopulationProposerThresholdDesc = 'SESSIONS_VARIANCE_POPULATION_PROPOSER_THRESHOLD_DESC',\n  SessionsVariancePopulationPublicKeyIdAsc = 'SESSIONS_VARIANCE_POPULATION_PUBLIC_KEY_ID_ASC',\n  SessionsVariancePopulationPublicKeyIdDesc = 'SESSIONS_VARIANCE_POPULATION_PUBLIC_KEY_ID_DESC',\n  SessionsVariancePopulationSignatureThresholdAsc = 'SESSIONS_VARIANCE_POPULATION_SIGNATURE_THRESHOLD_ASC',\n  SessionsVariancePopulationSignatureThresholdDesc = 'SESSIONS_VARIANCE_POPULATION_SIGNATURE_THRESHOLD_DESC',\n  SessionsVarianceSampleBlockIdAsc = 'SESSIONS_VARIANCE_SAMPLE_BLOCK_ID_ASC',\n  SessionsVarianceSampleBlockIdDesc = 'SESSIONS_VARIANCE_SAMPLE_BLOCK_ID_DESC',\n  SessionsVarianceSampleBlockNumberAsc = 'SESSIONS_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  SessionsVarianceSampleBlockNumberDesc = 'SESSIONS_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  SessionsVarianceSampleIdAsc = 'SESSIONS_VARIANCE_SAMPLE_ID_ASC',\n  SessionsVarianceSampleIdDesc = 'SESSIONS_VARIANCE_SAMPLE_ID_DESC',\n  SessionsVarianceSampleKeyGenThresholdAsc = 'SESSIONS_VARIANCE_SAMPLE_KEY_GEN_THRESHOLD_ASC',\n  SessionsVarianceSampleKeyGenThresholdDesc = 'SESSIONS_VARIANCE_SAMPLE_KEY_GEN_THRESHOLD_DESC',\n  SessionsVarianceSampleProposerThresholdAsc = 'SESSIONS_VARIANCE_SAMPLE_PROPOSER_THRESHOLD_ASC',\n  SessionsVarianceSampleProposerThresholdDesc = 'SESSIONS_VARIANCE_SAMPLE_PROPOSER_THRESHOLD_DESC',\n  SessionsVarianceSamplePublicKeyIdAsc = 'SESSIONS_VARIANCE_SAMPLE_PUBLIC_KEY_ID_ASC',\n  SessionsVarianceSamplePublicKeyIdDesc = 'SESSIONS_VARIANCE_SAMPLE_PUBLIC_KEY_ID_DESC',\n  SessionsVarianceSampleSignatureThresholdAsc = 'SESSIONS_VARIANCE_SAMPLE_SIGNATURE_THRESHOLD_ASC',\n  SessionsVarianceSampleSignatureThresholdDesc = 'SESSIONS_VARIANCE_SAMPLE_SIGNATURE_THRESHOLD_DESC',\n  UncompressedAsc = 'UNCOMPRESSED_ASC',\n  UncompressedDesc = 'UNCOMPRESSED_DESC',\n}\n\n/** The root query type which gives access points into the data universe. */\nexport type Query = Node & {\n  __typename?: 'Query';\n  _metadata?: Maybe<_Metadata>;\n  account?: Maybe<Account>;\n  /** Reads a single `Account` using its globally unique `ID`. */\n  accountByNodeId?: Maybe<Account>;\n  /** Reads and enables pagination through a set of `Account`. */\n  accounts?: Maybe<AccountsConnection>;\n  /** Reads and enables pagination through a set of `Authority`. */\n  authorities?: Maybe<AuthoritiesConnection>;\n  authority?: Maybe<Authority>;\n  /** Reads a single `Authority` using its globally unique `ID`. */\n  authorityByNodeId?: Maybe<Authority>;\n  block?: Maybe<Block>;\n  /** Reads a single `Block` using its globally unique `ID`. */\n  blockByNodeId?: Maybe<Block>;\n  /** Reads and enables pagination through a set of `Block`. */\n  blocks?: Maybe<BlocksConnection>;\n  event?: Maybe<Event>;\n  /** Reads a single `Event` using its globally unique `ID`. */\n  eventByNodeId?: Maybe<Event>;\n  /** Reads and enables pagination through a set of `Event`. */\n  events?: Maybe<EventsConnection>;\n  extrinsic?: Maybe<Extrinsic>;\n  /** Reads a single `Extrinsic` using its globally unique `ID`. */\n  extrinsicByNodeId?: Maybe<Extrinsic>;\n  /** Reads and enables pagination through a set of `Extrinsic`. */\n  extrinsics?: Maybe<ExtrinsicsConnection>;\n  keygenThreshold?: Maybe<KeygenThreshold>;\n  /** Reads a single `KeygenThreshold` using its globally unique `ID`. */\n  keygenThresholdByNodeId?: Maybe<KeygenThreshold>;\n  /** Reads and enables pagination through a set of `KeygenThreshold`. */\n  keygenThresholds?: Maybe<KeygenThresholdsConnection>;\n  /** Fetches an object given its globally unique `ID`. */\n  node?: Maybe<Node>;\n  /** The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`. */\n  nodeId: Scalars['ID'];\n  proposalCounter?: Maybe<ProposalCounter>;\n  /** Reads a single `ProposalCounter` using its globally unique `ID`. */\n  proposalCounterByNodeId?: Maybe<ProposalCounter>;\n  /** Reads and enables pagination through a set of `ProposalCounter`. */\n  proposalCounters?: Maybe<ProposalCountersConnection>;\n  proposalItem?: Maybe<ProposalItem>;\n  /** Reads a single `ProposalItem` using its globally unique `ID`. */\n  proposalItemByNodeId?: Maybe<ProposalItem>;\n  /** Reads and enables pagination through a set of `ProposalItem`. */\n  proposalItems?: Maybe<ProposalItemsConnection>;\n  proposalTimelineStatus?: Maybe<ProposalTimelineStatus>;\n  /** Reads a single `ProposalTimelineStatus` using its globally unique `ID`. */\n  proposalTimelineStatusByNodeId?: Maybe<ProposalTimelineStatus>;\n  /** Reads and enables pagination through a set of `ProposalTimelineStatus`. */\n  proposalTimelineStatuses?: Maybe<ProposalTimelineStatusesConnection>;\n  proposalVote?: Maybe<ProposalVote>;\n  /** Reads a single `ProposalVote` using its globally unique `ID`. */\n  proposalVoteByNodeId?: Maybe<ProposalVote>;\n  /** Reads and enables pagination through a set of `ProposalVote`. */\n  proposalVotes?: Maybe<ProposalVotesConnection>;\n  proposer?: Maybe<Proposer>;\n  /** Reads a single `Proposer` using its globally unique `ID`. */\n  proposerByNodeId?: Maybe<Proposer>;\n  proposerThreshold?: Maybe<ProposerThreshold>;\n  /** Reads a single `ProposerThreshold` using its globally unique `ID`. */\n  proposerThresholdByNodeId?: Maybe<ProposerThreshold>;\n  /** Reads and enables pagination through a set of `ProposerThreshold`. */\n  proposerThresholds?: Maybe<ProposerThresholdsConnection>;\n  /** Reads and enables pagination through a set of `Proposer`. */\n  proposers?: Maybe<ProposersConnection>;\n  publicKey?: Maybe<PublicKey>;\n  /** Reads a single `PublicKey` using its globally unique `ID`. */\n  publicKeyByNodeId?: Maybe<PublicKey>;\n  /** Reads and enables pagination through a set of `PublicKey`. */\n  publicKeys?: Maybe<PublicKeysConnection>;\n  /**\n   * Exposes the root query type nested one level down. This is helpful for Relay 1\n   * which can only query top level fields if they are in a particular form.\n   */\n  query: Query;\n  session?: Maybe<Session>;\n  /** Reads a single `Session` using its globally unique `ID`. */\n  sessionByNodeId?: Maybe<Session>;\n  sessionProposer?: Maybe<SessionProposer>;\n  /** Reads a single `SessionProposer` using its globally unique `ID`. */\n  sessionProposerByNodeId?: Maybe<SessionProposer>;\n  /** Reads and enables pagination through a set of `SessionProposer`. */\n  sessionProposers?: Maybe<SessionProposersConnection>;\n  sessionValidator?: Maybe<SessionValidator>;\n  /** Reads a single `SessionValidator` using its globally unique `ID`. */\n  sessionValidatorByNodeId?: Maybe<SessionValidator>;\n  /** Reads and enables pagination through a set of `SessionValidator`. */\n  sessionValidators?: Maybe<SessionValidatorsConnection>;\n  /** Reads and enables pagination through a set of `Session`. */\n  sessions?: Maybe<SessionsConnection>;\n  signatureThreshold?: Maybe<SignatureThreshold>;\n  /** Reads a single `SignatureThreshold` using its globally unique `ID`. */\n  signatureThresholdByNodeId?: Maybe<SignatureThreshold>;\n  /** Reads and enables pagination through a set of `SignatureThreshold`. */\n  signatureThresholds?: Maybe<SignatureThresholdsConnection>;\n  unsignedProposalsQueue?: Maybe<UnsignedProposalsQueue>;\n  /** Reads a single `UnsignedProposalsQueue` using its globally unique `ID`. */\n  unsignedProposalsQueueByNodeId?: Maybe<UnsignedProposalsQueue>;\n  unsignedProposalsQueueItem?: Maybe<UnsignedProposalsQueueItem>;\n  /** Reads a single `UnsignedProposalsQueueItem` using its globally unique `ID`. */\n  unsignedProposalsQueueItemByNodeId?: Maybe<UnsignedProposalsQueueItem>;\n  /** Reads and enables pagination through a set of `UnsignedProposalsQueueItem`. */\n  unsignedProposalsQueueItems?: Maybe<UnsignedProposalsQueueItemsConnection>;\n  /** Reads and enables pagination through a set of `UnsignedProposalsQueue`. */\n  unsignedProposalsQueues?: Maybe<UnsignedProposalsQueuesConnection>;\n  validator?: Maybe<Validator>;\n  /** Reads a single `Validator` using its globally unique `ID`. */\n  validatorByNodeId?: Maybe<Validator>;\n  /** Reads and enables pagination through a set of `Validator`. */\n  validators?: Maybe<ValidatorsConnection>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryAccountArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryAccountByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryAccountsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<AccountFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AccountsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryAuthoritiesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<AuthorityFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<AuthoritiesOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryAuthorityArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryAuthorityByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryBlockArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryBlockByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryBlocksArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<BlockFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<BlocksOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryEventArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryEventByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryEventsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<EventFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<EventsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryExtrinsicArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryExtrinsicByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryExtrinsicsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ExtrinsicFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ExtrinsicsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryKeygenThresholdArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryKeygenThresholdByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryKeygenThresholdsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<KeygenThresholdFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<KeygenThresholdsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryNodeArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalCounterArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalCounterByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalCountersArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalCounterFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalCountersOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalItemArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalItemByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalItemsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalItemFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalItemsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalTimelineStatusArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalTimelineStatusByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalTimelineStatusesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalTimelineStatusFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalTimelineStatusesOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalVoteArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalVoteByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposalVotesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalVoteFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalVotesOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposerArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposerByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposerThresholdArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposerThresholdByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposerThresholdsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposerThresholdFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposerThresholdsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryProposersArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposersOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryPublicKeyArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryPublicKeyByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryPublicKeysArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<PublicKeyFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<PublicKeysOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySessionArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySessionByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySessionProposerArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySessionProposerByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySessionProposersArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionProposersOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySessionValidatorArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySessionValidatorByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySessionValidatorsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionValidatorFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionValidatorsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySessionsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySignatureThresholdArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySignatureThresholdByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QuerySignatureThresholdsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SignatureThresholdFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SignatureThresholdsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryUnsignedProposalsQueueArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryUnsignedProposalsQueueByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryUnsignedProposalsQueueItemArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryUnsignedProposalsQueueItemByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryUnsignedProposalsQueueItemsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<UnsignedProposalsQueueItemFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<UnsignedProposalsQueueItemsOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryUnsignedProposalsQueuesArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<UnsignedProposalsQueueFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<UnsignedProposalsQueuesOrderBy>>;\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryValidatorArgs = {\n  id: Scalars['String'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryValidatorByNodeIdArgs = {\n  nodeId: Scalars['ID'];\n};\n\n/** The root query type which gives access points into the data universe. */\nexport type QueryValidatorsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ValidatorFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ValidatorsOrderBy>>;\n};\n\nexport type Session = Node & {\n  __typename?: 'Session';\n  /** Reads a single `Block` that is related to this `Session`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  blockNumber: Scalars['Int'];\n  id: Scalars['String'];\n  keyGenThreshold?: Maybe<Scalars['JSON']>;\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  proposerThreshold?: Maybe<Scalars['JSON']>;\n  /** Reads and enables pagination through a set of `Proposer`. */\n  proposersBySessionProposerSessionIdAndProposerId: SessionProposersBySessionProposerSessionIdAndProposerIdManyToManyConnection;\n  /** Reads a single `PublicKey` that is related to this `Session`. */\n  publicKey?: Maybe<PublicKey>;\n  publicKeyId?: Maybe<Scalars['String']>;\n  /** Reads and enables pagination through a set of `SessionProposer`. */\n  sessionProposers: SessionProposersConnection;\n  /** Reads and enables pagination through a set of `SessionValidator`. */\n  sessionValidators: SessionValidatorsConnection;\n  signatureThreshold?: Maybe<Scalars['JSON']>;\n  /** Reads and enables pagination through a set of `Validator`. */\n  validatorsBySessionValidatorSessionIdAndValidatorId: SessionValidatorsBySessionValidatorSessionIdAndValidatorIdManyToManyConnection;\n};\n\nexport type SessionProposersBySessionProposerSessionIdAndProposerIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposersOrderBy>>;\n};\n\nexport type SessionSessionProposersArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionProposersOrderBy>>;\n};\n\nexport type SessionSessionValidatorsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionValidatorFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionValidatorsOrderBy>>;\n};\n\nexport type SessionValidatorsBySessionValidatorSessionIdAndValidatorIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ValidatorFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ValidatorsOrderBy>>;\n};\n\nexport type SessionAggregates = {\n  __typename?: 'SessionAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<SessionAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<SessionDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<SessionMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<SessionMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<SessionStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<SessionStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<SessionSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<SessionVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<SessionVarianceSampleAggregates>;\n};\n\nexport type SessionAverageAggregates = {\n  __typename?: 'SessionAverageAggregates';\n  /** Mean average of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SessionDistinctCountAggregates = {\n  __typename?: 'SessionDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of keyGenThreshold across the matching connection */\n  keyGenThreshold?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of proposerThreshold across the matching connection */\n  proposerThreshold?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of publicKeyId across the matching connection */\n  publicKeyId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of signatureThreshold across the matching connection */\n  signatureThreshold?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `Session` object types. All fields are combined with a logical ‘and.’ */\nexport type SessionFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SessionFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `blockNumber` field. */\n  blockNumber?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `keyGenThreshold` field. */\n  keyGenThreshold?: InputMaybe<JsonFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SessionFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SessionFilter>>;\n  /** Filter by the object’s `proposerThreshold` field. */\n  proposerThreshold?: InputMaybe<JsonFilter>;\n  /** Filter by the object’s `publicKeyId` field. */\n  publicKeyId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `signatureThreshold` field. */\n  signatureThreshold?: InputMaybe<JsonFilter>;\n};\n\nexport type SessionMaxAggregates = {\n  __typename?: 'SessionMaxAggregates';\n  /** Maximum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n};\n\nexport type SessionMinAggregates = {\n  __typename?: 'SessionMinAggregates';\n  /** Minimum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n};\n\nexport type SessionProposer = Node & {\n  __typename?: 'SessionProposer';\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  /** Reads a single `Proposer` that is related to this `SessionProposer`. */\n  proposer?: Maybe<Proposer>;\n  proposerId: Scalars['String'];\n  /** Reads a single `Session` that is related to this `SessionProposer`. */\n  session?: Maybe<Session>;\n  sessionId: Scalars['String'];\n};\n\nexport type SessionProposerAggregates = {\n  __typename?: 'SessionProposerAggregates';\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<SessionProposerDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n};\n\nexport type SessionProposerDistinctCountAggregates = {\n  __typename?: 'SessionProposerDistinctCountAggregates';\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of proposerId across the matching connection */\n  proposerId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of sessionId across the matching connection */\n  sessionId?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `SessionProposer` object types. All fields are combined with a logical ‘and.’ */\nexport type SessionProposerFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SessionProposerFilter>>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SessionProposerFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SessionProposerFilter>>;\n  /** Filter by the object’s `proposerId` field. */\n  proposerId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `sessionId` field. */\n  sessionId?: InputMaybe<StringFilter>;\n};\n\n/** A connection to a list of `Proposer` values, with data from `SessionProposer`. */\nexport type SessionProposersBySessionProposerSessionIdAndProposerIdManyToManyConnection = {\n  __typename?: 'SessionProposersBySessionProposerSessionIdAndProposerIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposerAggregates>;\n  /** A list of edges which contains the `Proposer`, info from the `SessionProposer`, and the cursor to aid in pagination. */\n  edges: Array<SessionProposersBySessionProposerSessionIdAndProposerIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposerAggregates>>;\n  /** A list of `Proposer` objects. */\n  nodes: Array<Maybe<Proposer>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Proposer` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Proposer` values, with data from `SessionProposer`. */\nexport type SessionProposersBySessionProposerSessionIdAndProposerIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ProposersGroupBy>;\n  having?: InputMaybe<ProposersHavingInput>;\n};\n\n/** A `Proposer` edge in the connection, with data from `SessionProposer`. */\nexport type SessionProposersBySessionProposerSessionIdAndProposerIdManyToManyEdge = {\n  __typename?: 'SessionProposersBySessionProposerSessionIdAndProposerIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Proposer` at the end of the edge. */\n  node?: Maybe<Proposer>;\n  /** Reads and enables pagination through a set of `SessionProposer`. */\n  sessionProposers: SessionProposersConnection;\n};\n\n/** A `Proposer` edge in the connection, with data from `SessionProposer`. */\nexport type SessionProposersBySessionProposerSessionIdAndProposerIdManyToManyEdgeSessionProposersArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionProposerFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionProposersOrderBy>>;\n};\n\n/** A connection to a list of `SessionProposer` values. */\nexport type SessionProposersConnection = {\n  __typename?: 'SessionProposersConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<SessionProposerAggregates>;\n  /** A list of edges which contains the `SessionProposer` and cursor to aid in pagination. */\n  edges: Array<SessionProposersEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<SessionProposerAggregates>>;\n  /** A list of `SessionProposer` objects. */\n  nodes: Array<Maybe<SessionProposer>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `SessionProposer` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `SessionProposer` values. */\nexport type SessionProposersConnectionGroupedAggregatesArgs = {\n  groupBy: Array<SessionProposersGroupBy>;\n  having?: InputMaybe<SessionProposersHavingInput>;\n};\n\n/** A `SessionProposer` edge in the connection. */\nexport type SessionProposersEdge = {\n  __typename?: 'SessionProposersEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `SessionProposer` at the end of the edge. */\n  node?: Maybe<SessionProposer>;\n};\n\n/** Grouping methods for `SessionProposer` for usage during aggregation. */\nexport enum SessionProposersGroupBy {\n  ProposerId = 'PROPOSER_ID',\n  SessionId = 'SESSION_ID',\n}\n\n/** Conditions for `SessionProposer` aggregates. */\nexport type SessionProposersHavingInput = {\n  AND?: InputMaybe<Array<SessionProposersHavingInput>>;\n  OR?: InputMaybe<Array<SessionProposersHavingInput>>;\n};\n\n/** Methods to use when ordering `SessionProposer`. */\nexport enum SessionProposersOrderBy {\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ProposerIdAsc = 'PROPOSER_ID_ASC',\n  ProposerIdDesc = 'PROPOSER_ID_DESC',\n  SessionIdAsc = 'SESSION_ID_ASC',\n  SessionIdDesc = 'SESSION_ID_DESC',\n}\n\nexport type SessionStddevPopulationAggregates = {\n  __typename?: 'SessionStddevPopulationAggregates';\n  /** Population standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SessionStddevSampleAggregates = {\n  __typename?: 'SessionStddevSampleAggregates';\n  /** Sample standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SessionSumAggregates = {\n  __typename?: 'SessionSumAggregates';\n  /** Sum of blockNumber across the matching connection */\n  blockNumber: Scalars['BigInt'];\n};\n\nexport type SessionValidator = Node & {\n  __typename?: 'SessionValidator';\n  bestOrder: Scalars['Int'];\n  id: Scalars['String'];\n  isBest: Scalars['Boolean'];\n  isNext: Scalars['Boolean'];\n  isNextBest: Scalars['Boolean'];\n  nextBestOrder: Scalars['Int'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  reputation: Scalars['String'];\n  /** Reads a single `Session` that is related to this `SessionValidator`. */\n  session?: Maybe<Session>;\n  sessionId: Scalars['String'];\n  /** Reads a single `Validator` that is related to this `SessionValidator`. */\n  validator?: Maybe<Validator>;\n  validatorId: Scalars['String'];\n};\n\nexport type SessionValidatorAggregates = {\n  __typename?: 'SessionValidatorAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<SessionValidatorAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<SessionValidatorDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<SessionValidatorMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<SessionValidatorMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<SessionValidatorStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<SessionValidatorStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<SessionValidatorSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<SessionValidatorVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<SessionValidatorVarianceSampleAggregates>;\n};\n\nexport type SessionValidatorAverageAggregates = {\n  __typename?: 'SessionValidatorAverageAggregates';\n  /** Mean average of bestOrder across the matching connection */\n  bestOrder?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of nextBestOrder across the matching connection */\n  nextBestOrder?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SessionValidatorDistinctCountAggregates = {\n  __typename?: 'SessionValidatorDistinctCountAggregates';\n  /** Distinct count of bestOrder across the matching connection */\n  bestOrder?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of isBest across the matching connection */\n  isBest?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of isNext across the matching connection */\n  isNext?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of isNextBest across the matching connection */\n  isNextBest?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of nextBestOrder across the matching connection */\n  nextBestOrder?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of reputation across the matching connection */\n  reputation?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of sessionId across the matching connection */\n  sessionId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of validatorId across the matching connection */\n  validatorId?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `SessionValidator` object types. All fields are combined with a logical ‘and.’ */\nexport type SessionValidatorFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SessionValidatorFilter>>;\n  /** Filter by the object’s `bestOrder` field. */\n  bestOrder?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `isBest` field. */\n  isBest?: InputMaybe<BooleanFilter>;\n  /** Filter by the object’s `isNext` field. */\n  isNext?: InputMaybe<BooleanFilter>;\n  /** Filter by the object’s `isNextBest` field. */\n  isNextBest?: InputMaybe<BooleanFilter>;\n  /** Filter by the object’s `nextBestOrder` field. */\n  nextBestOrder?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SessionValidatorFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SessionValidatorFilter>>;\n  /** Filter by the object’s `reputation` field. */\n  reputation?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `sessionId` field. */\n  sessionId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `validatorId` field. */\n  validatorId?: InputMaybe<StringFilter>;\n};\n\nexport type SessionValidatorMaxAggregates = {\n  __typename?: 'SessionValidatorMaxAggregates';\n  /** Maximum of bestOrder across the matching connection */\n  bestOrder?: Maybe<Scalars['Int']>;\n  /** Maximum of nextBestOrder across the matching connection */\n  nextBestOrder?: Maybe<Scalars['Int']>;\n};\n\nexport type SessionValidatorMinAggregates = {\n  __typename?: 'SessionValidatorMinAggregates';\n  /** Minimum of bestOrder across the matching connection */\n  bestOrder?: Maybe<Scalars['Int']>;\n  /** Minimum of nextBestOrder across the matching connection */\n  nextBestOrder?: Maybe<Scalars['Int']>;\n};\n\nexport type SessionValidatorStddevPopulationAggregates = {\n  __typename?: 'SessionValidatorStddevPopulationAggregates';\n  /** Population standard deviation of bestOrder across the matching connection */\n  bestOrder?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of nextBestOrder across the matching connection */\n  nextBestOrder?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SessionValidatorStddevSampleAggregates = {\n  __typename?: 'SessionValidatorStddevSampleAggregates';\n  /** Sample standard deviation of bestOrder across the matching connection */\n  bestOrder?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of nextBestOrder across the matching connection */\n  nextBestOrder?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SessionValidatorSumAggregates = {\n  __typename?: 'SessionValidatorSumAggregates';\n  /** Sum of bestOrder across the matching connection */\n  bestOrder: Scalars['BigInt'];\n  /** Sum of nextBestOrder across the matching connection */\n  nextBestOrder: Scalars['BigInt'];\n};\n\nexport type SessionValidatorVariancePopulationAggregates = {\n  __typename?: 'SessionValidatorVariancePopulationAggregates';\n  /** Population variance of bestOrder across the matching connection */\n  bestOrder?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of nextBestOrder across the matching connection */\n  nextBestOrder?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SessionValidatorVarianceSampleAggregates = {\n  __typename?: 'SessionValidatorVarianceSampleAggregates';\n  /** Sample variance of bestOrder across the matching connection */\n  bestOrder?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of nextBestOrder across the matching connection */\n  nextBestOrder?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `Validator` values, with data from `SessionValidator`. */\nexport type SessionValidatorsBySessionValidatorSessionIdAndValidatorIdManyToManyConnection = {\n  __typename?: 'SessionValidatorsBySessionValidatorSessionIdAndValidatorIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ValidatorAggregates>;\n  /** A list of edges which contains the `Validator`, info from the `SessionValidator`, and the cursor to aid in pagination. */\n  edges: Array<SessionValidatorsBySessionValidatorSessionIdAndValidatorIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ValidatorAggregates>>;\n  /** A list of `Validator` objects. */\n  nodes: Array<Maybe<Validator>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Validator` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Validator` values, with data from `SessionValidator`. */\nexport type SessionValidatorsBySessionValidatorSessionIdAndValidatorIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ValidatorsGroupBy>;\n  having?: InputMaybe<ValidatorsHavingInput>;\n};\n\n/** A `Validator` edge in the connection, with data from `SessionValidator`. */\nexport type SessionValidatorsBySessionValidatorSessionIdAndValidatorIdManyToManyEdge = {\n  __typename?: 'SessionValidatorsBySessionValidatorSessionIdAndValidatorIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Validator` at the end of the edge. */\n  node?: Maybe<Validator>;\n  /** Reads and enables pagination through a set of `SessionValidator`. */\n  sessionValidators: SessionValidatorsConnection;\n};\n\n/** A `Validator` edge in the connection, with data from `SessionValidator`. */\nexport type SessionValidatorsBySessionValidatorSessionIdAndValidatorIdManyToManyEdgeSessionValidatorsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionValidatorFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionValidatorsOrderBy>>;\n};\n\n/** A connection to a list of `SessionValidator` values. */\nexport type SessionValidatorsConnection = {\n  __typename?: 'SessionValidatorsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<SessionValidatorAggregates>;\n  /** A list of edges which contains the `SessionValidator` and cursor to aid in pagination. */\n  edges: Array<SessionValidatorsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<SessionValidatorAggregates>>;\n  /** A list of `SessionValidator` objects. */\n  nodes: Array<Maybe<SessionValidator>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `SessionValidator` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `SessionValidator` values. */\nexport type SessionValidatorsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<SessionValidatorsGroupBy>;\n  having?: InputMaybe<SessionValidatorsHavingInput>;\n};\n\n/** A `SessionValidator` edge in the connection. */\nexport type SessionValidatorsEdge = {\n  __typename?: 'SessionValidatorsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `SessionValidator` at the end of the edge. */\n  node?: Maybe<SessionValidator>;\n};\n\n/** Grouping methods for `SessionValidator` for usage during aggregation. */\nexport enum SessionValidatorsGroupBy {\n  BestOrder = 'BEST_ORDER',\n  IsBest = 'IS_BEST',\n  IsNext = 'IS_NEXT',\n  IsNextBest = 'IS_NEXT_BEST',\n  NextBestOrder = 'NEXT_BEST_ORDER',\n  Reputation = 'REPUTATION',\n  SessionId = 'SESSION_ID',\n  ValidatorId = 'VALIDATOR_ID',\n}\n\nexport type SessionValidatorsHavingAverageInput = {\n  bestOrder?: InputMaybe<HavingIntFilter>;\n  nextBestOrder?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionValidatorsHavingDistinctCountInput = {\n  bestOrder?: InputMaybe<HavingIntFilter>;\n  nextBestOrder?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `SessionValidator` aggregates. */\nexport type SessionValidatorsHavingInput = {\n  AND?: InputMaybe<Array<SessionValidatorsHavingInput>>;\n  OR?: InputMaybe<Array<SessionValidatorsHavingInput>>;\n  average?: InputMaybe<SessionValidatorsHavingAverageInput>;\n  distinctCount?: InputMaybe<SessionValidatorsHavingDistinctCountInput>;\n  max?: InputMaybe<SessionValidatorsHavingMaxInput>;\n  min?: InputMaybe<SessionValidatorsHavingMinInput>;\n  stddevPopulation?: InputMaybe<SessionValidatorsHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<SessionValidatorsHavingStddevSampleInput>;\n  sum?: InputMaybe<SessionValidatorsHavingSumInput>;\n  variancePopulation?: InputMaybe<SessionValidatorsHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<SessionValidatorsHavingVarianceSampleInput>;\n};\n\nexport type SessionValidatorsHavingMaxInput = {\n  bestOrder?: InputMaybe<HavingIntFilter>;\n  nextBestOrder?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionValidatorsHavingMinInput = {\n  bestOrder?: InputMaybe<HavingIntFilter>;\n  nextBestOrder?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionValidatorsHavingStddevPopulationInput = {\n  bestOrder?: InputMaybe<HavingIntFilter>;\n  nextBestOrder?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionValidatorsHavingStddevSampleInput = {\n  bestOrder?: InputMaybe<HavingIntFilter>;\n  nextBestOrder?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionValidatorsHavingSumInput = {\n  bestOrder?: InputMaybe<HavingIntFilter>;\n  nextBestOrder?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionValidatorsHavingVariancePopulationInput = {\n  bestOrder?: InputMaybe<HavingIntFilter>;\n  nextBestOrder?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionValidatorsHavingVarianceSampleInput = {\n  bestOrder?: InputMaybe<HavingIntFilter>;\n  nextBestOrder?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `SessionValidator`. */\nexport enum SessionValidatorsOrderBy {\n  BestOrderAsc = 'BEST_ORDER_ASC',\n  BestOrderDesc = 'BEST_ORDER_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  IsBestAsc = 'IS_BEST_ASC',\n  IsBestDesc = 'IS_BEST_DESC',\n  IsNextAsc = 'IS_NEXT_ASC',\n  IsNextBestAsc = 'IS_NEXT_BEST_ASC',\n  IsNextBestDesc = 'IS_NEXT_BEST_DESC',\n  IsNextDesc = 'IS_NEXT_DESC',\n  Natural = 'NATURAL',\n  NextBestOrderAsc = 'NEXT_BEST_ORDER_ASC',\n  NextBestOrderDesc = 'NEXT_BEST_ORDER_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ReputationAsc = 'REPUTATION_ASC',\n  ReputationDesc = 'REPUTATION_DESC',\n  SessionIdAsc = 'SESSION_ID_ASC',\n  SessionIdDesc = 'SESSION_ID_DESC',\n  ValidatorIdAsc = 'VALIDATOR_ID_ASC',\n  ValidatorIdDesc = 'VALIDATOR_ID_DESC',\n}\n\nexport type SessionVariancePopulationAggregates = {\n  __typename?: 'SessionVariancePopulationAggregates';\n  /** Population variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SessionVarianceSampleAggregates = {\n  __typename?: 'SessionVarianceSampleAggregates';\n  /** Sample variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `Session` values. */\nexport type SessionsConnection = {\n  __typename?: 'SessionsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<SessionAggregates>;\n  /** A list of edges which contains the `Session` and cursor to aid in pagination. */\n  edges: Array<SessionsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<SessionAggregates>>;\n  /** A list of `Session` objects. */\n  nodes: Array<Maybe<Session>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Session` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Session` values. */\nexport type SessionsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<SessionsGroupBy>;\n  having?: InputMaybe<SessionsHavingInput>;\n};\n\n/** A `Session` edge in the connection. */\nexport type SessionsEdge = {\n  __typename?: 'SessionsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Session` at the end of the edge. */\n  node?: Maybe<Session>;\n};\n\n/** Grouping methods for `Session` for usage during aggregation. */\nexport enum SessionsGroupBy {\n  BlockId = 'BLOCK_ID',\n  BlockNumber = 'BLOCK_NUMBER',\n  KeyGenThreshold = 'KEY_GEN_THRESHOLD',\n  ProposerThreshold = 'PROPOSER_THRESHOLD',\n  PublicKeyId = 'PUBLIC_KEY_ID',\n  SignatureThreshold = 'SIGNATURE_THRESHOLD',\n}\n\nexport type SessionsHavingAverageInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionsHavingDistinctCountInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `Session` aggregates. */\nexport type SessionsHavingInput = {\n  AND?: InputMaybe<Array<SessionsHavingInput>>;\n  OR?: InputMaybe<Array<SessionsHavingInput>>;\n  average?: InputMaybe<SessionsHavingAverageInput>;\n  distinctCount?: InputMaybe<SessionsHavingDistinctCountInput>;\n  max?: InputMaybe<SessionsHavingMaxInput>;\n  min?: InputMaybe<SessionsHavingMinInput>;\n  stddevPopulation?: InputMaybe<SessionsHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<SessionsHavingStddevSampleInput>;\n  sum?: InputMaybe<SessionsHavingSumInput>;\n  variancePopulation?: InputMaybe<SessionsHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<SessionsHavingVarianceSampleInput>;\n};\n\nexport type SessionsHavingMaxInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionsHavingMinInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionsHavingStddevPopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionsHavingStddevSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionsHavingSumInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionsHavingVariancePopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SessionsHavingVarianceSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `Session`. */\nexport enum SessionsOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  BlockNumberAsc = 'BLOCK_NUMBER_ASC',\n  BlockNumberDesc = 'BLOCK_NUMBER_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  KeyGenThresholdAsc = 'KEY_GEN_THRESHOLD_ASC',\n  KeyGenThresholdDesc = 'KEY_GEN_THRESHOLD_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ProposerThresholdAsc = 'PROPOSER_THRESHOLD_ASC',\n  ProposerThresholdDesc = 'PROPOSER_THRESHOLD_DESC',\n  PublicKeyIdAsc = 'PUBLIC_KEY_ID_ASC',\n  PublicKeyIdDesc = 'PUBLIC_KEY_ID_DESC',\n  SessionProposersAverageIdAsc = 'SESSION_PROPOSERS_AVERAGE_ID_ASC',\n  SessionProposersAverageIdDesc = 'SESSION_PROPOSERS_AVERAGE_ID_DESC',\n  SessionProposersAverageProposerIdAsc = 'SESSION_PROPOSERS_AVERAGE_PROPOSER_ID_ASC',\n  SessionProposersAverageProposerIdDesc = 'SESSION_PROPOSERS_AVERAGE_PROPOSER_ID_DESC',\n  SessionProposersAverageSessionIdAsc = 'SESSION_PROPOSERS_AVERAGE_SESSION_ID_ASC',\n  SessionProposersAverageSessionIdDesc = 'SESSION_PROPOSERS_AVERAGE_SESSION_ID_DESC',\n  SessionProposersCountAsc = 'SESSION_PROPOSERS_COUNT_ASC',\n  SessionProposersCountDesc = 'SESSION_PROPOSERS_COUNT_DESC',\n  SessionProposersDistinctCountIdAsc = 'SESSION_PROPOSERS_DISTINCT_COUNT_ID_ASC',\n  SessionProposersDistinctCountIdDesc = 'SESSION_PROPOSERS_DISTINCT_COUNT_ID_DESC',\n  SessionProposersDistinctCountProposerIdAsc = 'SESSION_PROPOSERS_DISTINCT_COUNT_PROPOSER_ID_ASC',\n  SessionProposersDistinctCountProposerIdDesc = 'SESSION_PROPOSERS_DISTINCT_COUNT_PROPOSER_ID_DESC',\n  SessionProposersDistinctCountSessionIdAsc = 'SESSION_PROPOSERS_DISTINCT_COUNT_SESSION_ID_ASC',\n  SessionProposersDistinctCountSessionIdDesc = 'SESSION_PROPOSERS_DISTINCT_COUNT_SESSION_ID_DESC',\n  SessionProposersMaxIdAsc = 'SESSION_PROPOSERS_MAX_ID_ASC',\n  SessionProposersMaxIdDesc = 'SESSION_PROPOSERS_MAX_ID_DESC',\n  SessionProposersMaxProposerIdAsc = 'SESSION_PROPOSERS_MAX_PROPOSER_ID_ASC',\n  SessionProposersMaxProposerIdDesc = 'SESSION_PROPOSERS_MAX_PROPOSER_ID_DESC',\n  SessionProposersMaxSessionIdAsc = 'SESSION_PROPOSERS_MAX_SESSION_ID_ASC',\n  SessionProposersMaxSessionIdDesc = 'SESSION_PROPOSERS_MAX_SESSION_ID_DESC',\n  SessionProposersMinIdAsc = 'SESSION_PROPOSERS_MIN_ID_ASC',\n  SessionProposersMinIdDesc = 'SESSION_PROPOSERS_MIN_ID_DESC',\n  SessionProposersMinProposerIdAsc = 'SESSION_PROPOSERS_MIN_PROPOSER_ID_ASC',\n  SessionProposersMinProposerIdDesc = 'SESSION_PROPOSERS_MIN_PROPOSER_ID_DESC',\n  SessionProposersMinSessionIdAsc = 'SESSION_PROPOSERS_MIN_SESSION_ID_ASC',\n  SessionProposersMinSessionIdDesc = 'SESSION_PROPOSERS_MIN_SESSION_ID_DESC',\n  SessionProposersStddevPopulationIdAsc = 'SESSION_PROPOSERS_STDDEV_POPULATION_ID_ASC',\n  SessionProposersStddevPopulationIdDesc = 'SESSION_PROPOSERS_STDDEV_POPULATION_ID_DESC',\n  SessionProposersStddevPopulationProposerIdAsc = 'SESSION_PROPOSERS_STDDEV_POPULATION_PROPOSER_ID_ASC',\n  SessionProposersStddevPopulationProposerIdDesc = 'SESSION_PROPOSERS_STDDEV_POPULATION_PROPOSER_ID_DESC',\n  SessionProposersStddevPopulationSessionIdAsc = 'SESSION_PROPOSERS_STDDEV_POPULATION_SESSION_ID_ASC',\n  SessionProposersStddevPopulationSessionIdDesc = 'SESSION_PROPOSERS_STDDEV_POPULATION_SESSION_ID_DESC',\n  SessionProposersStddevSampleIdAsc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_ID_ASC',\n  SessionProposersStddevSampleIdDesc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_ID_DESC',\n  SessionProposersStddevSampleProposerIdAsc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_PROPOSER_ID_ASC',\n  SessionProposersStddevSampleProposerIdDesc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_PROPOSER_ID_DESC',\n  SessionProposersStddevSampleSessionIdAsc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_SESSION_ID_ASC',\n  SessionProposersStddevSampleSessionIdDesc = 'SESSION_PROPOSERS_STDDEV_SAMPLE_SESSION_ID_DESC',\n  SessionProposersSumIdAsc = 'SESSION_PROPOSERS_SUM_ID_ASC',\n  SessionProposersSumIdDesc = 'SESSION_PROPOSERS_SUM_ID_DESC',\n  SessionProposersSumProposerIdAsc = 'SESSION_PROPOSERS_SUM_PROPOSER_ID_ASC',\n  SessionProposersSumProposerIdDesc = 'SESSION_PROPOSERS_SUM_PROPOSER_ID_DESC',\n  SessionProposersSumSessionIdAsc = 'SESSION_PROPOSERS_SUM_SESSION_ID_ASC',\n  SessionProposersSumSessionIdDesc = 'SESSION_PROPOSERS_SUM_SESSION_ID_DESC',\n  SessionProposersVariancePopulationIdAsc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_ID_ASC',\n  SessionProposersVariancePopulationIdDesc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_ID_DESC',\n  SessionProposersVariancePopulationProposerIdAsc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_PROPOSER_ID_ASC',\n  SessionProposersVariancePopulationProposerIdDesc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_PROPOSER_ID_DESC',\n  SessionProposersVariancePopulationSessionIdAsc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_SESSION_ID_ASC',\n  SessionProposersVariancePopulationSessionIdDesc = 'SESSION_PROPOSERS_VARIANCE_POPULATION_SESSION_ID_DESC',\n  SessionProposersVarianceSampleIdAsc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_ID_ASC',\n  SessionProposersVarianceSampleIdDesc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_ID_DESC',\n  SessionProposersVarianceSampleProposerIdAsc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_PROPOSER_ID_ASC',\n  SessionProposersVarianceSampleProposerIdDesc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_PROPOSER_ID_DESC',\n  SessionProposersVarianceSampleSessionIdAsc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_SESSION_ID_ASC',\n  SessionProposersVarianceSampleSessionIdDesc = 'SESSION_PROPOSERS_VARIANCE_SAMPLE_SESSION_ID_DESC',\n  SessionValidatorsAverageBestOrderAsc = 'SESSION_VALIDATORS_AVERAGE_BEST_ORDER_ASC',\n  SessionValidatorsAverageBestOrderDesc = 'SESSION_VALIDATORS_AVERAGE_BEST_ORDER_DESC',\n  SessionValidatorsAverageIdAsc = 'SESSION_VALIDATORS_AVERAGE_ID_ASC',\n  SessionValidatorsAverageIdDesc = 'SESSION_VALIDATORS_AVERAGE_ID_DESC',\n  SessionValidatorsAverageIsBestAsc = 'SESSION_VALIDATORS_AVERAGE_IS_BEST_ASC',\n  SessionValidatorsAverageIsBestDesc = 'SESSION_VALIDATORS_AVERAGE_IS_BEST_DESC',\n  SessionValidatorsAverageIsNextAsc = 'SESSION_VALIDATORS_AVERAGE_IS_NEXT_ASC',\n  SessionValidatorsAverageIsNextBestAsc = 'SESSION_VALIDATORS_AVERAGE_IS_NEXT_BEST_ASC',\n  SessionValidatorsAverageIsNextBestDesc = 'SESSION_VALIDATORS_AVERAGE_IS_NEXT_BEST_DESC',\n  SessionValidatorsAverageIsNextDesc = 'SESSION_VALIDATORS_AVERAGE_IS_NEXT_DESC',\n  SessionValidatorsAverageNextBestOrderAsc = 'SESSION_VALIDATORS_AVERAGE_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsAverageNextBestOrderDesc = 'SESSION_VALIDATORS_AVERAGE_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsAverageReputationAsc = 'SESSION_VALIDATORS_AVERAGE_REPUTATION_ASC',\n  SessionValidatorsAverageReputationDesc = 'SESSION_VALIDATORS_AVERAGE_REPUTATION_DESC',\n  SessionValidatorsAverageSessionIdAsc = 'SESSION_VALIDATORS_AVERAGE_SESSION_ID_ASC',\n  SessionValidatorsAverageSessionIdDesc = 'SESSION_VALIDATORS_AVERAGE_SESSION_ID_DESC',\n  SessionValidatorsAverageValidatorIdAsc = 'SESSION_VALIDATORS_AVERAGE_VALIDATOR_ID_ASC',\n  SessionValidatorsAverageValidatorIdDesc = 'SESSION_VALIDATORS_AVERAGE_VALIDATOR_ID_DESC',\n  SessionValidatorsCountAsc = 'SESSION_VALIDATORS_COUNT_ASC',\n  SessionValidatorsCountDesc = 'SESSION_VALIDATORS_COUNT_DESC',\n  SessionValidatorsDistinctCountBestOrderAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_BEST_ORDER_ASC',\n  SessionValidatorsDistinctCountBestOrderDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_BEST_ORDER_DESC',\n  SessionValidatorsDistinctCountIdAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_ID_ASC',\n  SessionValidatorsDistinctCountIdDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_ID_DESC',\n  SessionValidatorsDistinctCountIsBestAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_BEST_ASC',\n  SessionValidatorsDistinctCountIsBestDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_BEST_DESC',\n  SessionValidatorsDistinctCountIsNextAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_NEXT_ASC',\n  SessionValidatorsDistinctCountIsNextBestAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_NEXT_BEST_ASC',\n  SessionValidatorsDistinctCountIsNextBestDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_NEXT_BEST_DESC',\n  SessionValidatorsDistinctCountIsNextDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_NEXT_DESC',\n  SessionValidatorsDistinctCountNextBestOrderAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsDistinctCountNextBestOrderDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsDistinctCountReputationAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_REPUTATION_ASC',\n  SessionValidatorsDistinctCountReputationDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_REPUTATION_DESC',\n  SessionValidatorsDistinctCountSessionIdAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_SESSION_ID_ASC',\n  SessionValidatorsDistinctCountSessionIdDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_SESSION_ID_DESC',\n  SessionValidatorsDistinctCountValidatorIdAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_VALIDATOR_ID_ASC',\n  SessionValidatorsDistinctCountValidatorIdDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_VALIDATOR_ID_DESC',\n  SessionValidatorsMaxBestOrderAsc = 'SESSION_VALIDATORS_MAX_BEST_ORDER_ASC',\n  SessionValidatorsMaxBestOrderDesc = 'SESSION_VALIDATORS_MAX_BEST_ORDER_DESC',\n  SessionValidatorsMaxIdAsc = 'SESSION_VALIDATORS_MAX_ID_ASC',\n  SessionValidatorsMaxIdDesc = 'SESSION_VALIDATORS_MAX_ID_DESC',\n  SessionValidatorsMaxIsBestAsc = 'SESSION_VALIDATORS_MAX_IS_BEST_ASC',\n  SessionValidatorsMaxIsBestDesc = 'SESSION_VALIDATORS_MAX_IS_BEST_DESC',\n  SessionValidatorsMaxIsNextAsc = 'SESSION_VALIDATORS_MAX_IS_NEXT_ASC',\n  SessionValidatorsMaxIsNextBestAsc = 'SESSION_VALIDATORS_MAX_IS_NEXT_BEST_ASC',\n  SessionValidatorsMaxIsNextBestDesc = 'SESSION_VALIDATORS_MAX_IS_NEXT_BEST_DESC',\n  SessionValidatorsMaxIsNextDesc = 'SESSION_VALIDATORS_MAX_IS_NEXT_DESC',\n  SessionValidatorsMaxNextBestOrderAsc = 'SESSION_VALIDATORS_MAX_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsMaxNextBestOrderDesc = 'SESSION_VALIDATORS_MAX_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsMaxReputationAsc = 'SESSION_VALIDATORS_MAX_REPUTATION_ASC',\n  SessionValidatorsMaxReputationDesc = 'SESSION_VALIDATORS_MAX_REPUTATION_DESC',\n  SessionValidatorsMaxSessionIdAsc = 'SESSION_VALIDATORS_MAX_SESSION_ID_ASC',\n  SessionValidatorsMaxSessionIdDesc = 'SESSION_VALIDATORS_MAX_SESSION_ID_DESC',\n  SessionValidatorsMaxValidatorIdAsc = 'SESSION_VALIDATORS_MAX_VALIDATOR_ID_ASC',\n  SessionValidatorsMaxValidatorIdDesc = 'SESSION_VALIDATORS_MAX_VALIDATOR_ID_DESC',\n  SessionValidatorsMinBestOrderAsc = 'SESSION_VALIDATORS_MIN_BEST_ORDER_ASC',\n  SessionValidatorsMinBestOrderDesc = 'SESSION_VALIDATORS_MIN_BEST_ORDER_DESC',\n  SessionValidatorsMinIdAsc = 'SESSION_VALIDATORS_MIN_ID_ASC',\n  SessionValidatorsMinIdDesc = 'SESSION_VALIDATORS_MIN_ID_DESC',\n  SessionValidatorsMinIsBestAsc = 'SESSION_VALIDATORS_MIN_IS_BEST_ASC',\n  SessionValidatorsMinIsBestDesc = 'SESSION_VALIDATORS_MIN_IS_BEST_DESC',\n  SessionValidatorsMinIsNextAsc = 'SESSION_VALIDATORS_MIN_IS_NEXT_ASC',\n  SessionValidatorsMinIsNextBestAsc = 'SESSION_VALIDATORS_MIN_IS_NEXT_BEST_ASC',\n  SessionValidatorsMinIsNextBestDesc = 'SESSION_VALIDATORS_MIN_IS_NEXT_BEST_DESC',\n  SessionValidatorsMinIsNextDesc = 'SESSION_VALIDATORS_MIN_IS_NEXT_DESC',\n  SessionValidatorsMinNextBestOrderAsc = 'SESSION_VALIDATORS_MIN_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsMinNextBestOrderDesc = 'SESSION_VALIDATORS_MIN_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsMinReputationAsc = 'SESSION_VALIDATORS_MIN_REPUTATION_ASC',\n  SessionValidatorsMinReputationDesc = 'SESSION_VALIDATORS_MIN_REPUTATION_DESC',\n  SessionValidatorsMinSessionIdAsc = 'SESSION_VALIDATORS_MIN_SESSION_ID_ASC',\n  SessionValidatorsMinSessionIdDesc = 'SESSION_VALIDATORS_MIN_SESSION_ID_DESC',\n  SessionValidatorsMinValidatorIdAsc = 'SESSION_VALIDATORS_MIN_VALIDATOR_ID_ASC',\n  SessionValidatorsMinValidatorIdDesc = 'SESSION_VALIDATORS_MIN_VALIDATOR_ID_DESC',\n  SessionValidatorsStddevPopulationBestOrderAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_BEST_ORDER_ASC',\n  SessionValidatorsStddevPopulationBestOrderDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_BEST_ORDER_DESC',\n  SessionValidatorsStddevPopulationIdAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_ID_ASC',\n  SessionValidatorsStddevPopulationIdDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_ID_DESC',\n  SessionValidatorsStddevPopulationIsBestAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_BEST_ASC',\n  SessionValidatorsStddevPopulationIsBestDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_BEST_DESC',\n  SessionValidatorsStddevPopulationIsNextAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_NEXT_ASC',\n  SessionValidatorsStddevPopulationIsNextBestAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_NEXT_BEST_ASC',\n  SessionValidatorsStddevPopulationIsNextBestDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_NEXT_BEST_DESC',\n  SessionValidatorsStddevPopulationIsNextDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_NEXT_DESC',\n  SessionValidatorsStddevPopulationNextBestOrderAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsStddevPopulationNextBestOrderDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsStddevPopulationReputationAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_REPUTATION_ASC',\n  SessionValidatorsStddevPopulationReputationDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_REPUTATION_DESC',\n  SessionValidatorsStddevPopulationSessionIdAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_SESSION_ID_ASC',\n  SessionValidatorsStddevPopulationSessionIdDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_SESSION_ID_DESC',\n  SessionValidatorsStddevPopulationValidatorIdAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_VALIDATOR_ID_ASC',\n  SessionValidatorsStddevPopulationValidatorIdDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_VALIDATOR_ID_DESC',\n  SessionValidatorsStddevSampleBestOrderAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_BEST_ORDER_ASC',\n  SessionValidatorsStddevSampleBestOrderDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_BEST_ORDER_DESC',\n  SessionValidatorsStddevSampleIdAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_ID_ASC',\n  SessionValidatorsStddevSampleIdDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_ID_DESC',\n  SessionValidatorsStddevSampleIsBestAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_BEST_ASC',\n  SessionValidatorsStddevSampleIsBestDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_BEST_DESC',\n  SessionValidatorsStddevSampleIsNextAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_NEXT_ASC',\n  SessionValidatorsStddevSampleIsNextBestAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_NEXT_BEST_ASC',\n  SessionValidatorsStddevSampleIsNextBestDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_NEXT_BEST_DESC',\n  SessionValidatorsStddevSampleIsNextDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_NEXT_DESC',\n  SessionValidatorsStddevSampleNextBestOrderAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsStddevSampleNextBestOrderDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsStddevSampleReputationAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_REPUTATION_ASC',\n  SessionValidatorsStddevSampleReputationDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_REPUTATION_DESC',\n  SessionValidatorsStddevSampleSessionIdAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_SESSION_ID_ASC',\n  SessionValidatorsStddevSampleSessionIdDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_SESSION_ID_DESC',\n  SessionValidatorsStddevSampleValidatorIdAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_VALIDATOR_ID_ASC',\n  SessionValidatorsStddevSampleValidatorIdDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_VALIDATOR_ID_DESC',\n  SessionValidatorsSumBestOrderAsc = 'SESSION_VALIDATORS_SUM_BEST_ORDER_ASC',\n  SessionValidatorsSumBestOrderDesc = 'SESSION_VALIDATORS_SUM_BEST_ORDER_DESC',\n  SessionValidatorsSumIdAsc = 'SESSION_VALIDATORS_SUM_ID_ASC',\n  SessionValidatorsSumIdDesc = 'SESSION_VALIDATORS_SUM_ID_DESC',\n  SessionValidatorsSumIsBestAsc = 'SESSION_VALIDATORS_SUM_IS_BEST_ASC',\n  SessionValidatorsSumIsBestDesc = 'SESSION_VALIDATORS_SUM_IS_BEST_DESC',\n  SessionValidatorsSumIsNextAsc = 'SESSION_VALIDATORS_SUM_IS_NEXT_ASC',\n  SessionValidatorsSumIsNextBestAsc = 'SESSION_VALIDATORS_SUM_IS_NEXT_BEST_ASC',\n  SessionValidatorsSumIsNextBestDesc = 'SESSION_VALIDATORS_SUM_IS_NEXT_BEST_DESC',\n  SessionValidatorsSumIsNextDesc = 'SESSION_VALIDATORS_SUM_IS_NEXT_DESC',\n  SessionValidatorsSumNextBestOrderAsc = 'SESSION_VALIDATORS_SUM_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsSumNextBestOrderDesc = 'SESSION_VALIDATORS_SUM_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsSumReputationAsc = 'SESSION_VALIDATORS_SUM_REPUTATION_ASC',\n  SessionValidatorsSumReputationDesc = 'SESSION_VALIDATORS_SUM_REPUTATION_DESC',\n  SessionValidatorsSumSessionIdAsc = 'SESSION_VALIDATORS_SUM_SESSION_ID_ASC',\n  SessionValidatorsSumSessionIdDesc = 'SESSION_VALIDATORS_SUM_SESSION_ID_DESC',\n  SessionValidatorsSumValidatorIdAsc = 'SESSION_VALIDATORS_SUM_VALIDATOR_ID_ASC',\n  SessionValidatorsSumValidatorIdDesc = 'SESSION_VALIDATORS_SUM_VALIDATOR_ID_DESC',\n  SessionValidatorsVariancePopulationBestOrderAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_BEST_ORDER_ASC',\n  SessionValidatorsVariancePopulationBestOrderDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_BEST_ORDER_DESC',\n  SessionValidatorsVariancePopulationIdAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_ID_ASC',\n  SessionValidatorsVariancePopulationIdDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_ID_DESC',\n  SessionValidatorsVariancePopulationIsBestAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_BEST_ASC',\n  SessionValidatorsVariancePopulationIsBestDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_BEST_DESC',\n  SessionValidatorsVariancePopulationIsNextAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_NEXT_ASC',\n  SessionValidatorsVariancePopulationIsNextBestAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_NEXT_BEST_ASC',\n  SessionValidatorsVariancePopulationIsNextBestDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_NEXT_BEST_DESC',\n  SessionValidatorsVariancePopulationIsNextDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_NEXT_DESC',\n  SessionValidatorsVariancePopulationNextBestOrderAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsVariancePopulationNextBestOrderDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsVariancePopulationReputationAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_REPUTATION_ASC',\n  SessionValidatorsVariancePopulationReputationDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_REPUTATION_DESC',\n  SessionValidatorsVariancePopulationSessionIdAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_SESSION_ID_ASC',\n  SessionValidatorsVariancePopulationSessionIdDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_SESSION_ID_DESC',\n  SessionValidatorsVariancePopulationValidatorIdAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_VALIDATOR_ID_ASC',\n  SessionValidatorsVariancePopulationValidatorIdDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_VALIDATOR_ID_DESC',\n  SessionValidatorsVarianceSampleBestOrderAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_BEST_ORDER_ASC',\n  SessionValidatorsVarianceSampleBestOrderDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_BEST_ORDER_DESC',\n  SessionValidatorsVarianceSampleIdAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_ID_ASC',\n  SessionValidatorsVarianceSampleIdDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_ID_DESC',\n  SessionValidatorsVarianceSampleIsBestAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_BEST_ASC',\n  SessionValidatorsVarianceSampleIsBestDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_BEST_DESC',\n  SessionValidatorsVarianceSampleIsNextAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_NEXT_ASC',\n  SessionValidatorsVarianceSampleIsNextBestAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_NEXT_BEST_ASC',\n  SessionValidatorsVarianceSampleIsNextBestDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_NEXT_BEST_DESC',\n  SessionValidatorsVarianceSampleIsNextDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_NEXT_DESC',\n  SessionValidatorsVarianceSampleNextBestOrderAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsVarianceSampleNextBestOrderDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsVarianceSampleReputationAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_REPUTATION_ASC',\n  SessionValidatorsVarianceSampleReputationDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_REPUTATION_DESC',\n  SessionValidatorsVarianceSampleSessionIdAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_SESSION_ID_ASC',\n  SessionValidatorsVarianceSampleSessionIdDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_SESSION_ID_DESC',\n  SessionValidatorsVarianceSampleValidatorIdAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_VALIDATOR_ID_ASC',\n  SessionValidatorsVarianceSampleValidatorIdDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_VALIDATOR_ID_DESC',\n  SignatureThresholdAsc = 'SIGNATURE_THRESHOLD_ASC',\n  SignatureThresholdDesc = 'SIGNATURE_THRESHOLD_DESC',\n}\n\nexport type SignatureThreshold = Node & {\n  __typename?: 'SignatureThreshold';\n  /** Reads a single `Block` that is related to this `SignatureThreshold`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  current?: Maybe<Scalars['Int']>;\n  id: Scalars['String'];\n  next?: Maybe<Scalars['Int']>;\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  pending?: Maybe<Scalars['Int']>;\n};\n\nexport type SignatureThresholdAggregates = {\n  __typename?: 'SignatureThresholdAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<SignatureThresholdAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<SignatureThresholdDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<SignatureThresholdMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<SignatureThresholdMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<SignatureThresholdStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<SignatureThresholdStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<SignatureThresholdSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<SignatureThresholdVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<SignatureThresholdVarianceSampleAggregates>;\n};\n\nexport type SignatureThresholdAverageAggregates = {\n  __typename?: 'SignatureThresholdAverageAggregates';\n  /** Mean average of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Mean average of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SignatureThresholdDistinctCountAggregates = {\n  __typename?: 'SignatureThresholdDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of current across the matching connection */\n  current?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of next across the matching connection */\n  next?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of pending across the matching connection */\n  pending?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `SignatureThreshold` object types. All fields are combined with a logical ‘and.’ */\nexport type SignatureThresholdFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<SignatureThresholdFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `current` field. */\n  current?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `next` field. */\n  next?: InputMaybe<IntFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<SignatureThresholdFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<SignatureThresholdFilter>>;\n  /** Filter by the object’s `pending` field. */\n  pending?: InputMaybe<IntFilter>;\n};\n\nexport type SignatureThresholdMaxAggregates = {\n  __typename?: 'SignatureThresholdMaxAggregates';\n  /** Maximum of current across the matching connection */\n  current?: Maybe<Scalars['Int']>;\n  /** Maximum of next across the matching connection */\n  next?: Maybe<Scalars['Int']>;\n  /** Maximum of pending across the matching connection */\n  pending?: Maybe<Scalars['Int']>;\n};\n\nexport type SignatureThresholdMinAggregates = {\n  __typename?: 'SignatureThresholdMinAggregates';\n  /** Minimum of current across the matching connection */\n  current?: Maybe<Scalars['Int']>;\n  /** Minimum of next across the matching connection */\n  next?: Maybe<Scalars['Int']>;\n  /** Minimum of pending across the matching connection */\n  pending?: Maybe<Scalars['Int']>;\n};\n\nexport type SignatureThresholdStddevPopulationAggregates = {\n  __typename?: 'SignatureThresholdStddevPopulationAggregates';\n  /** Population standard deviation of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Population standard deviation of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SignatureThresholdStddevSampleAggregates = {\n  __typename?: 'SignatureThresholdStddevSampleAggregates';\n  /** Sample standard deviation of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Sample standard deviation of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SignatureThresholdSumAggregates = {\n  __typename?: 'SignatureThresholdSumAggregates';\n  /** Sum of current across the matching connection */\n  current: Scalars['BigInt'];\n  /** Sum of next across the matching connection */\n  next: Scalars['BigInt'];\n  /** Sum of pending across the matching connection */\n  pending: Scalars['BigInt'];\n};\n\nexport type SignatureThresholdVariancePopulationAggregates = {\n  __typename?: 'SignatureThresholdVariancePopulationAggregates';\n  /** Population variance of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Population variance of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type SignatureThresholdVarianceSampleAggregates = {\n  __typename?: 'SignatureThresholdVarianceSampleAggregates';\n  /** Sample variance of current across the matching connection */\n  current?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of next across the matching connection */\n  next?: Maybe<Scalars['BigFloat']>;\n  /** Sample variance of pending across the matching connection */\n  pending?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `SignatureThreshold` values. */\nexport type SignatureThresholdsConnection = {\n  __typename?: 'SignatureThresholdsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<SignatureThresholdAggregates>;\n  /** A list of edges which contains the `SignatureThreshold` and cursor to aid in pagination. */\n  edges: Array<SignatureThresholdsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<SignatureThresholdAggregates>>;\n  /** A list of `SignatureThreshold` objects. */\n  nodes: Array<Maybe<SignatureThreshold>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `SignatureThreshold` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `SignatureThreshold` values. */\nexport type SignatureThresholdsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<SignatureThresholdsGroupBy>;\n  having?: InputMaybe<SignatureThresholdsHavingInput>;\n};\n\n/** A `SignatureThreshold` edge in the connection. */\nexport type SignatureThresholdsEdge = {\n  __typename?: 'SignatureThresholdsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `SignatureThreshold` at the end of the edge. */\n  node?: Maybe<SignatureThreshold>;\n};\n\n/** Grouping methods for `SignatureThreshold` for usage during aggregation. */\nexport enum SignatureThresholdsGroupBy {\n  BlockId = 'BLOCK_ID',\n  Current = 'CURRENT',\n  Next = 'NEXT',\n  Pending = 'PENDING',\n}\n\nexport type SignatureThresholdsHavingAverageInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SignatureThresholdsHavingDistinctCountInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `SignatureThreshold` aggregates. */\nexport type SignatureThresholdsHavingInput = {\n  AND?: InputMaybe<Array<SignatureThresholdsHavingInput>>;\n  OR?: InputMaybe<Array<SignatureThresholdsHavingInput>>;\n  average?: InputMaybe<SignatureThresholdsHavingAverageInput>;\n  distinctCount?: InputMaybe<SignatureThresholdsHavingDistinctCountInput>;\n  max?: InputMaybe<SignatureThresholdsHavingMaxInput>;\n  min?: InputMaybe<SignatureThresholdsHavingMinInput>;\n  stddevPopulation?: InputMaybe<SignatureThresholdsHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<SignatureThresholdsHavingStddevSampleInput>;\n  sum?: InputMaybe<SignatureThresholdsHavingSumInput>;\n  variancePopulation?: InputMaybe<SignatureThresholdsHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<SignatureThresholdsHavingVarianceSampleInput>;\n};\n\nexport type SignatureThresholdsHavingMaxInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SignatureThresholdsHavingMinInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SignatureThresholdsHavingStddevPopulationInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SignatureThresholdsHavingStddevSampleInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SignatureThresholdsHavingSumInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SignatureThresholdsHavingVariancePopulationInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\nexport type SignatureThresholdsHavingVarianceSampleInput = {\n  current?: InputMaybe<HavingIntFilter>;\n  next?: InputMaybe<HavingIntFilter>;\n  pending?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `SignatureThreshold`. */\nexport enum SignatureThresholdsOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  CurrentAsc = 'CURRENT_ASC',\n  CurrentDesc = 'CURRENT_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  NextAsc = 'NEXT_ASC',\n  NextDesc = 'NEXT_DESC',\n  PendingAsc = 'PENDING_ASC',\n  PendingDesc = 'PENDING_DESC',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n}\n\n/** A filter to be used against String fields. All fields are combined with a logical ‘and.’ */\nexport type StringFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<Scalars['String']>;\n  /** Not equal to the specified value, treating null like an ordinary value (case-insensitive). */\n  distinctFromInsensitive?: InputMaybe<Scalars['String']>;\n  /** Ends with the specified string (case-sensitive). */\n  endsWith?: InputMaybe<Scalars['String']>;\n  /** Ends with the specified string (case-insensitive). */\n  endsWithInsensitive?: InputMaybe<Scalars['String']>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<Scalars['String']>;\n  /** Equal to the specified value (case-insensitive). */\n  equalToInsensitive?: InputMaybe<Scalars['String']>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<Scalars['String']>;\n  /** Greater than the specified value (case-insensitive). */\n  greaterThanInsensitive?: InputMaybe<Scalars['String']>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<Scalars['String']>;\n  /** Greater than or equal to the specified value (case-insensitive). */\n  greaterThanOrEqualToInsensitive?: InputMaybe<Scalars['String']>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<Scalars['String']>>;\n  /** Included in the specified list (case-insensitive). */\n  inInsensitive?: InputMaybe<Array<Scalars['String']>>;\n  /** Contains the specified string (case-sensitive). */\n  includes?: InputMaybe<Scalars['String']>;\n  /** Contains the specified string (case-insensitive). */\n  includesInsensitive?: InputMaybe<Scalars['String']>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<Scalars['String']>;\n  /** Less than the specified value (case-insensitive). */\n  lessThanInsensitive?: InputMaybe<Scalars['String']>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<Scalars['String']>;\n  /** Less than or equal to the specified value (case-insensitive). */\n  lessThanOrEqualToInsensitive?: InputMaybe<Scalars['String']>;\n  /** Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */\n  like?: InputMaybe<Scalars['String']>;\n  /** Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */\n  likeInsensitive?: InputMaybe<Scalars['String']>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<Scalars['String']>;\n  /** Equal to the specified value, treating null like an ordinary value (case-insensitive). */\n  notDistinctFromInsensitive?: InputMaybe<Scalars['String']>;\n  /** Does not end with the specified string (case-sensitive). */\n  notEndsWith?: InputMaybe<Scalars['String']>;\n  /** Does not end with the specified string (case-insensitive). */\n  notEndsWithInsensitive?: InputMaybe<Scalars['String']>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<Scalars['String']>;\n  /** Not equal to the specified value (case-insensitive). */\n  notEqualToInsensitive?: InputMaybe<Scalars['String']>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<Scalars['String']>>;\n  /** Not included in the specified list (case-insensitive). */\n  notInInsensitive?: InputMaybe<Array<Scalars['String']>>;\n  /** Does not contain the specified string (case-sensitive). */\n  notIncludes?: InputMaybe<Scalars['String']>;\n  /** Does not contain the specified string (case-insensitive). */\n  notIncludesInsensitive?: InputMaybe<Scalars['String']>;\n  /** Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */\n  notLike?: InputMaybe<Scalars['String']>;\n  /** Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */\n  notLikeInsensitive?: InputMaybe<Scalars['String']>;\n  /** Does not start with the specified string (case-sensitive). */\n  notStartsWith?: InputMaybe<Scalars['String']>;\n  /** Does not start with the specified string (case-insensitive). */\n  notStartsWithInsensitive?: InputMaybe<Scalars['String']>;\n  /** Starts with the specified string (case-sensitive). */\n  startsWith?: InputMaybe<Scalars['String']>;\n  /** Starts with the specified string (case-insensitive). */\n  startsWithInsensitive?: InputMaybe<Scalars['String']>;\n};\n\nexport type TableEstimate = {\n  __typename?: 'TableEstimate';\n  estimate?: Maybe<Scalars['Int']>;\n  table?: Maybe<Scalars['String']>;\n};\n\nexport type UnsignedProposalsQueue = Node & {\n  __typename?: 'UnsignedProposalsQueue';\n  /** Reads a single `Block` that is related to this `UnsignedProposalsQueue`. */\n  block?: Maybe<Block>;\n  blockId: Scalars['String'];\n  blockNumber: Scalars['Int'];\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  /** Reads and enables pagination through a set of `ProposalItem`. */\n  proposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalId: UnsignedProposalsQueueProposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalIdManyToManyConnection;\n  /** Reads and enables pagination through a set of `UnsignedProposalsQueueItem`. */\n  unsignedProposalsQueueItemsByQueueId: UnsignedProposalsQueueItemsConnection;\n};\n\nexport type UnsignedProposalsQueueProposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<ProposalItemFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<ProposalItemsOrderBy>>;\n};\n\nexport type UnsignedProposalsQueueUnsignedProposalsQueueItemsByQueueIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<UnsignedProposalsQueueItemFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<UnsignedProposalsQueueItemsOrderBy>>;\n};\n\nexport type UnsignedProposalsQueueAggregates = {\n  __typename?: 'UnsignedProposalsQueueAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<UnsignedProposalsQueueAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<UnsignedProposalsQueueDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<UnsignedProposalsQueueMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<UnsignedProposalsQueueMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<UnsignedProposalsQueueStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<UnsignedProposalsQueueStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<UnsignedProposalsQueueSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<UnsignedProposalsQueueVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<UnsignedProposalsQueueVarianceSampleAggregates>;\n};\n\nexport type UnsignedProposalsQueueAverageAggregates = {\n  __typename?: 'UnsignedProposalsQueueAverageAggregates';\n  /** Mean average of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type UnsignedProposalsQueueDistinctCountAggregates = {\n  __typename?: 'UnsignedProposalsQueueDistinctCountAggregates';\n  /** Distinct count of blockId across the matching connection */\n  blockId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `UnsignedProposalsQueue` object types. All fields are combined with a logical ‘and.’ */\nexport type UnsignedProposalsQueueFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<UnsignedProposalsQueueFilter>>;\n  /** Filter by the object’s `blockId` field. */\n  blockId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `blockNumber` field. */\n  blockNumber?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<UnsignedProposalsQueueFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<UnsignedProposalsQueueFilter>>;\n};\n\nexport type UnsignedProposalsQueueItem = Node & {\n  __typename?: 'UnsignedProposalsQueueItem';\n  blockNumber: Scalars['Int'];\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  /** Reads a single `ProposalItem` that is related to this `UnsignedProposalsQueueItem`. */\n  proposal?: Maybe<ProposalItem>;\n  proposalId: Scalars['String'];\n  /** Reads a single `UnsignedProposalsQueue` that is related to this `UnsignedProposalsQueueItem`. */\n  queue?: Maybe<UnsignedProposalsQueue>;\n  queueId: Scalars['String'];\n};\n\nexport type UnsignedProposalsQueueItemAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemAggregates';\n  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  average?: Maybe<UnsignedProposalsQueueItemAverageAggregates>;\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<UnsignedProposalsQueueItemDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  max?: Maybe<UnsignedProposalsQueueItemMaxAggregates>;\n  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  min?: Maybe<UnsignedProposalsQueueItemMinAggregates>;\n  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevPopulation?: Maybe<UnsignedProposalsQueueItemStddevPopulationAggregates>;\n  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  stddevSample?: Maybe<UnsignedProposalsQueueItemStddevSampleAggregates>;\n  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  sum?: Maybe<UnsignedProposalsQueueItemSumAggregates>;\n  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  variancePopulation?: Maybe<UnsignedProposalsQueueItemVariancePopulationAggregates>;\n  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  varianceSample?: Maybe<UnsignedProposalsQueueItemVarianceSampleAggregates>;\n};\n\nexport type UnsignedProposalsQueueItemAverageAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemAverageAggregates';\n  /** Mean average of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type UnsignedProposalsQueueItemDistinctCountAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemDistinctCountAggregates';\n  /** Distinct count of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of proposalId across the matching connection */\n  proposalId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of queueId across the matching connection */\n  queueId?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `UnsignedProposalsQueueItem` object types. All fields are combined with a logical ‘and.’ */\nexport type UnsignedProposalsQueueItemFilter = {\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<UnsignedProposalsQueueItemFilter>>;\n  /** Filter by the object’s `blockNumber` field. */\n  blockNumber?: InputMaybe<IntFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<UnsignedProposalsQueueItemFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<UnsignedProposalsQueueItemFilter>>;\n  /** Filter by the object’s `proposalId` field. */\n  proposalId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `queueId` field. */\n  queueId?: InputMaybe<StringFilter>;\n};\n\nexport type UnsignedProposalsQueueItemMaxAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemMaxAggregates';\n  /** Maximum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n};\n\nexport type UnsignedProposalsQueueItemMinAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemMinAggregates';\n  /** Minimum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n};\n\nexport type UnsignedProposalsQueueItemStddevPopulationAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemStddevPopulationAggregates';\n  /** Population standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type UnsignedProposalsQueueItemStddevSampleAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemStddevSampleAggregates';\n  /** Sample standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type UnsignedProposalsQueueItemSumAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemSumAggregates';\n  /** Sum of blockNumber across the matching connection */\n  blockNumber: Scalars['BigInt'];\n};\n\nexport type UnsignedProposalsQueueItemVariancePopulationAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemVariancePopulationAggregates';\n  /** Population variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type UnsignedProposalsQueueItemVarianceSampleAggregates = {\n  __typename?: 'UnsignedProposalsQueueItemVarianceSampleAggregates';\n  /** Sample variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `UnsignedProposalsQueueItem` values. */\nexport type UnsignedProposalsQueueItemsConnection = {\n  __typename?: 'UnsignedProposalsQueueItemsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<UnsignedProposalsQueueItemAggregates>;\n  /** A list of edges which contains the `UnsignedProposalsQueueItem` and cursor to aid in pagination. */\n  edges: Array<UnsignedProposalsQueueItemsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<UnsignedProposalsQueueItemAggregates>>;\n  /** A list of `UnsignedProposalsQueueItem` objects. */\n  nodes: Array<Maybe<UnsignedProposalsQueueItem>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `UnsignedProposalsQueueItem` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `UnsignedProposalsQueueItem` values. */\nexport type UnsignedProposalsQueueItemsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<UnsignedProposalsQueueItemsGroupBy>;\n  having?: InputMaybe<UnsignedProposalsQueueItemsHavingInput>;\n};\n\n/** A `UnsignedProposalsQueueItem` edge in the connection. */\nexport type UnsignedProposalsQueueItemsEdge = {\n  __typename?: 'UnsignedProposalsQueueItemsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `UnsignedProposalsQueueItem` at the end of the edge. */\n  node?: Maybe<UnsignedProposalsQueueItem>;\n};\n\n/** Grouping methods for `UnsignedProposalsQueueItem` for usage during aggregation. */\nexport enum UnsignedProposalsQueueItemsGroupBy {\n  BlockNumber = 'BLOCK_NUMBER',\n  ProposalId = 'PROPOSAL_ID',\n  QueueId = 'QUEUE_ID',\n}\n\nexport type UnsignedProposalsQueueItemsHavingAverageInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueueItemsHavingDistinctCountInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `UnsignedProposalsQueueItem` aggregates. */\nexport type UnsignedProposalsQueueItemsHavingInput = {\n  AND?: InputMaybe<Array<UnsignedProposalsQueueItemsHavingInput>>;\n  OR?: InputMaybe<Array<UnsignedProposalsQueueItemsHavingInput>>;\n  average?: InputMaybe<UnsignedProposalsQueueItemsHavingAverageInput>;\n  distinctCount?: InputMaybe<UnsignedProposalsQueueItemsHavingDistinctCountInput>;\n  max?: InputMaybe<UnsignedProposalsQueueItemsHavingMaxInput>;\n  min?: InputMaybe<UnsignedProposalsQueueItemsHavingMinInput>;\n  stddevPopulation?: InputMaybe<UnsignedProposalsQueueItemsHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<UnsignedProposalsQueueItemsHavingStddevSampleInput>;\n  sum?: InputMaybe<UnsignedProposalsQueueItemsHavingSumInput>;\n  variancePopulation?: InputMaybe<UnsignedProposalsQueueItemsHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<UnsignedProposalsQueueItemsHavingVarianceSampleInput>;\n};\n\nexport type UnsignedProposalsQueueItemsHavingMaxInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueueItemsHavingMinInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueueItemsHavingStddevPopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueueItemsHavingStddevSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueueItemsHavingSumInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueueItemsHavingVariancePopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueueItemsHavingVarianceSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `UnsignedProposalsQueueItem`. */\nexport enum UnsignedProposalsQueueItemsOrderBy {\n  BlockNumberAsc = 'BLOCK_NUMBER_ASC',\n  BlockNumberDesc = 'BLOCK_NUMBER_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  ProposalIdAsc = 'PROPOSAL_ID_ASC',\n  ProposalIdDesc = 'PROPOSAL_ID_DESC',\n  QueueIdAsc = 'QUEUE_ID_ASC',\n  QueueIdDesc = 'QUEUE_ID_DESC',\n}\n\nexport type UnsignedProposalsQueueMaxAggregates = {\n  __typename?: 'UnsignedProposalsQueueMaxAggregates';\n  /** Maximum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n};\n\nexport type UnsignedProposalsQueueMinAggregates = {\n  __typename?: 'UnsignedProposalsQueueMinAggregates';\n  /** Minimum of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['Int']>;\n};\n\n/** A connection to a list of `ProposalItem` values, with data from `UnsignedProposalsQueueItem`. */\nexport type UnsignedProposalsQueueProposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalIdManyToManyConnection = {\n  __typename?: 'UnsignedProposalsQueueProposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ProposalItemAggregates>;\n  /** A list of edges which contains the `ProposalItem`, info from the `UnsignedProposalsQueueItem`, and the cursor to aid in pagination. */\n  edges: Array<UnsignedProposalsQueueProposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ProposalItemAggregates>>;\n  /** A list of `ProposalItem` objects. */\n  nodes: Array<Maybe<ProposalItem>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `ProposalItem` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `ProposalItem` values, with data from `UnsignedProposalsQueueItem`. */\nexport type UnsignedProposalsQueueProposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalIdManyToManyConnectionGroupedAggregatesArgs =\n  {\n    groupBy: Array<ProposalItemsGroupBy>;\n    having?: InputMaybe<ProposalItemsHavingInput>;\n  };\n\n/** A `ProposalItem` edge in the connection, with data from `UnsignedProposalsQueueItem`. */\nexport type UnsignedProposalsQueueProposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalIdManyToManyEdge = {\n  __typename?: 'UnsignedProposalsQueueProposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `ProposalItem` at the end of the edge. */\n  node?: Maybe<ProposalItem>;\n  /** Reads and enables pagination through a set of `UnsignedProposalsQueueItem`. */\n  unsignedProposalsQueueItemsByProposalId: UnsignedProposalsQueueItemsConnection;\n};\n\n/** A `ProposalItem` edge in the connection, with data from `UnsignedProposalsQueueItem`. */\nexport type UnsignedProposalsQueueProposalItemsByUnsignedProposalsQueueItemQueueIdAndProposalIdManyToManyEdgeUnsignedProposalsQueueItemsByProposalIdArgs =\n  {\n    after?: InputMaybe<Scalars['Cursor']>;\n    before?: InputMaybe<Scalars['Cursor']>;\n    filter?: InputMaybe<UnsignedProposalsQueueItemFilter>;\n    first?: InputMaybe<Scalars['Int']>;\n    last?: InputMaybe<Scalars['Int']>;\n    offset?: InputMaybe<Scalars['Int']>;\n    orderBy?: InputMaybe<Array<UnsignedProposalsQueueItemsOrderBy>>;\n  };\n\nexport type UnsignedProposalsQueueStddevPopulationAggregates = {\n  __typename?: 'UnsignedProposalsQueueStddevPopulationAggregates';\n  /** Population standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type UnsignedProposalsQueueStddevSampleAggregates = {\n  __typename?: 'UnsignedProposalsQueueStddevSampleAggregates';\n  /** Sample standard deviation of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type UnsignedProposalsQueueSumAggregates = {\n  __typename?: 'UnsignedProposalsQueueSumAggregates';\n  /** Sum of blockNumber across the matching connection */\n  blockNumber: Scalars['BigInt'];\n};\n\nexport type UnsignedProposalsQueueVariancePopulationAggregates = {\n  __typename?: 'UnsignedProposalsQueueVariancePopulationAggregates';\n  /** Population variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\nexport type UnsignedProposalsQueueVarianceSampleAggregates = {\n  __typename?: 'UnsignedProposalsQueueVarianceSampleAggregates';\n  /** Sample variance of blockNumber across the matching connection */\n  blockNumber?: Maybe<Scalars['BigFloat']>;\n};\n\n/** A connection to a list of `UnsignedProposalsQueue` values. */\nexport type UnsignedProposalsQueuesConnection = {\n  __typename?: 'UnsignedProposalsQueuesConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<UnsignedProposalsQueueAggregates>;\n  /** A list of edges which contains the `UnsignedProposalsQueue` and cursor to aid in pagination. */\n  edges: Array<UnsignedProposalsQueuesEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<UnsignedProposalsQueueAggregates>>;\n  /** A list of `UnsignedProposalsQueue` objects. */\n  nodes: Array<Maybe<UnsignedProposalsQueue>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `UnsignedProposalsQueue` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `UnsignedProposalsQueue` values. */\nexport type UnsignedProposalsQueuesConnectionGroupedAggregatesArgs = {\n  groupBy: Array<UnsignedProposalsQueuesGroupBy>;\n  having?: InputMaybe<UnsignedProposalsQueuesHavingInput>;\n};\n\n/** A `UnsignedProposalsQueue` edge in the connection. */\nexport type UnsignedProposalsQueuesEdge = {\n  __typename?: 'UnsignedProposalsQueuesEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `UnsignedProposalsQueue` at the end of the edge. */\n  node?: Maybe<UnsignedProposalsQueue>;\n};\n\n/** Grouping methods for `UnsignedProposalsQueue` for usage during aggregation. */\nexport enum UnsignedProposalsQueuesGroupBy {\n  BlockId = 'BLOCK_ID',\n  BlockNumber = 'BLOCK_NUMBER',\n}\n\nexport type UnsignedProposalsQueuesHavingAverageInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueuesHavingDistinctCountInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\n/** Conditions for `UnsignedProposalsQueue` aggregates. */\nexport type UnsignedProposalsQueuesHavingInput = {\n  AND?: InputMaybe<Array<UnsignedProposalsQueuesHavingInput>>;\n  OR?: InputMaybe<Array<UnsignedProposalsQueuesHavingInput>>;\n  average?: InputMaybe<UnsignedProposalsQueuesHavingAverageInput>;\n  distinctCount?: InputMaybe<UnsignedProposalsQueuesHavingDistinctCountInput>;\n  max?: InputMaybe<UnsignedProposalsQueuesHavingMaxInput>;\n  min?: InputMaybe<UnsignedProposalsQueuesHavingMinInput>;\n  stddevPopulation?: InputMaybe<UnsignedProposalsQueuesHavingStddevPopulationInput>;\n  stddevSample?: InputMaybe<UnsignedProposalsQueuesHavingStddevSampleInput>;\n  sum?: InputMaybe<UnsignedProposalsQueuesHavingSumInput>;\n  variancePopulation?: InputMaybe<UnsignedProposalsQueuesHavingVariancePopulationInput>;\n  varianceSample?: InputMaybe<UnsignedProposalsQueuesHavingVarianceSampleInput>;\n};\n\nexport type UnsignedProposalsQueuesHavingMaxInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueuesHavingMinInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueuesHavingStddevPopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueuesHavingStddevSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueuesHavingSumInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueuesHavingVariancePopulationInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\nexport type UnsignedProposalsQueuesHavingVarianceSampleInput = {\n  blockNumber?: InputMaybe<HavingIntFilter>;\n};\n\n/** Methods to use when ordering `UnsignedProposalsQueue`. */\nexport enum UnsignedProposalsQueuesOrderBy {\n  BlockIdAsc = 'BLOCK_ID_ASC',\n  BlockIdDesc = 'BLOCK_ID_DESC',\n  BlockNumberAsc = 'BLOCK_NUMBER_ASC',\n  BlockNumberDesc = 'BLOCK_NUMBER_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  UnsignedProposalsQueueItemsByQueueIdAverageBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_AVERAGE_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByQueueIdAverageBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_AVERAGE_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByQueueIdAverageIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_AVERAGE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdAverageIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_AVERAGE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdAverageProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_AVERAGE_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdAverageProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_AVERAGE_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdAverageQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_AVERAGE_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdAverageQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_AVERAGE_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdCountAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_COUNT_ASC',\n  UnsignedProposalsQueueItemsByQueueIdCountDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_COUNT_DESC',\n  UnsignedProposalsQueueItemsByQueueIdDistinctCountBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_DISTINCT_COUNT_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByQueueIdDistinctCountBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_DISTINCT_COUNT_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByQueueIdDistinctCountIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_DISTINCT_COUNT_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdDistinctCountIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_DISTINCT_COUNT_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdDistinctCountProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_DISTINCT_COUNT_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdDistinctCountProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_DISTINCT_COUNT_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdDistinctCountQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_DISTINCT_COUNT_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdDistinctCountQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_DISTINCT_COUNT_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdMaxBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MAX_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByQueueIdMaxBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MAX_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByQueueIdMaxIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MAX_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdMaxIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MAX_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdMaxProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MAX_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdMaxProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MAX_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdMaxQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MAX_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdMaxQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MAX_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdMinBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MIN_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByQueueIdMinBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MIN_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByQueueIdMinIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MIN_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdMinIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MIN_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdMinProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MIN_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdMinProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MIN_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdMinQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MIN_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdMinQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_MIN_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdStddevPopulationBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_POPULATION_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByQueueIdStddevPopulationBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_POPULATION_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByQueueIdStddevPopulationIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_POPULATION_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdStddevPopulationIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_POPULATION_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdStddevPopulationProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_POPULATION_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdStddevPopulationProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_POPULATION_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdStddevPopulationQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_POPULATION_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdStddevPopulationQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_POPULATION_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdStddevSampleBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_SAMPLE_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByQueueIdStddevSampleBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_SAMPLE_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByQueueIdStddevSampleIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_SAMPLE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdStddevSampleIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_SAMPLE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdStddevSampleProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_SAMPLE_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdStddevSampleProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_SAMPLE_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdStddevSampleQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_SAMPLE_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdStddevSampleQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_STDDEV_SAMPLE_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdSumBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_SUM_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByQueueIdSumBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_SUM_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByQueueIdSumIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_SUM_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdSumIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_SUM_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdSumProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_SUM_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdSumProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_SUM_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdSumQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_SUM_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdSumQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_SUM_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdVariancePopulationBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_POPULATION_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByQueueIdVariancePopulationBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_POPULATION_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByQueueIdVariancePopulationIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_POPULATION_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdVariancePopulationIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_POPULATION_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdVariancePopulationProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_POPULATION_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdVariancePopulationProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_POPULATION_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdVariancePopulationQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_POPULATION_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdVariancePopulationQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_POPULATION_QUEUE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdVarianceSampleBlockNumberAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_SAMPLE_BLOCK_NUMBER_ASC',\n  UnsignedProposalsQueueItemsByQueueIdVarianceSampleBlockNumberDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_SAMPLE_BLOCK_NUMBER_DESC',\n  UnsignedProposalsQueueItemsByQueueIdVarianceSampleIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_SAMPLE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdVarianceSampleIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_SAMPLE_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdVarianceSampleProposalIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_SAMPLE_PROPOSAL_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdVarianceSampleProposalIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_SAMPLE_PROPOSAL_ID_DESC',\n  UnsignedProposalsQueueItemsByQueueIdVarianceSampleQueueIdAsc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_SAMPLE_QUEUE_ID_ASC',\n  UnsignedProposalsQueueItemsByQueueIdVarianceSampleQueueIdDesc = 'UNSIGNED_PROPOSALS_QUEUE_ITEMS_BY_QUEUE_ID_VARIANCE_SAMPLE_QUEUE_ID_DESC',\n}\n\nexport type Validator = Node & {\n  __typename?: 'Validator';\n  /** Reads a single `Account` that is related to this `Validator`. */\n  account?: Maybe<Account>;\n  accountId: Scalars['String'];\n  authorityId: Scalars['String'];\n  id: Scalars['String'];\n  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */\n  nodeId: Scalars['ID'];\n  /** Reads and enables pagination through a set of `SessionValidator`. */\n  sessionValidators: SessionValidatorsConnection;\n  /** Reads and enables pagination through a set of `Session`. */\n  sessionsBySessionValidatorValidatorIdAndSessionId: ValidatorSessionsBySessionValidatorValidatorIdAndSessionIdManyToManyConnection;\n};\n\nexport type ValidatorSessionValidatorsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionValidatorFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionValidatorsOrderBy>>;\n};\n\nexport type ValidatorSessionsBySessionValidatorValidatorIdAndSessionIdArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionsOrderBy>>;\n};\n\nexport type ValidatorAggregates = {\n  __typename?: 'ValidatorAggregates';\n  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  distinctCount?: Maybe<ValidatorDistinctCountAggregates>;\n  keys?: Maybe<Array<Scalars['String']>>;\n};\n\nexport type ValidatorDistinctCountAggregates = {\n  __typename?: 'ValidatorDistinctCountAggregates';\n  /** Distinct count of accountId across the matching connection */\n  accountId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of authorityId across the matching connection */\n  authorityId?: Maybe<Scalars['BigInt']>;\n  /** Distinct count of id across the matching connection */\n  id?: Maybe<Scalars['BigInt']>;\n};\n\n/** A filter to be used against `Validator` object types. All fields are combined with a logical ‘and.’ */\nexport type ValidatorFilter = {\n  /** Filter by the object’s `accountId` field. */\n  accountId?: InputMaybe<StringFilter>;\n  /** Checks for all expressions in this list. */\n  and?: InputMaybe<Array<ValidatorFilter>>;\n  /** Filter by the object’s `authorityId` field. */\n  authorityId?: InputMaybe<StringFilter>;\n  /** Filter by the object’s `id` field. */\n  id?: InputMaybe<StringFilter>;\n  /** Negates the expression. */\n  not?: InputMaybe<ValidatorFilter>;\n  /** Checks for any expressions in this list. */\n  or?: InputMaybe<Array<ValidatorFilter>>;\n};\n\n/** A connection to a list of `Session` values, with data from `SessionValidator`. */\nexport type ValidatorSessionsBySessionValidatorValidatorIdAndSessionIdManyToManyConnection = {\n  __typename?: 'ValidatorSessionsBySessionValidatorValidatorIdAndSessionIdManyToManyConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<SessionAggregates>;\n  /** A list of edges which contains the `Session`, info from the `SessionValidator`, and the cursor to aid in pagination. */\n  edges: Array<ValidatorSessionsBySessionValidatorValidatorIdAndSessionIdManyToManyEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<SessionAggregates>>;\n  /** A list of `Session` objects. */\n  nodes: Array<Maybe<Session>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Session` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Session` values, with data from `SessionValidator`. */\nexport type ValidatorSessionsBySessionValidatorValidatorIdAndSessionIdManyToManyConnectionGroupedAggregatesArgs = {\n  groupBy: Array<SessionsGroupBy>;\n  having?: InputMaybe<SessionsHavingInput>;\n};\n\n/** A `Session` edge in the connection, with data from `SessionValidator`. */\nexport type ValidatorSessionsBySessionValidatorValidatorIdAndSessionIdManyToManyEdge = {\n  __typename?: 'ValidatorSessionsBySessionValidatorValidatorIdAndSessionIdManyToManyEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Session` at the end of the edge. */\n  node?: Maybe<Session>;\n  /** Reads and enables pagination through a set of `SessionValidator`. */\n  sessionValidators: SessionValidatorsConnection;\n};\n\n/** A `Session` edge in the connection, with data from `SessionValidator`. */\nexport type ValidatorSessionsBySessionValidatorValidatorIdAndSessionIdManyToManyEdgeSessionValidatorsArgs = {\n  after?: InputMaybe<Scalars['Cursor']>;\n  before?: InputMaybe<Scalars['Cursor']>;\n  filter?: InputMaybe<SessionValidatorFilter>;\n  first?: InputMaybe<Scalars['Int']>;\n  last?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  orderBy?: InputMaybe<Array<SessionValidatorsOrderBy>>;\n};\n\n/** A connection to a list of `Validator` values. */\nexport type ValidatorsConnection = {\n  __typename?: 'ValidatorsConnection';\n  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  aggregates?: Maybe<ValidatorAggregates>;\n  /** A list of edges which contains the `Validator` and cursor to aid in pagination. */\n  edges: Array<ValidatorsEdge>;\n  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */\n  groupedAggregates?: Maybe<Array<ValidatorAggregates>>;\n  /** A list of `Validator` objects. */\n  nodes: Array<Maybe<Validator>>;\n  /** Information to aid in pagination. */\n  pageInfo: PageInfo;\n  /** The count of *all* `Validator` you could get from the connection. */\n  totalCount: Scalars['Int'];\n};\n\n/** A connection to a list of `Validator` values. */\nexport type ValidatorsConnectionGroupedAggregatesArgs = {\n  groupBy: Array<ValidatorsGroupBy>;\n  having?: InputMaybe<ValidatorsHavingInput>;\n};\n\n/** A `Validator` edge in the connection. */\nexport type ValidatorsEdge = {\n  __typename?: 'ValidatorsEdge';\n  /** A cursor for use in pagination. */\n  cursor?: Maybe<Scalars['Cursor']>;\n  /** The `Validator` at the end of the edge. */\n  node?: Maybe<Validator>;\n};\n\n/** Grouping methods for `Validator` for usage during aggregation. */\nexport enum ValidatorsGroupBy {\n  AccountId = 'ACCOUNT_ID',\n}\n\n/** Conditions for `Validator` aggregates. */\nexport type ValidatorsHavingInput = {\n  AND?: InputMaybe<Array<ValidatorsHavingInput>>;\n  OR?: InputMaybe<Array<ValidatorsHavingInput>>;\n};\n\n/** Methods to use when ordering `Validator`. */\nexport enum ValidatorsOrderBy {\n  AccountIdAsc = 'ACCOUNT_ID_ASC',\n  AccountIdDesc = 'ACCOUNT_ID_DESC',\n  AuthorityIdAsc = 'AUTHORITY_ID_ASC',\n  AuthorityIdDesc = 'AUTHORITY_ID_DESC',\n  IdAsc = 'ID_ASC',\n  IdDesc = 'ID_DESC',\n  Natural = 'NATURAL',\n  PrimaryKeyAsc = 'PRIMARY_KEY_ASC',\n  PrimaryKeyDesc = 'PRIMARY_KEY_DESC',\n  SessionValidatorsAverageBestOrderAsc = 'SESSION_VALIDATORS_AVERAGE_BEST_ORDER_ASC',\n  SessionValidatorsAverageBestOrderDesc = 'SESSION_VALIDATORS_AVERAGE_BEST_ORDER_DESC',\n  SessionValidatorsAverageIdAsc = 'SESSION_VALIDATORS_AVERAGE_ID_ASC',\n  SessionValidatorsAverageIdDesc = 'SESSION_VALIDATORS_AVERAGE_ID_DESC',\n  SessionValidatorsAverageIsBestAsc = 'SESSION_VALIDATORS_AVERAGE_IS_BEST_ASC',\n  SessionValidatorsAverageIsBestDesc = 'SESSION_VALIDATORS_AVERAGE_IS_BEST_DESC',\n  SessionValidatorsAverageIsNextAsc = 'SESSION_VALIDATORS_AVERAGE_IS_NEXT_ASC',\n  SessionValidatorsAverageIsNextBestAsc = 'SESSION_VALIDATORS_AVERAGE_IS_NEXT_BEST_ASC',\n  SessionValidatorsAverageIsNextBestDesc = 'SESSION_VALIDATORS_AVERAGE_IS_NEXT_BEST_DESC',\n  SessionValidatorsAverageIsNextDesc = 'SESSION_VALIDATORS_AVERAGE_IS_NEXT_DESC',\n  SessionValidatorsAverageNextBestOrderAsc = 'SESSION_VALIDATORS_AVERAGE_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsAverageNextBestOrderDesc = 'SESSION_VALIDATORS_AVERAGE_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsAverageReputationAsc = 'SESSION_VALIDATORS_AVERAGE_REPUTATION_ASC',\n  SessionValidatorsAverageReputationDesc = 'SESSION_VALIDATORS_AVERAGE_REPUTATION_DESC',\n  SessionValidatorsAverageSessionIdAsc = 'SESSION_VALIDATORS_AVERAGE_SESSION_ID_ASC',\n  SessionValidatorsAverageSessionIdDesc = 'SESSION_VALIDATORS_AVERAGE_SESSION_ID_DESC',\n  SessionValidatorsAverageValidatorIdAsc = 'SESSION_VALIDATORS_AVERAGE_VALIDATOR_ID_ASC',\n  SessionValidatorsAverageValidatorIdDesc = 'SESSION_VALIDATORS_AVERAGE_VALIDATOR_ID_DESC',\n  SessionValidatorsCountAsc = 'SESSION_VALIDATORS_COUNT_ASC',\n  SessionValidatorsCountDesc = 'SESSION_VALIDATORS_COUNT_DESC',\n  SessionValidatorsDistinctCountBestOrderAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_BEST_ORDER_ASC',\n  SessionValidatorsDistinctCountBestOrderDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_BEST_ORDER_DESC',\n  SessionValidatorsDistinctCountIdAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_ID_ASC',\n  SessionValidatorsDistinctCountIdDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_ID_DESC',\n  SessionValidatorsDistinctCountIsBestAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_BEST_ASC',\n  SessionValidatorsDistinctCountIsBestDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_BEST_DESC',\n  SessionValidatorsDistinctCountIsNextAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_NEXT_ASC',\n  SessionValidatorsDistinctCountIsNextBestAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_NEXT_BEST_ASC',\n  SessionValidatorsDistinctCountIsNextBestDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_NEXT_BEST_DESC',\n  SessionValidatorsDistinctCountIsNextDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_IS_NEXT_DESC',\n  SessionValidatorsDistinctCountNextBestOrderAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsDistinctCountNextBestOrderDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsDistinctCountReputationAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_REPUTATION_ASC',\n  SessionValidatorsDistinctCountReputationDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_REPUTATION_DESC',\n  SessionValidatorsDistinctCountSessionIdAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_SESSION_ID_ASC',\n  SessionValidatorsDistinctCountSessionIdDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_SESSION_ID_DESC',\n  SessionValidatorsDistinctCountValidatorIdAsc = 'SESSION_VALIDATORS_DISTINCT_COUNT_VALIDATOR_ID_ASC',\n  SessionValidatorsDistinctCountValidatorIdDesc = 'SESSION_VALIDATORS_DISTINCT_COUNT_VALIDATOR_ID_DESC',\n  SessionValidatorsMaxBestOrderAsc = 'SESSION_VALIDATORS_MAX_BEST_ORDER_ASC',\n  SessionValidatorsMaxBestOrderDesc = 'SESSION_VALIDATORS_MAX_BEST_ORDER_DESC',\n  SessionValidatorsMaxIdAsc = 'SESSION_VALIDATORS_MAX_ID_ASC',\n  SessionValidatorsMaxIdDesc = 'SESSION_VALIDATORS_MAX_ID_DESC',\n  SessionValidatorsMaxIsBestAsc = 'SESSION_VALIDATORS_MAX_IS_BEST_ASC',\n  SessionValidatorsMaxIsBestDesc = 'SESSION_VALIDATORS_MAX_IS_BEST_DESC',\n  SessionValidatorsMaxIsNextAsc = 'SESSION_VALIDATORS_MAX_IS_NEXT_ASC',\n  SessionValidatorsMaxIsNextBestAsc = 'SESSION_VALIDATORS_MAX_IS_NEXT_BEST_ASC',\n  SessionValidatorsMaxIsNextBestDesc = 'SESSION_VALIDATORS_MAX_IS_NEXT_BEST_DESC',\n  SessionValidatorsMaxIsNextDesc = 'SESSION_VALIDATORS_MAX_IS_NEXT_DESC',\n  SessionValidatorsMaxNextBestOrderAsc = 'SESSION_VALIDATORS_MAX_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsMaxNextBestOrderDesc = 'SESSION_VALIDATORS_MAX_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsMaxReputationAsc = 'SESSION_VALIDATORS_MAX_REPUTATION_ASC',\n  SessionValidatorsMaxReputationDesc = 'SESSION_VALIDATORS_MAX_REPUTATION_DESC',\n  SessionValidatorsMaxSessionIdAsc = 'SESSION_VALIDATORS_MAX_SESSION_ID_ASC',\n  SessionValidatorsMaxSessionIdDesc = 'SESSION_VALIDATORS_MAX_SESSION_ID_DESC',\n  SessionValidatorsMaxValidatorIdAsc = 'SESSION_VALIDATORS_MAX_VALIDATOR_ID_ASC',\n  SessionValidatorsMaxValidatorIdDesc = 'SESSION_VALIDATORS_MAX_VALIDATOR_ID_DESC',\n  SessionValidatorsMinBestOrderAsc = 'SESSION_VALIDATORS_MIN_BEST_ORDER_ASC',\n  SessionValidatorsMinBestOrderDesc = 'SESSION_VALIDATORS_MIN_BEST_ORDER_DESC',\n  SessionValidatorsMinIdAsc = 'SESSION_VALIDATORS_MIN_ID_ASC',\n  SessionValidatorsMinIdDesc = 'SESSION_VALIDATORS_MIN_ID_DESC',\n  SessionValidatorsMinIsBestAsc = 'SESSION_VALIDATORS_MIN_IS_BEST_ASC',\n  SessionValidatorsMinIsBestDesc = 'SESSION_VALIDATORS_MIN_IS_BEST_DESC',\n  SessionValidatorsMinIsNextAsc = 'SESSION_VALIDATORS_MIN_IS_NEXT_ASC',\n  SessionValidatorsMinIsNextBestAsc = 'SESSION_VALIDATORS_MIN_IS_NEXT_BEST_ASC',\n  SessionValidatorsMinIsNextBestDesc = 'SESSION_VALIDATORS_MIN_IS_NEXT_BEST_DESC',\n  SessionValidatorsMinIsNextDesc = 'SESSION_VALIDATORS_MIN_IS_NEXT_DESC',\n  SessionValidatorsMinNextBestOrderAsc = 'SESSION_VALIDATORS_MIN_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsMinNextBestOrderDesc = 'SESSION_VALIDATORS_MIN_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsMinReputationAsc = 'SESSION_VALIDATORS_MIN_REPUTATION_ASC',\n  SessionValidatorsMinReputationDesc = 'SESSION_VALIDATORS_MIN_REPUTATION_DESC',\n  SessionValidatorsMinSessionIdAsc = 'SESSION_VALIDATORS_MIN_SESSION_ID_ASC',\n  SessionValidatorsMinSessionIdDesc = 'SESSION_VALIDATORS_MIN_SESSION_ID_DESC',\n  SessionValidatorsMinValidatorIdAsc = 'SESSION_VALIDATORS_MIN_VALIDATOR_ID_ASC',\n  SessionValidatorsMinValidatorIdDesc = 'SESSION_VALIDATORS_MIN_VALIDATOR_ID_DESC',\n  SessionValidatorsStddevPopulationBestOrderAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_BEST_ORDER_ASC',\n  SessionValidatorsStddevPopulationBestOrderDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_BEST_ORDER_DESC',\n  SessionValidatorsStddevPopulationIdAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_ID_ASC',\n  SessionValidatorsStddevPopulationIdDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_ID_DESC',\n  SessionValidatorsStddevPopulationIsBestAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_BEST_ASC',\n  SessionValidatorsStddevPopulationIsBestDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_BEST_DESC',\n  SessionValidatorsStddevPopulationIsNextAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_NEXT_ASC',\n  SessionValidatorsStddevPopulationIsNextBestAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_NEXT_BEST_ASC',\n  SessionValidatorsStddevPopulationIsNextBestDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_NEXT_BEST_DESC',\n  SessionValidatorsStddevPopulationIsNextDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_IS_NEXT_DESC',\n  SessionValidatorsStddevPopulationNextBestOrderAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsStddevPopulationNextBestOrderDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsStddevPopulationReputationAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_REPUTATION_ASC',\n  SessionValidatorsStddevPopulationReputationDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_REPUTATION_DESC',\n  SessionValidatorsStddevPopulationSessionIdAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_SESSION_ID_ASC',\n  SessionValidatorsStddevPopulationSessionIdDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_SESSION_ID_DESC',\n  SessionValidatorsStddevPopulationValidatorIdAsc = 'SESSION_VALIDATORS_STDDEV_POPULATION_VALIDATOR_ID_ASC',\n  SessionValidatorsStddevPopulationValidatorIdDesc = 'SESSION_VALIDATORS_STDDEV_POPULATION_VALIDATOR_ID_DESC',\n  SessionValidatorsStddevSampleBestOrderAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_BEST_ORDER_ASC',\n  SessionValidatorsStddevSampleBestOrderDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_BEST_ORDER_DESC',\n  SessionValidatorsStddevSampleIdAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_ID_ASC',\n  SessionValidatorsStddevSampleIdDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_ID_DESC',\n  SessionValidatorsStddevSampleIsBestAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_BEST_ASC',\n  SessionValidatorsStddevSampleIsBestDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_BEST_DESC',\n  SessionValidatorsStddevSampleIsNextAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_NEXT_ASC',\n  SessionValidatorsStddevSampleIsNextBestAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_NEXT_BEST_ASC',\n  SessionValidatorsStddevSampleIsNextBestDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_NEXT_BEST_DESC',\n  SessionValidatorsStddevSampleIsNextDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_IS_NEXT_DESC',\n  SessionValidatorsStddevSampleNextBestOrderAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsStddevSampleNextBestOrderDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsStddevSampleReputationAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_REPUTATION_ASC',\n  SessionValidatorsStddevSampleReputationDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_REPUTATION_DESC',\n  SessionValidatorsStddevSampleSessionIdAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_SESSION_ID_ASC',\n  SessionValidatorsStddevSampleSessionIdDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_SESSION_ID_DESC',\n  SessionValidatorsStddevSampleValidatorIdAsc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_VALIDATOR_ID_ASC',\n  SessionValidatorsStddevSampleValidatorIdDesc = 'SESSION_VALIDATORS_STDDEV_SAMPLE_VALIDATOR_ID_DESC',\n  SessionValidatorsSumBestOrderAsc = 'SESSION_VALIDATORS_SUM_BEST_ORDER_ASC',\n  SessionValidatorsSumBestOrderDesc = 'SESSION_VALIDATORS_SUM_BEST_ORDER_DESC',\n  SessionValidatorsSumIdAsc = 'SESSION_VALIDATORS_SUM_ID_ASC',\n  SessionValidatorsSumIdDesc = 'SESSION_VALIDATORS_SUM_ID_DESC',\n  SessionValidatorsSumIsBestAsc = 'SESSION_VALIDATORS_SUM_IS_BEST_ASC',\n  SessionValidatorsSumIsBestDesc = 'SESSION_VALIDATORS_SUM_IS_BEST_DESC',\n  SessionValidatorsSumIsNextAsc = 'SESSION_VALIDATORS_SUM_IS_NEXT_ASC',\n  SessionValidatorsSumIsNextBestAsc = 'SESSION_VALIDATORS_SUM_IS_NEXT_BEST_ASC',\n  SessionValidatorsSumIsNextBestDesc = 'SESSION_VALIDATORS_SUM_IS_NEXT_BEST_DESC',\n  SessionValidatorsSumIsNextDesc = 'SESSION_VALIDATORS_SUM_IS_NEXT_DESC',\n  SessionValidatorsSumNextBestOrderAsc = 'SESSION_VALIDATORS_SUM_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsSumNextBestOrderDesc = 'SESSION_VALIDATORS_SUM_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsSumReputationAsc = 'SESSION_VALIDATORS_SUM_REPUTATION_ASC',\n  SessionValidatorsSumReputationDesc = 'SESSION_VALIDATORS_SUM_REPUTATION_DESC',\n  SessionValidatorsSumSessionIdAsc = 'SESSION_VALIDATORS_SUM_SESSION_ID_ASC',\n  SessionValidatorsSumSessionIdDesc = 'SESSION_VALIDATORS_SUM_SESSION_ID_DESC',\n  SessionValidatorsSumValidatorIdAsc = 'SESSION_VALIDATORS_SUM_VALIDATOR_ID_ASC',\n  SessionValidatorsSumValidatorIdDesc = 'SESSION_VALIDATORS_SUM_VALIDATOR_ID_DESC',\n  SessionValidatorsVariancePopulationBestOrderAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_BEST_ORDER_ASC',\n  SessionValidatorsVariancePopulationBestOrderDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_BEST_ORDER_DESC',\n  SessionValidatorsVariancePopulationIdAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_ID_ASC',\n  SessionValidatorsVariancePopulationIdDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_ID_DESC',\n  SessionValidatorsVariancePopulationIsBestAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_BEST_ASC',\n  SessionValidatorsVariancePopulationIsBestDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_BEST_DESC',\n  SessionValidatorsVariancePopulationIsNextAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_NEXT_ASC',\n  SessionValidatorsVariancePopulationIsNextBestAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_NEXT_BEST_ASC',\n  SessionValidatorsVariancePopulationIsNextBestDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_NEXT_BEST_DESC',\n  SessionValidatorsVariancePopulationIsNextDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_IS_NEXT_DESC',\n  SessionValidatorsVariancePopulationNextBestOrderAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsVariancePopulationNextBestOrderDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsVariancePopulationReputationAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_REPUTATION_ASC',\n  SessionValidatorsVariancePopulationReputationDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_REPUTATION_DESC',\n  SessionValidatorsVariancePopulationSessionIdAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_SESSION_ID_ASC',\n  SessionValidatorsVariancePopulationSessionIdDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_SESSION_ID_DESC',\n  SessionValidatorsVariancePopulationValidatorIdAsc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_VALIDATOR_ID_ASC',\n  SessionValidatorsVariancePopulationValidatorIdDesc = 'SESSION_VALIDATORS_VARIANCE_POPULATION_VALIDATOR_ID_DESC',\n  SessionValidatorsVarianceSampleBestOrderAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_BEST_ORDER_ASC',\n  SessionValidatorsVarianceSampleBestOrderDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_BEST_ORDER_DESC',\n  SessionValidatorsVarianceSampleIdAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_ID_ASC',\n  SessionValidatorsVarianceSampleIdDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_ID_DESC',\n  SessionValidatorsVarianceSampleIsBestAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_BEST_ASC',\n  SessionValidatorsVarianceSampleIsBestDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_BEST_DESC',\n  SessionValidatorsVarianceSampleIsNextAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_NEXT_ASC',\n  SessionValidatorsVarianceSampleIsNextBestAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_NEXT_BEST_ASC',\n  SessionValidatorsVarianceSampleIsNextBestDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_NEXT_BEST_DESC',\n  SessionValidatorsVarianceSampleIsNextDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_IS_NEXT_DESC',\n  SessionValidatorsVarianceSampleNextBestOrderAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_NEXT_BEST_ORDER_ASC',\n  SessionValidatorsVarianceSampleNextBestOrderDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_NEXT_BEST_ORDER_DESC',\n  SessionValidatorsVarianceSampleReputationAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_REPUTATION_ASC',\n  SessionValidatorsVarianceSampleReputationDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_REPUTATION_DESC',\n  SessionValidatorsVarianceSampleSessionIdAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_SESSION_ID_ASC',\n  SessionValidatorsVarianceSampleSessionIdDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_SESSION_ID_DESC',\n  SessionValidatorsVarianceSampleValidatorIdAsc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_VALIDATOR_ID_ASC',\n  SessionValidatorsVarianceSampleValidatorIdDesc = 'SESSION_VALIDATORS_VARIANCE_SAMPLE_VALIDATOR_ID_DESC',\n}\n\nexport enum VoteStatus {\n  Abstain = 'ABSTAIN',\n  Against = 'AGAINST',\n  For = 'FOR',\n}\n\n/** A filter to be used against VoteStatus fields. All fields are combined with a logical ‘and.’ */\nexport type VoteStatusFilter = {\n  /** Not equal to the specified value, treating null like an ordinary value. */\n  distinctFrom?: InputMaybe<VoteStatus>;\n  /** Equal to the specified value. */\n  equalTo?: InputMaybe<VoteStatus>;\n  /** Greater than the specified value. */\n  greaterThan?: InputMaybe<VoteStatus>;\n  /** Greater than or equal to the specified value. */\n  greaterThanOrEqualTo?: InputMaybe<VoteStatus>;\n  /** Included in the specified list. */\n  in?: InputMaybe<Array<VoteStatus>>;\n  /** Is null (if `true` is specified) or is not null (if `false` is specified). */\n  isNull?: InputMaybe<Scalars['Boolean']>;\n  /** Less than the specified value. */\n  lessThan?: InputMaybe<VoteStatus>;\n  /** Less than or equal to the specified value. */\n  lessThanOrEqualTo?: InputMaybe<VoteStatus>;\n  /** Equal to the specified value, treating null like an ordinary value. */\n  notDistinctFrom?: InputMaybe<VoteStatus>;\n  /** Not equal to the specified value. */\n  notEqualTo?: InputMaybe<VoteStatus>;\n  /** Not included in the specified list. */\n  notIn?: InputMaybe<Array<VoteStatus>>;\n};\n\nexport type _Metadata = {\n  __typename?: '_Metadata';\n  chain?: Maybe<Scalars['String']>;\n  dynamicDatasources?: Maybe<Scalars['String']>;\n  genesisHash?: Maybe<Scalars['String']>;\n  indexerHealthy?: Maybe<Scalars['Boolean']>;\n  indexerNodeVersion?: Maybe<Scalars['String']>;\n  lastProcessedHeight?: Maybe<Scalars['Int']>;\n  lastProcessedTimestamp?: Maybe<Scalars['Date']>;\n  queryNodeVersion?: Maybe<Scalars['String']>;\n  rowCountEstimate?: Maybe<Array<Maybe<TableEstimate>>>;\n  specName?: Maybe<Scalars['String']>;\n  targetHeight?: Maybe<Scalars['Int']>;\n};\n\nexport type ValidatorListingQueryVariables = Exact<{\n  sessionId: Scalars['String'];\n  perPage: Scalars['Int'];\n  offset: Scalars['Int'];\n}>;\n\nexport type ValidatorListingQuery = {\n  __typename?: 'Query';\n  validators?: {\n    __typename?: 'ValidatorsConnection';\n    totalCount: number;\n    nodes: Array<{\n      __typename?: 'Validator';\n      authorityId: string;\n      id: string;\n      sessionValidators: {\n        __typename?: 'SessionValidatorsConnection';\n        edges: Array<{\n          __typename?: 'SessionValidatorsEdge';\n          node?: {\n            __typename?: 'SessionValidator';\n            id: string;\n            sessionId: string;\n            reputation: string;\n            isBest: boolean;\n            isNext: boolean;\n            isNextBest: boolean;\n            bestOrder: number;\n            nextBestOrder: number;\n            validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n          } | null;\n        }>;\n      };\n    } | null>;\n    pageInfo: {\n      __typename?: 'PageInfo';\n      endCursor?: any | null;\n      hasNextPage: boolean;\n      hasPreviousPage: boolean;\n      startCursor?: any | null;\n    };\n  } | null;\n};\n\nexport type ValidatorSessionsQueryVariables = Exact<{\n  keyGen?: InputMaybe<Scalars['Boolean']>;\n  validatorId: Scalars['String'];\n  perPage: Scalars['Int'];\n  offset: Scalars['Int'];\n}>;\n\nexport type ValidatorSessionsQuery = {\n  __typename?: 'Query';\n  sessionValidators?: {\n    __typename?: 'SessionValidatorsConnection';\n    totalCount: number;\n    nodes: Array<{\n      __typename?: 'SessionValidator';\n      validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n      session?: {\n        __typename?: 'Session';\n        id: string;\n        publicKey?: {\n          __typename?: 'PublicKey';\n          id: string;\n          compressed?: string | null;\n          uncompressed?: string | null;\n          block?: { __typename?: 'Block'; id: string; number: any } | null;\n        } | null;\n        sessionValidators: {\n          __typename?: 'SessionValidatorsConnection';\n          totalCount: number;\n          edges: Array<{\n            __typename?: 'SessionValidatorsEdge';\n            node?: {\n              __typename?: 'SessionValidator';\n              id: string;\n              sessionId: string;\n              reputation: string;\n              isBest: boolean;\n              isNext: boolean;\n              isNextBest: boolean;\n              bestOrder: number;\n              nextBestOrder: number;\n              validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n            } | null;\n          }>;\n        };\n      } | null;\n    } | null>;\n    pageInfo: {\n      __typename?: 'PageInfo';\n      endCursor?: any | null;\n      hasNextPage: boolean;\n      hasPreviousPage: boolean;\n      startCursor?: any | null;\n    };\n  } | null;\n};\n\nexport type ValidatorOfSessionQueryVariables = Exact<{\n  validatorId: Scalars['String'];\n  sessionValidatorId: Scalars['String'];\n}>;\n\nexport type ValidatorOfSessionQuery = {\n  __typename?: 'Query';\n  sessionValidator?: {\n    __typename?: 'SessionValidator';\n    id: string;\n    sessionId: string;\n    reputation: string;\n    isBest: boolean;\n    isNext: boolean;\n    isNextBest: boolean;\n    bestOrder: number;\n    nextBestOrder: number;\n    session?: { __typename?: 'Session'; keyGenThreshold?: any | null } | null;\n    validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n  } | null;\n  sessionValidators?: {\n    __typename?: 'SessionValidatorsConnection';\n    aggregates?: {\n      __typename?: 'SessionValidatorAggregates';\n      distinctCount?: { __typename?: 'SessionValidatorDistinctCountAggregates'; id?: any | null } | null;\n    } | null;\n  } | null;\n};\n\nexport type ValidatorMetaFragment = { __typename?: 'Validator'; authorityId: string; id: string };\n\nexport type PageInfoMetaFragment = {\n  __typename?: 'PageInfo';\n  endCursor?: any | null;\n  hasNextPage: boolean;\n  hasPreviousPage: boolean;\n  startCursor?: any | null;\n};\n\nexport type SessionAuthValidatorNodeFragment = {\n  __typename?: 'SessionValidator';\n  id: string;\n  sessionId: string;\n  reputation: string;\n  isBest: boolean;\n  isNext: boolean;\n  isNextBest: boolean;\n  bestOrder: number;\n  nextBestOrder: number;\n  validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n};\n\nexport type SessionAuthValidatorFragment = {\n  __typename?: 'SessionValidatorsConnection';\n  edges: Array<{\n    __typename?: 'SessionValidatorsEdge';\n    node?: {\n      __typename?: 'SessionValidator';\n      id: string;\n      sessionId: string;\n      reputation: string;\n      isBest: boolean;\n      isNext: boolean;\n      isNextBest: boolean;\n      bestOrder: number;\n      nextBestOrder: number;\n      validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n    } | null;\n  }>;\n};\n\nexport type SessionAuthFragment = {\n  __typename?: 'Session';\n  sessionValidators: {\n    __typename?: 'SessionValidatorsConnection';\n    edges: Array<{\n      __typename?: 'SessionValidatorsEdge';\n      node?: {\n        __typename?: 'SessionValidator';\n        id: string;\n        sessionId: string;\n        reputation: string;\n        isBest: boolean;\n        isNext: boolean;\n        isNextBest: boolean;\n        bestOrder: number;\n        nextBestOrder: number;\n        validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n      } | null;\n    }>;\n  };\n};\n\nexport type ProposalListViewFragment = {\n  __typename?: 'ProposalItem';\n  id: string;\n  data: string;\n  signature?: string | null;\n  type: ProposalType;\n  status: string;\n  chainId?: number | null;\n  proposalVotesByProposalId: {\n    __typename?: 'ProposalVotesConnection';\n    totalCount: number;\n    nodes: Array<{\n      __typename?: 'ProposalVote';\n      id: string;\n      voterId: string;\n      voter?: { __typename?: 'Proposer'; id: string } | null;\n    } | null>;\n  };\n  block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n};\n\nexport type ProposalsVoteListViewFragment = {\n  __typename?: 'ProposalVote';\n  id: string;\n  voterId: string;\n  voteStatus: VoteStatus;\n  txHash: string;\n  block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n};\n\nexport type MetaDataQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type MetaDataQuery = {\n  __typename?: 'Query';\n  _metadata?: { __typename?: '_Metadata'; targetHeight?: number | null; lastProcessedHeight?: number | null } | null;\n};\n\nexport type LastBlockQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type LastBlockQuery = {\n  __typename?: 'Query';\n  blocks?: {\n    __typename?: 'BlocksConnection';\n    nodes: Array<{ __typename?: 'Block'; timestamp?: any | null; number: any } | null>;\n  } | null;\n};\n\nexport type ProposalCounterQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type ProposalCounterQuery = {\n  __typename?: 'Query';\n  proposalCounters?: {\n    __typename?: 'ProposalCountersConnection';\n    nodes: Array<{\n      __typename?: 'ProposalCounter';\n      id: string;\n      blockNumber: number;\n      unSignedProposalsCount: number;\n      signedProposalsCount: number;\n      statusMap?: any | null;\n      unSignedProposalsMap?: any | null;\n      signedProposalsMap?: any | null;\n    } | null>;\n  } | null;\n};\n\nexport type ProposalsQueryVariables = Exact<{\n  perPage: Scalars['Int'];\n  offset: Scalars['Int'];\n}>;\n\nexport type ProposalsQuery = {\n  __typename?: 'Query';\n  proposalItems?: {\n    __typename?: 'ProposalItemsConnection';\n    totalCount: number;\n    nodes: Array<{\n      __typename?: 'ProposalItem';\n      id: string;\n      data: string;\n      signature?: string | null;\n      type: ProposalType;\n      status: string;\n      chainId?: number | null;\n      proposalVotesByProposalId: {\n        __typename?: 'ProposalVotesConnection';\n        totalCount: number;\n        nodes: Array<{\n          __typename?: 'ProposalVote';\n          id: string;\n          voterId: string;\n          voter?: { __typename?: 'Proposer'; id: string } | null;\n        } | null>;\n      };\n      block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n    } | null>;\n    pageInfo: {\n      __typename?: 'PageInfo';\n      endCursor?: any | null;\n      hasNextPage: boolean;\n      hasPreviousPage: boolean;\n      startCursor?: any | null;\n    };\n  } | null;\n};\n\nexport type ProposalsCounterQueryVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\nexport type ProposalsCounterQuery = {\n  __typename?: 'Query';\n  proposalCounter?: {\n    __typename?: 'ProposalCounter';\n    id: string;\n    signedProposalsMap?: any | null;\n    unSignedProposalsMap?: any | null;\n    signedProposalsCount: number;\n    unSignedProposalsCount: number;\n    statusMap?: any | null;\n    block?: { __typename?: 'Block'; number: any; timestamp?: any | null } | null;\n  } | null;\n};\n\nexport type ProposalsOverviewQueryVariables = Exact<{\n  startRange?: InputMaybe<BigFloatFilter>;\n  endRange?: InputMaybe<BigFloatFilter>;\n  sessionId: Scalars['String'];\n}>;\n\nexport type ProposalsOverviewQuery = {\n  __typename?: 'Query';\n  session?: {\n    __typename?: 'Session';\n    id: string;\n    proposerThreshold?: any | null;\n    sessionProposers: { __typename?: 'SessionProposersConnection'; totalCount: number };\n    sessionValidators: { __typename?: 'SessionValidatorsConnection'; totalCount: number };\n  } | null;\n  openProposals?: {\n    __typename?: 'ProposalItemsConnection';\n    totalCount: number;\n    nodes: Array<{\n      __typename?: 'ProposalItem';\n      id: string;\n      data: string;\n      signature?: string | null;\n      type: ProposalType;\n      status: string;\n      chainId?: number | null;\n      proposalVotesByProposalId: {\n        __typename?: 'ProposalVotesConnection';\n        totalCount: number;\n        nodes: Array<{\n          __typename?: 'ProposalVote';\n          id: string;\n          voterId: string;\n          voter?: { __typename?: 'Proposer'; id: string } | null;\n        } | null>;\n      };\n      block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n    } | null>;\n    pageInfo: {\n      __typename?: 'PageInfo';\n      endCursor?: any | null;\n      hasNextPage: boolean;\n      hasPreviousPage: boolean;\n      startCursor?: any | null;\n    };\n  } | null;\n  open?: { __typename?: 'ProposalTimelineStatusesConnection'; totalCount: number } | null;\n  signed?: { __typename?: 'ProposalTimelineStatusesConnection'; totalCount: number } | null;\n  reject?: { __typename?: 'ProposalTimelineStatusesConnection'; totalCount: number } | null;\n  accepted?: { __typename?: 'ProposalTimelineStatusesConnection'; totalCount: number } | null;\n};\n\nexport type ProposalVotesQueryVariables = Exact<{\n  perPage: Scalars['Int'];\n  offset: Scalars['Int'];\n  proposalId: Scalars['String'];\n  for?: InputMaybe<VoteStatusFilter>;\n}>;\n\nexport type ProposalVotesQuery = {\n  __typename?: 'Query';\n  proposalVotes?: {\n    __typename?: 'ProposalVotesConnection';\n    totalCount: number;\n    nodes: Array<{\n      __typename?: 'ProposalVote';\n      id: string;\n      voterId: string;\n      voteStatus: VoteStatus;\n      txHash: string;\n      block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n    } | null>;\n    pageInfo: {\n      __typename?: 'PageInfo';\n      endCursor?: any | null;\n      hasNextPage: boolean;\n      hasPreviousPage: boolean;\n      startCursor?: any | null;\n    };\n  } | null;\n};\n\nexport type ProposalDetailsQueryVariables = Exact<{\n  id: Scalars['String'];\n  targetSessionId: Scalars['String'];\n}>;\n\nexport type ProposalDetailsQuery = {\n  __typename?: 'Query';\n  session?: {\n    __typename?: 'Session';\n    id: string;\n    sessionProposers: { __typename?: 'SessionProposersConnection'; totalCount: number };\n  } | null;\n  proposalItem?: {\n    __typename?: 'ProposalItem';\n    id: string;\n    data: string;\n    signature?: string | null;\n    type: ProposalType;\n    status: string;\n    chainId?: number | null;\n    proposalTimelineStatuses: {\n      __typename?: 'ProposalTimelineStatusesConnection';\n      nodes: Array<{\n        __typename?: 'ProposalTimelineStatus';\n        id: string;\n        status: ProposalStatus;\n        blockNumber: any;\n        timestamp: any;\n      } | null>;\n    };\n    votesFor: { __typename?: 'ProposalVotesConnection'; totalCount: number };\n    against: { __typename?: 'ProposalVotesConnection'; totalCount: number };\n    abstain: { __typename?: 'ProposalVotesConnection'; totalCount: number };\n    totalVotes: { __typename?: 'ProposalVotesConnection'; totalCount: number };\n    block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n  } | null;\n};\n\nexport type EnsureProposalsQueryVariables = Exact<{\n  ids: Array<Scalars['String']> | Scalars['String'];\n}>;\n\nexport type EnsureProposalsQuery = {\n  __typename?: 'Query';\n  proposalItems?: {\n    __typename?: 'ProposalItemsConnection';\n    nodes: Array<{ __typename?: 'ProposalItem'; id: string } | null>;\n  } | null;\n};\n\nexport type PublicKeysQueryVariables = Exact<{\n  PerPage?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n}>;\n\nexport type PublicKeysQuery = {\n  __typename?: 'Query';\n  publicKeys?: {\n    __typename?: 'PublicKeysConnection';\n    totalCount: number;\n    nodes: Array<{\n      __typename?: 'PublicKey';\n      id: string;\n      compressed?: string | null;\n      uncompressed?: string | null;\n      history: any;\n      block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n      sessions: {\n        __typename?: 'SessionsConnection';\n        nodes: Array<{\n          __typename?: 'Session';\n          id: string;\n          keyGenThreshold?: any | null;\n          signatureThreshold?: any | null;\n          block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n          sessionValidators: {\n            __typename?: 'SessionValidatorsConnection';\n            edges: Array<{\n              __typename?: 'SessionValidatorsEdge';\n              node?: {\n                __typename?: 'SessionValidator';\n                id: string;\n                sessionId: string;\n                reputation: string;\n                isBest: boolean;\n                isNext: boolean;\n                isNextBest: boolean;\n                bestOrder: number;\n                nextBestOrder: number;\n                validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n              } | null;\n            }>;\n          };\n        } | null>;\n      };\n    } | null>;\n    pageInfo: {\n      __typename?: 'PageInfo';\n      hasNextPage: boolean;\n      hasPreviousPage: boolean;\n      startCursor?: any | null;\n      endCursor?: any | null;\n    };\n  } | null;\n};\n\nexport type PublicKeyQueryVariables = Exact<{\n  id: Scalars['String'];\n}>;\n\nexport type PublicKeyQuery = {\n  __typename?: 'Query';\n  publicKey?: {\n    __typename?: 'PublicKey';\n    id: string;\n    compressed?: string | null;\n    uncompressed?: string | null;\n    history: any;\n    block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n    sessions: {\n      __typename?: 'SessionsConnection';\n      nodes: Array<{\n        __typename?: 'Session';\n        id: string;\n        keyGenThreshold?: any | null;\n        signatureThreshold?: any | null;\n        block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n        sessionValidators: {\n          __typename?: 'SessionValidatorsConnection';\n          edges: Array<{\n            __typename?: 'SessionValidatorsEdge';\n            node?: {\n              __typename?: 'SessionValidator';\n              id: string;\n              sessionId: string;\n              reputation: string;\n              isBest: boolean;\n              isNext: boolean;\n              isNextBest: boolean;\n              bestOrder: number;\n              nextBestOrder: number;\n              validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n            } | null;\n          }>;\n        };\n      } | null>;\n    };\n  } | null;\n};\n\nexport type SessionKeyIdsQueryVariables = Exact<{\n  keys: Array<Scalars['String']> | Scalars['String'];\n}>;\n\nexport type SessionKeyIdsQuery = {\n  __typename?: 'Query';\n  sessions?: {\n    __typename?: 'SessionsConnection';\n    nodes: Array<{\n      __typename?: 'Session';\n      id: string;\n      publicKey?: { __typename?: 'PublicKey'; id: string } | null;\n    } | null>;\n  } | null;\n};\n\nexport type CurrentSessionAuthoritiesQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type CurrentSessionAuthoritiesQuery = {\n  __typename?: 'Query';\n  sessions?: {\n    __typename?: 'SessionsConnection';\n    nodes: Array<{\n      __typename?: 'Session';\n      id: string;\n      blockId: string;\n      signatureThreshold?: any | null;\n      keyGenThreshold?: any | null;\n      proposerThreshold?: any | null;\n      publicKey?: { __typename?: 'PublicKey'; compressed?: string | null } | null;\n      block?: { __typename?: 'Block'; id: string; timestamp?: any | null } | null;\n      sessionValidators: {\n        __typename?: 'SessionValidatorsConnection';\n        edges: Array<{\n          __typename?: 'SessionValidatorsEdge';\n          node?: {\n            __typename?: 'SessionValidator';\n            id: string;\n            sessionId: string;\n            reputation: string;\n            isBest: boolean;\n            isNext: boolean;\n            isNextBest: boolean;\n            bestOrder: number;\n            nextBestOrder: number;\n            validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n          } | null;\n        }>;\n      };\n    } | null>;\n  } | null;\n};\n\nexport type SessionKeysQueryVariables = Exact<{\n  SessionId: Array<Scalars['String']> | Scalars['String'];\n}>;\n\nexport type SessionKeysQuery = {\n  __typename?: 'Query';\n  sessions?: {\n    __typename?: 'SessionsConnection';\n    nodes: Array<{\n      __typename?: 'Session';\n      id: string;\n      block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n      publicKey?: {\n        __typename?: 'PublicKey';\n        id: string;\n        compressed?: string | null;\n        uncompressed?: string | null;\n        block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n      } | null;\n      sessionValidators: {\n        __typename?: 'SessionValidatorsConnection';\n        edges: Array<{\n          __typename?: 'SessionValidatorsEdge';\n          node?: {\n            __typename?: 'SessionValidator';\n            id: string;\n            sessionId: string;\n            reputation: string;\n            isBest: boolean;\n            isNext: boolean;\n            isNextBest: boolean;\n            bestOrder: number;\n            nextBestOrder: number;\n            validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n          } | null;\n        }>;\n      };\n    } | null>;\n  } | null;\n};\n\nexport type SessionThresholdHistoryQueryVariables = Exact<{\n  offset: Scalars['Int'];\n  perPage: Scalars['Int'];\n}>;\n\nexport type SessionThresholdHistoryQuery = {\n  __typename?: 'Query';\n  sessions?: {\n    __typename?: 'SessionsConnection';\n    totalCount: number;\n    nodes: Array<{\n      __typename?: 'Session';\n      id: string;\n      signatureThreshold?: any | null;\n      keyGenThreshold?: any | null;\n      block?: { __typename?: 'Block'; id: string; timestamp?: any | null } | null;\n    } | null>;\n    pageInfo: {\n      __typename?: 'PageInfo';\n      endCursor?: any | null;\n      hasNextPage: boolean;\n      hasPreviousPage: boolean;\n      startCursor?: any | null;\n    };\n  } | null;\n};\n\nexport type SessionThresholdsQueryVariables = Exact<{\n  sessionId: Scalars['String'];\n}>;\n\nexport type SessionThresholdsQuery = {\n  __typename?: 'Query';\n  session?: {\n    __typename?: 'Session';\n    id: string;\n    signatureThreshold?: any | null;\n    keyGenThreshold?: any | null;\n    proposersCount: { __typename?: 'SessionProposersConnection'; totalCount: number };\n    block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n    publicKey?: {\n      __typename?: 'PublicKey';\n      id: string;\n      compressed?: string | null;\n      uncompressed?: string | null;\n      block?: { __typename?: 'Block'; timestamp?: any | null; number: any } | null;\n    } | null;\n    sessionValidators: {\n      __typename?: 'SessionValidatorsConnection';\n      edges: Array<{\n        __typename?: 'SessionValidatorsEdge';\n        node?: {\n          __typename?: 'SessionValidator';\n          id: string;\n          sessionId: string;\n          reputation: string;\n          isBest: boolean;\n          isNext: boolean;\n          isNextBest: boolean;\n          bestOrder: number;\n          nextBestOrder: number;\n          validator?: { __typename?: 'Validator'; authorityId: string; id: string } | null;\n        } | null;\n      }>;\n    };\n  } | null;\n};\n\nexport const PageInfoMetaFragmentDoc = gql`\n  fragment PageInfoMeta on PageInfo {\n    endCursor\n    hasNextPage\n    hasPreviousPage\n    startCursor\n  }\n`;\nexport const ValidatorMetaFragmentDoc = gql`\n  fragment ValidatorMeta on Validator {\n    authorityId\n    id\n  }\n`;\nexport const SessionAuthValidatorNodeFragmentDoc = gql`\n  fragment SessionAuthValidatorNode on SessionValidator {\n    id\n    sessionId\n    validator {\n      ...ValidatorMeta\n    }\n    reputation\n    isBest\n    isNext\n    isNextBest\n    bestOrder\n    nextBestOrder\n  }\n  ${ValidatorMetaFragmentDoc}\n`;\nexport const SessionAuthValidatorFragmentDoc = gql`\n  fragment SessionAuthValidator on SessionValidatorsConnection {\n    edges {\n      node {\n        ...SessionAuthValidatorNode\n      }\n    }\n  }\n  ${SessionAuthValidatorNodeFragmentDoc}\n`;\nexport const SessionAuthFragmentDoc = gql`\n  fragment SessionAuth on Session {\n    sessionValidators {\n      ...SessionAuthValidator\n    }\n  }\n  ${SessionAuthValidatorFragmentDoc}\n`;\nexport const ProposalListViewFragmentDoc = gql`\n  fragment ProposalListView on ProposalItem {\n    id\n    data\n    signature\n    type\n    status\n    chainId\n    proposalVotesByProposalId(orderBy: [BLOCK_NUMBER_DESC], first: 3) {\n      nodes {\n        id\n        voterId\n        voter {\n          id\n        }\n      }\n      totalCount\n    }\n    block {\n      timestamp\n      number\n    }\n  }\n`;\nexport const ProposalsVoteListViewFragmentDoc = gql`\n  fragment ProposalsVoteListView on ProposalVote {\n    id\n    voterId\n    voteStatus\n    txHash: voterId\n    block {\n      timestamp\n      number\n    }\n  }\n`;\nexport const ValidatorListingDocument = gql`\n  query ValidatorListing($sessionId: String!, $perPage: Int!, $offset: Int!) {\n    validators(offset: $offset, first: $perPage) {\n      nodes {\n        ...ValidatorMeta\n        sessionValidators(first: 1, filter: { sessionId: { equalTo: $sessionId } }) {\n          ...SessionAuthValidator\n        }\n      }\n      totalCount\n      pageInfo {\n        ...PageInfoMeta\n      }\n    }\n  }\n  ${ValidatorMetaFragmentDoc}\n  ${SessionAuthValidatorFragmentDoc}\n  ${PageInfoMetaFragmentDoc}\n`;\n\n/**\n * __useValidatorListingQuery__\n *\n * To run a query within a React component, call `useValidatorListingQuery` and pass it any options that fit your needs.\n * When your component renders, `useValidatorListingQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useValidatorListingQuery({\n *   variables: {\n *      sessionId: // value for 'sessionId'\n *      perPage: // value for 'perPage'\n *      offset: // value for 'offset'\n *   },\n * });\n */\nexport function useValidatorListingQuery(\n  baseOptions: Apollo.QueryHookOptions<ValidatorListingQuery, ValidatorListingQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ValidatorListingQuery, ValidatorListingQueryVariables>(ValidatorListingDocument, options);\n}\nexport function useValidatorListingLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ValidatorListingQuery, ValidatorListingQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ValidatorListingQuery, ValidatorListingQueryVariables>(ValidatorListingDocument, options);\n}\nexport type ValidatorListingQueryHookResult = ReturnType<typeof useValidatorListingQuery>;\nexport type ValidatorListingLazyQueryHookResult = ReturnType<typeof useValidatorListingLazyQuery>;\nexport type ValidatorListingQueryResult = Apollo.QueryResult<ValidatorListingQuery, ValidatorListingQueryVariables>;\nexport const ValidatorSessionsDocument = gql`\n  query ValidatorSessions($keyGen: Boolean, $validatorId: String!, $perPage: Int!, $offset: Int!) {\n    sessionValidators(\n      filter: { isBest: { equalTo: $keyGen }, validatorId: { equalTo: $validatorId } }\n      offset: $offset\n      first: $perPage\n    ) {\n      nodes {\n        validator {\n          ...ValidatorMeta\n        }\n        session {\n          id\n          publicKey {\n            id\n            compressed\n            uncompressed\n            block {\n              id\n              number\n            }\n          }\n          sessionValidators(first: 3) {\n            ...SessionAuthValidator\n            totalCount\n          }\n        }\n      }\n      totalCount\n      pageInfo {\n        ...PageInfoMeta\n      }\n    }\n  }\n  ${ValidatorMetaFragmentDoc}\n  ${SessionAuthValidatorFragmentDoc}\n  ${PageInfoMetaFragmentDoc}\n`;\n\n/**\n * __useValidatorSessionsQuery__\n *\n * To run a query within a React component, call `useValidatorSessionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useValidatorSessionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useValidatorSessionsQuery({\n *   variables: {\n *      keyGen: // value for 'keyGen'\n *      validatorId: // value for 'validatorId'\n *      perPage: // value for 'perPage'\n *      offset: // value for 'offset'\n *   },\n * });\n */\nexport function useValidatorSessionsQuery(\n  baseOptions: Apollo.QueryHookOptions<ValidatorSessionsQuery, ValidatorSessionsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ValidatorSessionsQuery, ValidatorSessionsQueryVariables>(ValidatorSessionsDocument, options);\n}\nexport function useValidatorSessionsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ValidatorSessionsQuery, ValidatorSessionsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ValidatorSessionsQuery, ValidatorSessionsQueryVariables>(\n    ValidatorSessionsDocument,\n    options\n  );\n}\nexport type ValidatorSessionsQueryHookResult = ReturnType<typeof useValidatorSessionsQuery>;\nexport type ValidatorSessionsLazyQueryHookResult = ReturnType<typeof useValidatorSessionsLazyQuery>;\nexport type ValidatorSessionsQueryResult = Apollo.QueryResult<ValidatorSessionsQuery, ValidatorSessionsQueryVariables>;\nexport const ValidatorOfSessionDocument = gql`\n  query ValidatorOfSession($validatorId: String!, $sessionValidatorId: String!) {\n    sessionValidator(id: $sessionValidatorId) {\n      ...SessionAuthValidatorNode\n      session {\n        keyGenThreshold\n      }\n    }\n    sessionValidators(filter: { validatorId: { equalTo: $validatorId }, isBest: { equalTo: true } }) {\n      aggregates {\n        distinctCount {\n          id\n        }\n      }\n    }\n  }\n  ${SessionAuthValidatorNodeFragmentDoc}\n`;\n\n/**\n * __useValidatorOfSessionQuery__\n *\n * To run a query within a React component, call `useValidatorOfSessionQuery` and pass it any options that fit your needs.\n * When your component renders, `useValidatorOfSessionQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useValidatorOfSessionQuery({\n *   variables: {\n *      validatorId: // value for 'validatorId'\n *      sessionValidatorId: // value for 'sessionValidatorId'\n *   },\n * });\n */\nexport function useValidatorOfSessionQuery(\n  baseOptions: Apollo.QueryHookOptions<ValidatorOfSessionQuery, ValidatorOfSessionQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ValidatorOfSessionQuery, ValidatorOfSessionQueryVariables>(\n    ValidatorOfSessionDocument,\n    options\n  );\n}\nexport function useValidatorOfSessionLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ValidatorOfSessionQuery, ValidatorOfSessionQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ValidatorOfSessionQuery, ValidatorOfSessionQueryVariables>(\n    ValidatorOfSessionDocument,\n    options\n  );\n}\nexport type ValidatorOfSessionQueryHookResult = ReturnType<typeof useValidatorOfSessionQuery>;\nexport type ValidatorOfSessionLazyQueryHookResult = ReturnType<typeof useValidatorOfSessionLazyQuery>;\nexport type ValidatorOfSessionQueryResult = Apollo.QueryResult<\n  ValidatorOfSessionQuery,\n  ValidatorOfSessionQueryVariables\n>;\nexport const MetaDataDocument = gql`\n  query MetaData {\n    _metadata {\n      targetHeight\n      lastProcessedHeight\n    }\n  }\n`;\n\n/**\n * __useMetaDataQuery__\n *\n * To run a query within a React component, call `useMetaDataQuery` and pass it any options that fit your needs.\n * When your component renders, `useMetaDataQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useMetaDataQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useMetaDataQuery(baseOptions?: Apollo.QueryHookOptions<MetaDataQuery, MetaDataQueryVariables>) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<MetaDataQuery, MetaDataQueryVariables>(MetaDataDocument, options);\n}\nexport function useMetaDataLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MetaDataQuery, MetaDataQueryVariables>) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<MetaDataQuery, MetaDataQueryVariables>(MetaDataDocument, options);\n}\nexport type MetaDataQueryHookResult = ReturnType<typeof useMetaDataQuery>;\nexport type MetaDataLazyQueryHookResult = ReturnType<typeof useMetaDataLazyQuery>;\nexport type MetaDataQueryResult = Apollo.QueryResult<MetaDataQuery, MetaDataQueryVariables>;\nexport const LastBlockDocument = gql`\n  query LastBlock {\n    blocks(first: 1, filter: { timestamp: { isNull: false } }, orderBy: [NUMBER_DESC]) {\n      nodes {\n        timestamp\n        number\n      }\n    }\n  }\n`;\n\n/**\n * __useLastBlockQuery__\n *\n * To run a query within a React component, call `useLastBlockQuery` and pass it any options that fit your needs.\n * When your component renders, `useLastBlockQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLastBlockQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useLastBlockQuery(baseOptions?: Apollo.QueryHookOptions<LastBlockQuery, LastBlockQueryVariables>) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<LastBlockQuery, LastBlockQueryVariables>(LastBlockDocument, options);\n}\nexport function useLastBlockLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<LastBlockQuery, LastBlockQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<LastBlockQuery, LastBlockQueryVariables>(LastBlockDocument, options);\n}\nexport type LastBlockQueryHookResult = ReturnType<typeof useLastBlockQuery>;\nexport type LastBlockLazyQueryHookResult = ReturnType<typeof useLastBlockLazyQuery>;\nexport type LastBlockQueryResult = Apollo.QueryResult<LastBlockQuery, LastBlockQueryVariables>;\nexport const ProposalCounterDocument = gql`\n  query ProposalCounter {\n    proposalCounters(first: 2, offset: 1, orderBy: [BLOCK_NUMBER_DESC]) {\n      nodes {\n        id\n        blockNumber\n        unSignedProposalsCount\n        signedProposalsCount\n        statusMap\n        unSignedProposalsMap\n        signedProposalsMap\n      }\n    }\n  }\n`;\n\n/**\n * __useProposalCounterQuery__\n *\n * To run a query within a React component, call `useProposalCounterQuery` and pass it any options that fit your needs.\n * When your component renders, `useProposalCounterQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useProposalCounterQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useProposalCounterQuery(\n  baseOptions?: Apollo.QueryHookOptions<ProposalCounterQuery, ProposalCounterQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ProposalCounterQuery, ProposalCounterQueryVariables>(ProposalCounterDocument, options);\n}\nexport function useProposalCounterLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ProposalCounterQuery, ProposalCounterQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ProposalCounterQuery, ProposalCounterQueryVariables>(ProposalCounterDocument, options);\n}\nexport type ProposalCounterQueryHookResult = ReturnType<typeof useProposalCounterQuery>;\nexport type ProposalCounterLazyQueryHookResult = ReturnType<typeof useProposalCounterLazyQuery>;\nexport type ProposalCounterQueryResult = Apollo.QueryResult<ProposalCounterQuery, ProposalCounterQueryVariables>;\nexport const ProposalsDocument = gql`\n  query Proposals($perPage: Int!, $offset: Int!) {\n    proposalItems(orderBy: [BLOCK_NUMBER_DESC], first: $perPage, offset: $offset) {\n      nodes {\n        ...ProposalListView\n      }\n      totalCount\n      pageInfo {\n        ...PageInfoMeta\n      }\n    }\n  }\n  ${ProposalListViewFragmentDoc}\n  ${PageInfoMetaFragmentDoc}\n`;\n\n/**\n * __useProposalsQuery__\n *\n * To run a query within a React component, call `useProposalsQuery` and pass it any options that fit your needs.\n * When your component renders, `useProposalsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useProposalsQuery({\n *   variables: {\n *      perPage: // value for 'perPage'\n *      offset: // value for 'offset'\n *   },\n * });\n */\nexport function useProposalsQuery(baseOptions: Apollo.QueryHookOptions<ProposalsQuery, ProposalsQueryVariables>) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ProposalsQuery, ProposalsQueryVariables>(ProposalsDocument, options);\n}\nexport function useProposalsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ProposalsQuery, ProposalsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ProposalsQuery, ProposalsQueryVariables>(ProposalsDocument, options);\n}\nexport type ProposalsQueryHookResult = ReturnType<typeof useProposalsQuery>;\nexport type ProposalsLazyQueryHookResult = ReturnType<typeof useProposalsLazyQuery>;\nexport type ProposalsQueryResult = Apollo.QueryResult<ProposalsQuery, ProposalsQueryVariables>;\nexport const ProposalsCounterDocument = gql`\n  query ProposalsCounter($id: String!) {\n    proposalCounter(id: $id) {\n      id\n      signedProposalsMap\n      unSignedProposalsMap\n      signedProposalsCount\n      unSignedProposalsCount\n      statusMap\n      block {\n        number\n        timestamp\n      }\n    }\n  }\n`;\n\n/**\n * __useProposalsCounterQuery__\n *\n * To run a query within a React component, call `useProposalsCounterQuery` and pass it any options that fit your needs.\n * When your component renders, `useProposalsCounterQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useProposalsCounterQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useProposalsCounterQuery(\n  baseOptions: Apollo.QueryHookOptions<ProposalsCounterQuery, ProposalsCounterQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ProposalsCounterQuery, ProposalsCounterQueryVariables>(ProposalsCounterDocument, options);\n}\nexport function useProposalsCounterLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ProposalsCounterQuery, ProposalsCounterQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ProposalsCounterQuery, ProposalsCounterQueryVariables>(ProposalsCounterDocument, options);\n}\nexport type ProposalsCounterQueryHookResult = ReturnType<typeof useProposalsCounterQuery>;\nexport type ProposalsCounterLazyQueryHookResult = ReturnType<typeof useProposalsCounterLazyQuery>;\nexport type ProposalsCounterQueryResult = Apollo.QueryResult<ProposalsCounterQuery, ProposalsCounterQueryVariables>;\nexport const ProposalsOverviewDocument = gql`\n  query ProposalsOverview($startRange: BigFloatFilter, $endRange: BigFloatFilter, $sessionId: String!) {\n    session(id: $sessionId) {\n      id\n      proposerThreshold\n      sessionProposers {\n        totalCount\n      }\n      sessionValidators {\n        totalCount\n      }\n    }\n    openProposals: proposalItems(filter: { status: { equalTo: \"Open\" } }, orderBy: [BLOCK_NUMBER_DESC], first: 10) {\n      nodes {\n        ...ProposalListView\n      }\n      pageInfo {\n        ...PageInfoMeta\n      }\n      totalCount\n    }\n    open: proposalTimelineStatuses(\n      filter: { status: { equalTo: Open }, and: [{ blockNumber: $startRange }, { blockNumber: $endRange }] }\n    ) {\n      totalCount\n    }\n    signed: proposalTimelineStatuses(\n      filter: { status: { equalTo: Signed }, and: [{ blockNumber: $startRange }, { blockNumber: $endRange }] }\n    ) {\n      totalCount\n    }\n    reject: proposalTimelineStatuses(\n      filter: { status: { equalTo: Rejected }, and: [{ blockNumber: $startRange }, { blockNumber: $endRange }] }\n    ) {\n      totalCount\n    }\n    accepted: proposalTimelineStatuses(\n      filter: { status: { equalTo: Accepted }, and: [{ blockNumber: $startRange }, { blockNumber: $endRange }] }\n    ) {\n      totalCount\n    }\n  }\n  ${ProposalListViewFragmentDoc}\n  ${PageInfoMetaFragmentDoc}\n`;\n\n/**\n * __useProposalsOverviewQuery__\n *\n * To run a query within a React component, call `useProposalsOverviewQuery` and pass it any options that fit your needs.\n * When your component renders, `useProposalsOverviewQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useProposalsOverviewQuery({\n *   variables: {\n *      startRange: // value for 'startRange'\n *      endRange: // value for 'endRange'\n *      sessionId: // value for 'sessionId'\n *   },\n * });\n */\nexport function useProposalsOverviewQuery(\n  baseOptions: Apollo.QueryHookOptions<ProposalsOverviewQuery, ProposalsOverviewQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ProposalsOverviewQuery, ProposalsOverviewQueryVariables>(ProposalsOverviewDocument, options);\n}\nexport function useProposalsOverviewLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ProposalsOverviewQuery, ProposalsOverviewQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ProposalsOverviewQuery, ProposalsOverviewQueryVariables>(\n    ProposalsOverviewDocument,\n    options\n  );\n}\nexport type ProposalsOverviewQueryHookResult = ReturnType<typeof useProposalsOverviewQuery>;\nexport type ProposalsOverviewLazyQueryHookResult = ReturnType<typeof useProposalsOverviewLazyQuery>;\nexport type ProposalsOverviewQueryResult = Apollo.QueryResult<ProposalsOverviewQuery, ProposalsOverviewQueryVariables>;\nexport const ProposalVotesDocument = gql`\n  query ProposalVotes($perPage: Int!, $offset: Int!, $proposalId: String!, $for: VoteStatusFilter) {\n    proposalVotes(\n      filter: { proposalId: { equalTo: $proposalId }, voteStatus: $for }\n      orderBy: [BLOCK_NUMBER_DESC]\n      first: $perPage\n      offset: $offset\n    ) {\n      nodes {\n        ...ProposalsVoteListView\n      }\n      totalCount\n      pageInfo {\n        ...PageInfoMeta\n      }\n    }\n  }\n  ${ProposalsVoteListViewFragmentDoc}\n  ${PageInfoMetaFragmentDoc}\n`;\n\n/**\n * __useProposalVotesQuery__\n *\n * To run a query within a React component, call `useProposalVotesQuery` and pass it any options that fit your needs.\n * When your component renders, `useProposalVotesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useProposalVotesQuery({\n *   variables: {\n *      perPage: // value for 'perPage'\n *      offset: // value for 'offset'\n *      proposalId: // value for 'proposalId'\n *      for: // value for 'for'\n *   },\n * });\n */\nexport function useProposalVotesQuery(\n  baseOptions: Apollo.QueryHookOptions<ProposalVotesQuery, ProposalVotesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ProposalVotesQuery, ProposalVotesQueryVariables>(ProposalVotesDocument, options);\n}\nexport function useProposalVotesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ProposalVotesQuery, ProposalVotesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ProposalVotesQuery, ProposalVotesQueryVariables>(ProposalVotesDocument, options);\n}\nexport type ProposalVotesQueryHookResult = ReturnType<typeof useProposalVotesQuery>;\nexport type ProposalVotesLazyQueryHookResult = ReturnType<typeof useProposalVotesLazyQuery>;\nexport type ProposalVotesQueryResult = Apollo.QueryResult<ProposalVotesQuery, ProposalVotesQueryVariables>;\nexport const ProposalDetailsDocument = gql`\n  query ProposalDetails($id: String!, $targetSessionId: String!) {\n    session(id: $targetSessionId) {\n      id\n      sessionProposers {\n        totalCount\n      }\n    }\n    proposalItem(id: $id) {\n      id\n      data\n      signature\n      type\n      status\n      chainId\n      proposalTimelineStatuses {\n        nodes {\n          id\n          status\n          blockNumber\n          timestamp\n        }\n      }\n      votesFor: proposalVotesByProposalId(filter: { voteStatus: { equalTo: FOR } }) {\n        totalCount\n      }\n      against: proposalVotesByProposalId(filter: { voteStatus: { equalTo: AGAINST } }) {\n        totalCount\n      }\n      abstain: proposalVotesByProposalId(filter: { voteStatus: { equalTo: ABSTAIN } }) {\n        totalCount\n      }\n      totalVotes: proposalVotesByProposalId {\n        totalCount\n      }\n      block {\n        timestamp\n        number\n      }\n    }\n  }\n`;\n\n/**\n * __useProposalDetailsQuery__\n *\n * To run a query within a React component, call `useProposalDetailsQuery` and pass it any options that fit your needs.\n * When your component renders, `useProposalDetailsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useProposalDetailsQuery({\n *   variables: {\n *      id: // value for 'id'\n *      targetSessionId: // value for 'targetSessionId'\n *   },\n * });\n */\nexport function useProposalDetailsQuery(\n  baseOptions: Apollo.QueryHookOptions<ProposalDetailsQuery, ProposalDetailsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<ProposalDetailsQuery, ProposalDetailsQueryVariables>(ProposalDetailsDocument, options);\n}\nexport function useProposalDetailsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<ProposalDetailsQuery, ProposalDetailsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<ProposalDetailsQuery, ProposalDetailsQueryVariables>(ProposalDetailsDocument, options);\n}\nexport type ProposalDetailsQueryHookResult = ReturnType<typeof useProposalDetailsQuery>;\nexport type ProposalDetailsLazyQueryHookResult = ReturnType<typeof useProposalDetailsLazyQuery>;\nexport type ProposalDetailsQueryResult = Apollo.QueryResult<ProposalDetailsQuery, ProposalDetailsQueryVariables>;\nexport const EnsureProposalsDocument = gql`\n  query ensureProposals($ids: [String!]!) {\n    proposalItems(filter: { id: { in: $ids } }) {\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * __useEnsureProposalsQuery__\n *\n * To run a query within a React component, call `useEnsureProposalsQuery` and pass it any options that fit your needs.\n * When your component renders, `useEnsureProposalsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useEnsureProposalsQuery({\n *   variables: {\n *      ids: // value for 'ids'\n *   },\n * });\n */\nexport function useEnsureProposalsQuery(\n  baseOptions: Apollo.QueryHookOptions<EnsureProposalsQuery, EnsureProposalsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<EnsureProposalsQuery, EnsureProposalsQueryVariables>(EnsureProposalsDocument, options);\n}\nexport function useEnsureProposalsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<EnsureProposalsQuery, EnsureProposalsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<EnsureProposalsQuery, EnsureProposalsQueryVariables>(EnsureProposalsDocument, options);\n}\nexport type EnsureProposalsQueryHookResult = ReturnType<typeof useEnsureProposalsQuery>;\nexport type EnsureProposalsLazyQueryHookResult = ReturnType<typeof useEnsureProposalsLazyQuery>;\nexport type EnsureProposalsQueryResult = Apollo.QueryResult<EnsureProposalsQuery, EnsureProposalsQueryVariables>;\nexport const PublicKeysDocument = gql`\n  query PublicKeys($PerPage: Int, $offset: Int) {\n    publicKeys(first: $PerPage, offset: $offset, orderBy: [SESSIONS_SUM_BLOCK_NUMBER_DESC]) {\n      nodes {\n        id\n        compressed\n        uncompressed\n        history\n        block {\n          timestamp\n          number\n        }\n        sessions(first: 1) {\n          nodes {\n            id\n            ...SessionAuth\n            keyGenThreshold\n            signatureThreshold\n            block {\n              timestamp\n              number\n            }\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      totalCount\n    }\n  }\n  ${SessionAuthFragmentDoc}\n`;\n\n/**\n * __usePublicKeysQuery__\n *\n * To run a query within a React component, call `usePublicKeysQuery` and pass it any options that fit your needs.\n * When your component renders, `usePublicKeysQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePublicKeysQuery({\n *   variables: {\n *      PerPage: // value for 'PerPage'\n *      offset: // value for 'offset'\n *   },\n * });\n */\nexport function usePublicKeysQuery(baseOptions?: Apollo.QueryHookOptions<PublicKeysQuery, PublicKeysQueryVariables>) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<PublicKeysQuery, PublicKeysQueryVariables>(PublicKeysDocument, options);\n}\nexport function usePublicKeysLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<PublicKeysQuery, PublicKeysQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<PublicKeysQuery, PublicKeysQueryVariables>(PublicKeysDocument, options);\n}\nexport type PublicKeysQueryHookResult = ReturnType<typeof usePublicKeysQuery>;\nexport type PublicKeysLazyQueryHookResult = ReturnType<typeof usePublicKeysLazyQuery>;\nexport type PublicKeysQueryResult = Apollo.QueryResult<PublicKeysQuery, PublicKeysQueryVariables>;\nexport const PublicKeyDocument = gql`\n  query PublicKey($id: String!) {\n    publicKey(id: $id) {\n      id\n      compressed\n      uncompressed\n      history\n      block {\n        timestamp\n        number\n      }\n      sessions(first: 1) {\n        nodes {\n          id\n          ...SessionAuth\n          keyGenThreshold\n          signatureThreshold\n          block {\n            timestamp\n            number\n          }\n        }\n      }\n    }\n  }\n  ${SessionAuthFragmentDoc}\n`;\n\n/**\n * __usePublicKeyQuery__\n *\n * To run a query within a React component, call `usePublicKeyQuery` and pass it any options that fit your needs.\n * When your component renders, `usePublicKeyQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = usePublicKeyQuery({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function usePublicKeyQuery(baseOptions: Apollo.QueryHookOptions<PublicKeyQuery, PublicKeyQueryVariables>) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<PublicKeyQuery, PublicKeyQueryVariables>(PublicKeyDocument, options);\n}\nexport function usePublicKeyLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<PublicKeyQuery, PublicKeyQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<PublicKeyQuery, PublicKeyQueryVariables>(PublicKeyDocument, options);\n}\nexport type PublicKeyQueryHookResult = ReturnType<typeof usePublicKeyQuery>;\nexport type PublicKeyLazyQueryHookResult = ReturnType<typeof usePublicKeyLazyQuery>;\nexport type PublicKeyQueryResult = Apollo.QueryResult<PublicKeyQuery, PublicKeyQueryVariables>;\nexport const SessionKeyIdsDocument = gql`\n  query SessionKeyIds($keys: [String!]!) {\n    sessions(filter: { id: { in: $keys } }) {\n      nodes {\n        id\n        publicKey {\n          id\n        }\n      }\n    }\n  }\n`;\n\n/**\n * __useSessionKeyIdsQuery__\n *\n * To run a query within a React component, call `useSessionKeyIdsQuery` and pass it any options that fit your needs.\n * When your component renders, `useSessionKeyIdsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSessionKeyIdsQuery({\n *   variables: {\n *      keys: // value for 'keys'\n *   },\n * });\n */\nexport function useSessionKeyIdsQuery(\n  baseOptions: Apollo.QueryHookOptions<SessionKeyIdsQuery, SessionKeyIdsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<SessionKeyIdsQuery, SessionKeyIdsQueryVariables>(SessionKeyIdsDocument, options);\n}\nexport function useSessionKeyIdsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<SessionKeyIdsQuery, SessionKeyIdsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<SessionKeyIdsQuery, SessionKeyIdsQueryVariables>(SessionKeyIdsDocument, options);\n}\nexport type SessionKeyIdsQueryHookResult = ReturnType<typeof useSessionKeyIdsQuery>;\nexport type SessionKeyIdsLazyQueryHookResult = ReturnType<typeof useSessionKeyIdsLazyQuery>;\nexport type SessionKeyIdsQueryResult = Apollo.QueryResult<SessionKeyIdsQuery, SessionKeyIdsQueryVariables>;\nexport const CurrentSessionAuthoritiesDocument = gql`\n  query CurrentSessionAuthorities {\n    sessions(first: 1, orderBy: [BLOCK_NUMBER_DESC]) {\n      nodes {\n        id\n        blockId\n        ...SessionAuth\n        publicKey {\n          compressed\n        }\n        signatureThreshold\n        keyGenThreshold\n        proposerThreshold\n        block {\n          id\n          timestamp\n        }\n      }\n    }\n  }\n  ${SessionAuthFragmentDoc}\n`;\n\n/**\n * __useCurrentSessionAuthoritiesQuery__\n *\n * To run a query within a React component, call `useCurrentSessionAuthoritiesQuery` and pass it any options that fit your needs.\n * When your component renders, `useCurrentSessionAuthoritiesQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCurrentSessionAuthoritiesQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCurrentSessionAuthoritiesQuery(\n  baseOptions?: Apollo.QueryHookOptions<CurrentSessionAuthoritiesQuery, CurrentSessionAuthoritiesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<CurrentSessionAuthoritiesQuery, CurrentSessionAuthoritiesQueryVariables>(\n    CurrentSessionAuthoritiesDocument,\n    options\n  );\n}\nexport function useCurrentSessionAuthoritiesLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<CurrentSessionAuthoritiesQuery, CurrentSessionAuthoritiesQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<CurrentSessionAuthoritiesQuery, CurrentSessionAuthoritiesQueryVariables>(\n    CurrentSessionAuthoritiesDocument,\n    options\n  );\n}\nexport type CurrentSessionAuthoritiesQueryHookResult = ReturnType<typeof useCurrentSessionAuthoritiesQuery>;\nexport type CurrentSessionAuthoritiesLazyQueryHookResult = ReturnType<typeof useCurrentSessionAuthoritiesLazyQuery>;\nexport type CurrentSessionAuthoritiesQueryResult = Apollo.QueryResult<\n  CurrentSessionAuthoritiesQuery,\n  CurrentSessionAuthoritiesQueryVariables\n>;\nexport const SessionKeysDocument = gql`\n  query SessionKeys($SessionId: [String!]!) {\n    sessions(filter: { id: { in: $SessionId } }) {\n      nodes {\n        id\n        ...SessionAuth\n        block {\n          timestamp\n          number\n        }\n        publicKey {\n          id\n          compressed\n          uncompressed\n          block {\n            timestamp\n            number\n          }\n        }\n      }\n    }\n  }\n  ${SessionAuthFragmentDoc}\n`;\n\n/**\n * __useSessionKeysQuery__\n *\n * To run a query within a React component, call `useSessionKeysQuery` and pass it any options that fit your needs.\n * When your component renders, `useSessionKeysQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSessionKeysQuery({\n *   variables: {\n *      SessionId: // value for 'SessionId'\n *   },\n * });\n */\nexport function useSessionKeysQuery(baseOptions: Apollo.QueryHookOptions<SessionKeysQuery, SessionKeysQueryVariables>) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<SessionKeysQuery, SessionKeysQueryVariables>(SessionKeysDocument, options);\n}\nexport function useSessionKeysLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<SessionKeysQuery, SessionKeysQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<SessionKeysQuery, SessionKeysQueryVariables>(SessionKeysDocument, options);\n}\nexport type SessionKeysQueryHookResult = ReturnType<typeof useSessionKeysQuery>;\nexport type SessionKeysLazyQueryHookResult = ReturnType<typeof useSessionKeysLazyQuery>;\nexport type SessionKeysQueryResult = Apollo.QueryResult<SessionKeysQuery, SessionKeysQueryVariables>;\nexport const SessionThresholdHistoryDocument = gql`\n  query SessionThresholdHistory($offset: Int!, $perPage: Int!) {\n    sessions(first: $perPage, offset: $offset, orderBy: [BLOCK_NUMBER_DESC]) {\n      nodes {\n        id\n        signatureThreshold\n        keyGenThreshold\n        block {\n          id\n          timestamp\n        }\n      }\n      pageInfo {\n        ...PageInfoMeta\n      }\n      totalCount\n    }\n  }\n  ${PageInfoMetaFragmentDoc}\n`;\n\n/**\n * __useSessionThresholdHistoryQuery__\n *\n * To run a query within a React component, call `useSessionThresholdHistoryQuery` and pass it any options that fit your needs.\n * When your component renders, `useSessionThresholdHistoryQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSessionThresholdHistoryQuery({\n *   variables: {\n *      offset: // value for 'offset'\n *      perPage: // value for 'perPage'\n *   },\n * });\n */\nexport function useSessionThresholdHistoryQuery(\n  baseOptions: Apollo.QueryHookOptions<SessionThresholdHistoryQuery, SessionThresholdHistoryQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<SessionThresholdHistoryQuery, SessionThresholdHistoryQueryVariables>(\n    SessionThresholdHistoryDocument,\n    options\n  );\n}\nexport function useSessionThresholdHistoryLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<SessionThresholdHistoryQuery, SessionThresholdHistoryQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<SessionThresholdHistoryQuery, SessionThresholdHistoryQueryVariables>(\n    SessionThresholdHistoryDocument,\n    options\n  );\n}\nexport type SessionThresholdHistoryQueryHookResult = ReturnType<typeof useSessionThresholdHistoryQuery>;\nexport type SessionThresholdHistoryLazyQueryHookResult = ReturnType<typeof useSessionThresholdHistoryLazyQuery>;\nexport type SessionThresholdHistoryQueryResult = Apollo.QueryResult<\n  SessionThresholdHistoryQuery,\n  SessionThresholdHistoryQueryVariables\n>;\nexport const SessionThresholdsDocument = gql`\n  query SessionThresholds($sessionId: String!) {\n    session(id: $sessionId) {\n      id\n      signatureThreshold\n      keyGenThreshold\n      proposersCount: sessionProposers {\n        totalCount\n      }\n      ...SessionAuth\n      block {\n        timestamp\n        number\n      }\n      publicKey {\n        id\n        compressed\n        uncompressed\n        block {\n          timestamp\n          number\n        }\n      }\n    }\n  }\n  ${SessionAuthFragmentDoc}\n`;\n\n/**\n * __useSessionThresholdsQuery__\n *\n * To run a query within a React component, call `useSessionThresholdsQuery` and pass it any options that fit your needs.\n * When your component renders, `useSessionThresholdsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useSessionThresholdsQuery({\n *   variables: {\n *      sessionId: // value for 'sessionId'\n *   },\n * });\n */\nexport function useSessionThresholdsQuery(\n  baseOptions: Apollo.QueryHookOptions<SessionThresholdsQuery, SessionThresholdsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useQuery<SessionThresholdsQuery, SessionThresholdsQueryVariables>(SessionThresholdsDocument, options);\n}\nexport function useSessionThresholdsLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<SessionThresholdsQuery, SessionThresholdsQueryVariables>\n) {\n  const options = { ...defaultOptions, ...baseOptions };\n  return Apollo.useLazyQuery<SessionThresholdsQuery, SessionThresholdsQueryVariables>(\n    SessionThresholdsDocument,\n    options\n  );\n}\nexport type SessionThresholdsQueryHookResult = ReturnType<typeof useSessionThresholdsQuery>;\nexport type SessionThresholdsLazyQueryHookResult = ReturnType<typeof useSessionThresholdsLazyQuery>;\nexport type SessionThresholdsQueryResult = Apollo.QueryResult<SessionThresholdsQuery, SessionThresholdsQueryVariables>;\n","// Copyright 2022 @webb-tools\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from './useAuthoritiesSeedData';\nexport * from './useDonutColor';\nexport * from './useProposalsSeedData';\n","import { randBic, randBrand, randCountryCode, randNumber } from '@ngneat/falso';\nimport { arrayFrom } from '@nepoche/webb-ui-components/utils';\n\nimport { AuthorityRowType } from '../containers/KeyDetail/types';\n\n/**\n * Get a new seeded keygen\n * @returns {KeygenType}\n */\nconst getNewAuthority = (): AuthorityRowType => {\n  return {\n    id: randBrand() + randBic(),\n    account: randBrand() + randBic(),\n    location: randCountryCode(),\n    uptime: randNumber({ min: 90, max: 100 }),\n    reputation: randNumber({ min: 90, max: 100 }),\n    detaillUrl: 'https://webb.tools',\n  };\n};\n\n/**\n * Get the keygen seeded data, use in keygen table\n * @param sizeArg Represents the size of the data array (default will be a random number in range 50..100 inclusive)\n */\nexport const useAuthoritiesSeedData = (sizeArg?: number): AuthorityRowType[] => {\n  const size = sizeArg ?? randNumber({ min: 50, max: 100 });\n\n  return arrayFrom(size, () => getNewAuthority());\n};\n\n// Seeded data for pagination\nconst DATA = arrayFrom(randNumber({ min: 10, max: 20 }), () => getNewAuthority());\n\n/**\n * Fake fetch function to get keygen seeded data\n * @param options Object contains `pageIndex` and `pageSize` to pagination\n * @returns Paginated keygen data\n */\nexport const fetchAuthoritiesData = async (options: { pageIndex: number; pageSize: number }) => {\n  // Simualte some network latency\n  await new Promise((r) => setTimeout(r, 500));\n\n  return {\n    rows: DATA.slice(options.pageIndex * options.pageSize, (options.pageIndex + 1) * options.pageSize),\n    pageCount: Math.ceil(DATA.length / options.pageSize),\n    totalItems: DATA.length,\n  };\n};\n","import { useDarkMode } from '@nepoche/webb-ui-components/hooks';\nimport { WebbColorsType } from '../../types/index.js';\nimport resolveConfig from 'tailwindcss/resolveConfig';\n\nimport tailwindConfig from /* preval */ '../../tailwind.config.js';\nimport { DonutDataType } from '../containers/DonutChartContainer/types';\n\nconst fullConfig = resolveConfig(tailwindConfig);\n\n/**\n * Get the color for donut chart\n * @returns an object where key if donut type and the value contains backgroud color, border color, and text color for donut chart\n */\nexport const useDonutColor = () => {\n  const webbColors = fullConfig.theme?.colors as unknown as WebbColorsType;\n  const [isDark] = useDarkMode();\n\n  return {\n    [DonutDataType.Open]: {\n      bg: webbColors.green['10'],\n      textColor: isDark ? webbColors.green['50'] : webbColors.green['70'],\n      borderColor: webbColors.green['70'],\n    },\n\n    [DonutDataType.Rejected]: {\n      bg: webbColors.red['10'],\n      textColor: isDark ? webbColors.red['50'] : webbColors.red['70'],\n      borderColor: webbColors.red['70'],\n    },\n\n    [DonutDataType.Signed]: {\n      bg: webbColors.blue['10'],\n      textColor: isDark ? webbColors.blue['50'] : webbColors.blue['70'],\n      borderColor: webbColors.blue['70'],\n    },\n\n    [DonutDataType.Accepted]: {\n      bg: webbColors.purple['10'],\n      textColor: isDark ? webbColors.purple['50'] : webbColors.purple['70'],\n      borderColor: webbColors.purple['70'],\n    },\n  };\n};\n","import { randBic, randBrand, randEthereumAddress, randHexaDecimal, randNumber, randRecentDate } from '@ngneat/falso';\nimport { arrayFrom } from '@nepoche/webb-ui-components/utils';\n\nimport { ProposalType } from '../generated/graphql';\nimport { ProposalListItem, ProposalStatus } from '../provider/hooks';\n\n/**\n * Get a new seeded proposal\n * @returns {ProposalListItem}\n */\nconst getNewProposal = (): ProposalListItem => {\n  const rand = randNumber({ min: 5, max: 20 });\n\n  return {\n    id: randBrand() + randBic(),\n    status: Object.keys(ProposalStatus)[Math.floor(Math.random() * 7)] as ProposalStatus,\n    type: Object.keys(ProposalType)[Math.floor(Math.random() * 16)] as ProposalType,\n    txHash: randEthereumAddress(),\n    proposers: {\n      firstElements: arrayFrom(rand, () => randHexaDecimal({ length: 64 }).join('')),\n      count: rand,\n    },\n    height: randRecentDate().getTime().toString(),\n    chain: 'eth',\n  };\n};\n\n/**\n * Get the proposals seeded data\n * @param sizeArg Represents the size of the data array (default will be a random number in range 50..100 inclusive)\n */\nexport const useProposalsSeedData = (sizeArg?: number): ProposalListItem[] => {\n  const size = sizeArg ?? randNumber({ min: 50, max: 100 });\n\n  return arrayFrom(size, () => getNewProposal());\n};\n\n// Seeded data for pagination\nconst DATA = arrayFrom(randNumber({ min: 10, max: 20 }), () => getNewProposal());\n\n/**\n * Fake fetch function to get seeded data\n * @param options Object contains `pageIndex` and `pageSize` to pagination\n * @returns Paginated data\n */\nexport const fetchProposalsData = async (options: { pageIndex: number; pageSize: number }) => {\n  // Simualte some network latency\n  await new Promise((r) => setTimeout(r, 500));\n\n  return {\n    rows: DATA.slice(options.pageIndex * options.pageSize, (options.pageIndex + 1) * options.pageSize),\n    pageCount: Math.ceil(DATA.length / options.pageSize),\n    totalItems: DATA.length,\n  };\n};\n","import './styles.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export * from './useProposals';\nexport * from './useAuthorities';\nexport * from './useKeys';\nexport * from './useCurrentMetaData';\nexport * from './types';\n","/**\n * A Type that wraps an API call value for a list view\n * @param T The type of the value\n * @param items - list of the items for the page\n * @param pageInfo - information about the page\n * */\nexport type Page<T> = {\n  items: T[];\n  pageInfo: {\n    count: number;\n    hasNext: boolean;\n    hasPrevious: boolean;\n  };\n};\n/**\n * A Type that wraps an API call value\n * @param T - The type of the value should be null if the call is not yet complete\n * @param isLoading - A boolean that indicates if the call is still loading\n * @param isFailed - A boolean that indicates if the call has failed\n * @package error - An error message if the call has failed\n * */\nexport type Loadable<T> = {\n  val: T | null;\n  isLoading: boolean;\n  isFailed: boolean;\n  error?: string;\n};\n\nexport type PageInfoQuery<Filter = null> = {\n  offset: number;\n  perPage: number;\n  filter: Filter;\n};\n\nexport enum SessionKeyStatus {\n  Generated = 'Generated',\n\n  Signed = 'Signed',\n\n  Rotated = 'Rotated',\n}\n\nexport enum ProposalStatus {\n  Signed = 'Signed',\n\n  Open = 'Open',\n\n  Rejected = 'Rejected',\n\n  Accepted = 'Accepted',\n\n  Removed = 'Removed',\n\n  Executed = 'Executed',\n\n  FailedToExecute = 'FailedToExecute',\n}\nexport interface SessionKeyHistory {\n  stage: SessionKeyStatus;\n\n  txHash: string;\n\n  blockNumber: string;\n\n  timestamp: string;\n}\nexport interface DKGAuthority {\n  authorityId: string;\n\n  accountId: string;\n\n  reputation?: string;\n}\nexport interface Threshold {\n  next: number;\n\n  current: number;\n\n  pending: number;\n}\n","import {\n  useSessionThresholdHistoryLazyQuery,\n  useSessionThresholdsLazyQuery,\n  useValidatorListingLazyQuery,\n  useValidatorOfSessionLazyQuery,\n  useValidatorSessionsLazyQuery,\n} from '@nepoche/stats-dapp/generated/graphql';\nimport { mapAuthorities, mapSessionAuthValidatorNode } from '@nepoche/stats-dapp/provider/hooks/mappers';\nimport { Loadable, Page, PageInfoQuery } from '@nepoche/stats-dapp/provider/hooks/types';\nimport { useCurrentMetaData } from '@nepoche/stats-dapp/provider/hooks/useCurrentMetaData';\nimport { PublicKey } from '@nepoche/stats-dapp/provider/hooks/useKeys';\nimport { DiscreteList } from '@nepoche/stats-dapp/provider/hooks/useProposals';\nimport { useActiveSession } from '@nepoche/stats-dapp/provider/stats-provider';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { Threshold as QueryThreshold } from './types';\n/**\n * Threshold values\n * @param keyGen - KeyGen threshold\n * @param signature - Signature threshold\n * @param proposer - Proposer threshold\n * @param publicKey - Public key for a session\n *\n * */\nexport type Thresholds = {\n  keyGen: string;\n  signature: string;\n  proposer: string;\n  publicKey: PublicKey;\n};\n\nexport type UpcomingThresholdStats = 'Pending' | 'Next' | 'Current';\n\n/**\n * Upcoming threshold stats\n * @param stats - Indicate the status of upcoming threshold\n * @param session - Stats session id\n * @param keyGen - KeyGen threshold\n * @param signature - Signature threshold\n * @param proposer - Proposer threshold\n * @param authoritySet - list of the authorities\n *\n * */\nexport type UpcomingThreshold = {\n  stats: 'Pending' | 'Next' | 'Current';\n  session: string;\n  keyGen: string;\n  signature: string;\n  proposer: string;\n  authoritySet: DiscreteList;\n};\n\nexport type UpcomingThresholds = Record<Lowercase<UpcomingThresholdStats>, UpcomingThreshold>;\n\n/**\n * Authority list item\n * @param id - Authority id\n * @param location - Authority location\n * @param uptime - Validator uptime\n * */\nexport type AuthorityListItem = {\n  id: string;\n  location: string;\n  uptime: string;\n  reputation: string;\n};\n\n/**\n *  Proposer threshold and wither an authority is in the set\n *  val: proposer threshold\n *  inSet: whether an authority is in the set\n *\n * */\ntype AuthorityThresholdStatus = {\n  val: string;\n  inTheSet: boolean;\n};\n\n/**\n * Authority  statistics\n * @param numberOfKeys - Number of keys the authority had participated in\n * @param uptime - The authority validator uptime\n * @param reputation - The authority validator reputation\n * @param keyGenThreshold - KeyGen threshold and wither the authority is in the set\n * @param signatureThreshold - Signature threshold and wither the authority is in the set\n * @param pendingKeyGenThreshold - Pending KeyGen threshold\n **/\nexport type AuthorityStats = {\n  numberOfKeys: string;\n  uptime: number;\n  reputation: number;\n  keyGenThreshold: AuthorityThresholdStatus;\n  nextKeyGenThreshold: AuthorityThresholdStatus;\n  pendingKeyGenThreshold: AuthorityThresholdStatus;\n};\n\n/**\n * Keygen list items\n * @param id - Keygen id\n * @param height - Keygen block number\n * @param session - Keygen session id\n * @param publicKey - Keygen public key\n * */\nexport type KeyGenKeyListItem = {\n  id: string;\n  height: string;\n  session: string;\n  publicKey: string;\n  authority: DiscreteList;\n};\n\ntype AuthorityDetails = {\n  stats: Loadable<AuthorityStats>;\n  keyGens: Loadable<Page<KeyGenKeyListItem>>;\n};\n\n/**\n * Session threshold\n * @param sessionId - Session identifier\n * @param keyGenThreshold - KeyGen threshold value\n * @param signatureThreshold - Signature threshold value\n * */\ntype SessionThresholdEntry = {\n  sessionId: string;\n  signatureThreshold: string;\n  keyGenThreshold: string;\n};\n\nexport function useThresholds(): Loadable<[Thresholds, UpcomingThresholds]> {\n  const [data, setData] = useState<Loadable<[Thresholds, UpcomingThresholds]>>({\n    val: null,\n    isFailed: false,\n    isLoading: true,\n  });\n\n  const session = useCurrentMetaData();\n  const activeSession = useActiveSession();\n  const [call, query] = useSessionThresholdsLazyQuery();\n\n  useEffect(() => {\n    if (session.val) {\n      call({ variables: { sessionId: session.val.activeSession } }).catch((e) => {\n        setData({\n          val: null,\n          isFailed: true,\n          error: 'failed to query the session',\n          isLoading: false,\n        });\n      });\n    }\n  }, [session, call]);\n\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): Loadable<[Thresholds, UpcomingThresholds]> => {\n        if (res.data) {\n          const session = res.data.session!;\n          const publicKey = session.publicKey;\n\n          const allAuth = mapAuthorities(session?.sessionValidators);\n          const authSet = allAuth.map((auth) => auth.id);\n          const nextAuthSet = allAuth.filter((auth) => auth.isNext).map((auth) => auth.id);\n\n          const keyGenThreshold = session.keyGenThreshold as QueryThreshold | null;\n          const signatureThreshold = session.signatureThreshold as QueryThreshold | null;\n          const proposersCount = session.proposersCount.totalCount;\n          const sessionTimeStamp = session.block?.timestamp;\n\n          const threshold: Thresholds = {\n            keyGen: keyGenThreshold ? String(keyGenThreshold.current) : '-',\n            publicKey: {\n              id: publicKey?.id ?? '',\n              session: session.id,\n              end: sessionTimeStamp ? new Date(new Date(sessionTimeStamp).getTime() + 60 * 60 * 1000) : undefined,\n              start: sessionTimeStamp ? new Date(sessionTimeStamp) : undefined,\n              compressed: publicKey?.compressed ?? '',\n              uncompressed: publicKey?.uncompressed ?? '',\n              keyGenAuthorities: authSet,\n              isCurrent: activeSession === session.id,\n              isDone: Number(activeSession) > Number(session.id),\n            },\n            proposer: '',\n            signature: signatureThreshold ? String(signatureThreshold.current) : '-',\n          };\n\n          const current: UpcomingThreshold = {\n            authoritySet: {\n              count: authSet.length,\n              firstElements: authSet.slice(0, 3),\n            },\n            keyGen: String(keyGenThreshold?.current ?? '-'),\n            signature: String(signatureThreshold?.current ?? '-'),\n            proposer: String(proposersCount),\n            session: session.id,\n            stats: 'Current',\n          };\n\n          const pending: UpcomingThreshold = {\n            authoritySet: {\n              count: nextAuthSet.length,\n              firstElements: nextAuthSet.slice(0, 3),\n            },\n            keyGen: String(keyGenThreshold?.pending ?? '-'),\n            signature: String(signatureThreshold?.pending ?? '-'),\n            proposer: String(proposersCount),\n            session: session.id,\n            stats: 'Pending',\n          };\n\n          const next: UpcomingThreshold = {\n            authoritySet: {\n              count: nextAuthSet.length,\n              firstElements: nextAuthSet.slice(0, 3),\n            },\n            keyGen: String(keyGenThreshold?.next ?? '-'),\n            signature: String(signatureThreshold?.next ?? '-'),\n            proposer: String(proposersCount),\n            session: String(Number(session.id) + 1),\n            stats: 'Next',\n          };\n\n          return {\n            isLoading: false,\n            isFailed: false,\n            val: [\n              threshold,\n              {\n                next,\n                pending,\n                current,\n              },\n            ],\n          };\n        }\n\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setData);\n\n    return () => subscription.unsubscribe();\n  }, [query, activeSession]);\n\n  return data;\n}\n\nexport function useAuthorities(reqQuery: PageInfoQuery): Loadable<Page<AuthorityListItem>> {\n  const [authorities, setAuthorities] = useState<Loadable<Page<AuthorityListItem>>>({\n    val: null,\n    isLoading: true,\n    isFailed: false,\n  });\n  const metaData = useCurrentMetaData();\n  const [call, query] = useValidatorListingLazyQuery();\n  // fetch the data once the filter has changed\n  useEffect(() => {\n    if (metaData.val) {\n      call({\n        variables: {\n          offset: reqQuery.offset,\n          perPage: reqQuery.perPage,\n          sessionId: metaData.val.activeSession,\n        },\n      }).catch((e) => {\n        setAuthorities({\n          val: null,\n          isFailed: true,\n          isLoading: false,\n          error: e.message,\n        });\n      });\n    }\n  }, [reqQuery, call, metaData]);\n\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): Loadable<Page<AuthorityListItem>> => {\n        if (res.data && res.data.validators) {\n          const validators = res.data.validators;\n          const items = validators.nodes\n            .filter((v) => v !== null && v.sessionValidators.edges[0])\n            .map((validator): AuthorityListItem => {\n              const auth = mapAuthorities(validator?.sessionValidators!);\n              return {\n                id: validator?.id!,\n                location: 'any',\n                uptime: '50',\n                reputation: auth[0].reputation ?? '0',\n              };\n            });\n          return {\n            isLoading: false,\n            isFailed: false,\n            val: {\n              items,\n              pageInfo: {\n                count: validators.totalCount,\n                hasPrevious: validators.pageInfo.hasPreviousPage,\n                hasNext: validators.pageInfo.hasNextPage,\n              },\n            },\n          };\n        }\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setAuthorities);\n    return () => subscription.unsubscribe();\n  }, [query]);\n\n  return authorities;\n}\nexport type AuthorityQuery = PageInfoQuery<{\n  authorityId: string;\n}>;\nexport function useAuthority(pageQuery: AuthorityQuery): AuthorityDetails {\n  const [stats, setStats] = useState<AuthorityDetails['stats']>({\n    isFailed: false,\n    isLoading: true,\n    val: null,\n  });\n  const [keyGens, setKeyGens] = useState<AuthorityDetails['keyGens']>({\n    isFailed: false,\n    isLoading: true,\n    val: null,\n  });\n  const metaData = useCurrentMetaData();\n  const { authorityId } = pageQuery.filter;\n  const [callKeyGen, queryKeyGen] = useValidatorSessionsLazyQuery();\n  const [callValidatorOfSession, queryValidatorOfSession] = useValidatorOfSessionLazyQuery();\n  useEffect(() => {\n    callKeyGen({\n      variables: {\n        offset: pageQuery.offset,\n        perPage: pageQuery.perPage,\n        keyGen: true,\n        validatorId: authorityId,\n      },\n    }).catch((e) => {\n      setKeyGens({\n        val: null,\n        isFailed: true,\n        isLoading: false,\n        error: e.message,\n      });\n    });\n  }, [authorityId, callKeyGen, setKeyGens, pageQuery]);\n  useEffect(() => {\n    if (metaData.val) {\n      callValidatorOfSession({\n        variables: {\n          sessionValidatorId: `${metaData.val.activeSession}-${authorityId}`,\n          validatorId: authorityId,\n        },\n      }).catch((e) => {\n        setStats({\n          val: null,\n          isFailed: true,\n          isLoading: false,\n          error: e.message,\n        });\n      });\n    }\n  }, [metaData, callValidatorOfSession, authorityId]);\n  useEffect(() => {\n    const subscription = queryKeyGen.observable\n      .map((res): AuthorityDetails['keyGens'] => {\n        if (res.data && res.data.sessionValidators) {\n          const sessionValidators = res.data.sessionValidators;\n          const items = sessionValidators.nodes.map((node): KeyGenKeyListItem => {\n            const session = node?.session!;\n            const publicKey = session.publicKey!;\n            return {\n              id: publicKey.id,\n              session: session.id,\n              publicKey: publicKey.uncompressed!,\n              height: `${publicKey.block?.number ?? '-'}`,\n              authority: {\n                count: session.sessionValidators.totalCount,\n                firstElements: session.sessionValidators.edges\n                  .map((i) => i.node?.validator?.id)\n                  .filter((i) => i !== undefined) as string[],\n              },\n            };\n          });\n          return {\n            isLoading: false,\n            isFailed: false,\n            val: {\n              items,\n              pageInfo: {\n                count: sessionValidators.totalCount,\n                hasPrevious: sessionValidators.pageInfo.hasPreviousPage,\n                hasNext: sessionValidators.pageInfo.hasNextPage,\n              },\n            },\n          };\n        }\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setKeyGens);\n    return () => subscription.unsubscribe();\n  }, [queryKeyGen]);\n  useEffect(() => {\n    const subscription = queryValidatorOfSession.observable\n      .map((res): AuthorityDetails['stats'] => {\n        if (res.data && res.data.sessionValidator) {\n          const sessionValidator = res.data.sessionValidator;\n          const sessionValidators = res.data.sessionValidators;\n          const counter = sessionValidators?.aggregates?.distinctCount?.id as number;\n          const threshold = sessionValidator.session?.keyGenThreshold! as QueryThreshold;\n          const auth = mapSessionAuthValidatorNode(sessionValidator);\n          const stats: AuthorityStats = {\n            numberOfKeys: String(counter),\n            keyGenThreshold: {\n              val: String(threshold.current),\n              inTheSet: auth.isBest,\n            },\n            nextKeyGenThreshold: {\n              val: String(threshold.next),\n              inTheSet: auth.isNextBest,\n            },\n            pendingKeyGenThreshold: {\n              val: String(threshold.pending),\n              inTheSet: auth.isBest,\n            },\n            reputation: Number(auth.reputation),\n            uptime: 100,\n          };\n          return {\n            error: '',\n            isFailed: false,\n            isLoading: false,\n            val: stats,\n          };\n        }\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setStats);\n    return () => subscription.unsubscribe();\n  }, [queryValidatorOfSession]);\n  return useMemo(() => ({ stats, keyGens }), [stats, keyGens]);\n}\n\nexport function useSessionHistory(pageQuery: PageInfoQuery): Loadable<Page<SessionThresholdEntry>> {\n  const [sessionHistory, setSessionHistory] = useState<Loadable<Page<SessionThresholdEntry>>>({\n    isFailed: false,\n    isLoading: false,\n    val: null,\n  });\n\n  const [call, query] = useSessionThresholdHistoryLazyQuery();\n\n  useEffect(() => {\n    call({\n      variables: {\n        offset: pageQuery.offset,\n        perPage: pageQuery.perPage,\n      },\n    }).catch((e) => {\n      setSessionHistory({\n        val: null,\n        isFailed: true,\n        isLoading: false,\n        error: e.message,\n      });\n    });\n  }, [pageQuery, setSessionHistory, call]);\n\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): Loadable<Page<SessionThresholdEntry>> => {\n        if (res.data.sessions) {\n          const items: SessionThresholdEntry[] = res.data.sessions.nodes.map((node) => {\n            return {\n              sessionId: node?.id!,\n              keyGenThreshold: String((node?.keyGenThreshold! as QueryThreshold).current!),\n              signatureThreshold: String((node?.signatureThreshold! as QueryThreshold).current!),\n            };\n          });\n          return {\n            error: '',\n            isFailed: false,\n            isLoading: false,\n            val: {\n              items,\n              pageInfo: {\n                count: res.data.sessions.totalCount,\n                hasPrevious: res.data.sessions.pageInfo.hasPreviousPage,\n                hasNext: res.data.sessions.pageInfo.hasNextPage,\n              },\n            },\n          };\n        }\n\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setSessionHistory);\n    return () => subscription.unsubscribe();\n  }, [query]);\n\n  return sessionHistory;\n}\n","import { Loadable } from '@nepoche/stats-dapp/provider/hooks/types';\nimport { Metadata, useStatsContext } from '@nepoche/stats-dapp/provider/stats-provider';\nimport { useMemo } from 'react';\n\nexport function useCurrentMetaData(): Loadable<Metadata> {\n  const { isReady, metaData } = useStatsContext();\n  return useMemo(() => {\n    if (isReady) {\n      return {\n        val: metaData,\n        isFailed: false,\n        isLoading: false,\n      };\n    }\n    return {\n      val: null,\n      isLoading: true,\n      isFailed: false,\n    };\n  }, [metaData, isReady]);\n}\n","import {\n  PublicKeysQuery,\n  usePublicKeyLazyQuery,\n  usePublicKeysLazyQuery,\n  useSessionKeyIdsLazyQuery,\n  useSessionKeysLazyQuery,\n} from '@nepoche/stats-dapp/generated/graphql';\nimport { mapAuthorities } from '@nepoche/stats-dapp/provider/hooks/mappers';\nimport { useCurrentMetaData } from '@nepoche/stats-dapp/provider/hooks/useCurrentMetaData';\nimport { useActiveSession, useStaticConfig } from '@nepoche/stats-dapp/provider/stats-provider';\nimport { NonNullableArrayItem } from '@nepoche/webb-ui-components/types';\nimport { useEffect, useState } from 'react';\n\nimport { Loadable, Page, PageInfoQuery, SessionKeyHistory, SessionKeyStatus, Threshold } from './types';\n\n/**\n *  Public key shared content\n *  @param id - public key id\n *  @param uncompressed - Uncompressed public key value\n *  @param compressed - Compressed public key value\n *  @param start - The time when the public key started taking effect and be the active key\n *  @param end - The time when the public key stopped taking effect and be the active key\n *  @param session - The session id for that key (Life time of the key)\n * */\ntype PublicKeyContent = {\n  id: string;\n\n  uncompressed: string;\n  compressed: string;\n\n  start?: Date;\n  end?: Date;\n  session: string;\n};\n\n/**\n * Public key with keygen authorities\n * @param isCurrent - The key is the current active key\n * @param keyGenAuthorities - Authorities set  that signed the key\n * */\nexport interface PublicKey extends PublicKeyContent {\n  isCurrent: boolean;\n  isDone: boolean;\n  keyGenAuthorities: string[];\n}\n\n/**\n * @param height  - Block number when the key was generated\n * @param keyGenAuthorities - Authorities set  that signed the key\n * @param keyGenThreshold - keyGenThreshold Active session of that key\n * @param SignatureThreshold - SignatureThreshold Active session of that key\n * @param session - The session id for that key (Lifetime of the key)\n * @param previousKeyId - The previous key id for nagivation on the drawer\n * @param nextKeyId - The next key id for nagivation on the drawer\n * */\nexport interface PublicKeyListView extends PublicKeyContent {\n  height: string;\n  keyGenAuthorities: string[];\n  keyGenThreshold: string;\n  signatureThreshold: string;\n  session: string;\n\n  previousKeyId?: string;\n  nextKeyId?: string;\n}\n\n/**\n * Public key progress history item\n * @param at - The date when the history item took place\n * @param hash - Transaction hash of that history item\n * @param status - The status of the history item\n * */\ntype PublicKeyHistoryEntry = {\n  at: Date;\n  hash: string;\n  status: SessionKeyStatus;\n};\n/**\n * @param id - Authority id\n * @param account - account 32 for that authority\n * @param location - The location of that authority\n * @param uptime - Authority validator uptime\n * @params reputation - The P2P reputation of that authority\n *\n * */\nexport type KeyGenAuthority = {\n  id: string;\n  account: string;\n  location: string;\n  uptime: number;\n  reputation: number;\n};\n\n/**\n * The full date of that public key\n * @param height  - Block number when the key was generated\n * @param isCurrent - The key is the current active key\n * @param history - The progress of that key\n * @param keyGenThreshold - keyGenThreshold Active session of that key\n * @param signatureThreshold - signatureThreshold Active session of that key\n * @param numberOfValidators - The number of the validator running at the key being active\n * @param authorities - keygen authorities (Best Authorities) that signed the key\n * @param nextKeyId - The id of the next key if any\n * @param previousKeyId - the id of the previous key if any\n * */\ninterface PublicKeyDetails extends PublicKeyContent {\n  height: string;\n  isCurrent: boolean;\n  isDone: boolean;\n  history: PublicKeyHistoryEntry[];\n  keyGenThreshold: string;\n  signatureThreshold: string;\n  numberOfValidators: number;\n  authorities: Array<KeyGenAuthority>;\n}\n/**\n *\n * Next and previous key ids\n * @param nextKeyId - The id of the next key if any\n * @param previousKeyId - The id of the next key if any\n *\n * */\ntype NextAndPrevKeyStatus = {\n  nextKeyId: string | null;\n  previousKeyId: string | null;\n};\n/**\n *  Public key details page\n *  @param key - Public key details\n *  @param prevAndNextKey - Information about the next and previous key existence\n * */\ntype PublicKeyDetailsPage = {\n  key: Loadable<PublicKeyDetails>;\n  prevAndNextKey: Loadable<NextAndPrevKeyStatus>;\n};\n\nexport function sessionFrame(\n  timestamp: string | undefined = undefined,\n  sessionHeight: number,\n  blockTime: number\n): [Date, Date] | [] {\n  if (!timestamp) {\n    return [];\n  }\n  const startDateTime = new Date(timestamp);\n  const endTime = startDateTime.getTime() + blockTime * sessionHeight * 1000;\n  return [startDateTime, new Date(endTime)];\n}\n\ntype PublicKeyResponse = NonNullableArrayItem<NonNullable<PublicKeysQuery['publicKeys']>['nodes']>;\n\n/**\n * List keys for table view\n *\n * @example\n * An example of using previous and next values\n * ```jsx\n *  const KeyDetailsPage = ({key}:{key:string}) => {\n *    const proposalDetailsPage = useKey(key);\n *    const nextAndPrevStatus = proposalDetailsPage.nextAndPrevStatus\n *    const hasNext = useMemo( () => prevAndNextKey.val?.nextKeyId !== null, [nextAndPrevStatus])\n *    const hasPrev = useMemo( () => prevAndNextKey.val?.previousKeyId !== null, [nextAndPrevStatus])\n *    return <div>\n *      <button  disabled={!hasPrev}>Next</button> <button disabled={!hasNext}>Prev</button>\n *    </div>\n *  }\n * ```\n * */\nexport function useKeys(reqQuery: PageInfoQuery): Loadable<Page<PublicKeyListView>> {\n  const [call, query] = usePublicKeysLazyQuery();\n  const { blockTime, sessionHeight } = useStaticConfig();\n  const [page, setPage] = useState<Loadable<Page<PublicKeyListView>>>({\n    val: null,\n    isFailed: false,\n    isLoading: true,\n  });\n\n  // fetch the data once the filter has changed\n  useEffect(() => {\n    call({\n      variables: {\n        offset: reqQuery.offset,\n        PerPage: reqQuery.perPage,\n      },\n    }).catch((e) => {\n      setPage({\n        val: null,\n        isFailed: true,\n        isLoading: false,\n        error: e.message,\n      });\n    });\n  }, [reqQuery, call]);\n  // Handle the GraphQl call response\n\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): Loadable<Page<PublicKeyListView>> => {\n        if (res.loading) {\n          return {\n            val: null,\n            isFailed: false,\n            isLoading: true,\n          };\n        }\n        if (res.error) {\n          return {\n            val: null,\n            error: res.error.message,\n            isLoading: false,\n            isFailed: true,\n          };\n        }\n        if (res.data.publicKeys) {\n          const data = res.data.publicKeys;\n\n          const filteredData = data.nodes.filter((n): n is PublicKeyResponse => !!n);\n\n          return {\n            isLoading: false,\n            isFailed: false,\n            val: {\n              items: filteredData.map((node, idx) => {\n                const session = node!.sessions?.nodes[0]!;\n                const authorities = mapAuthorities(session.sessionValidators)\n                  .filter((auth) => auth.isBest)\n                  .map((auth) => auth.id);\n\n                const previousKeyId = idx ? filteredData[idx - 1]?.id : undefined;\n                const nextKeyId = idx < filteredData.length - 1 ? filteredData[idx + 1]?.id : undefined;\n                const [start, end] = sessionFrame(session.block?.timestamp, sessionHeight, blockTime);\n                return {\n                  height: String(node!.block?.number),\n                  session: session.id,\n                  signatureThreshold: String(session.signatureThreshold?.current ?? '-'),\n                  keyGenThreshold: String(session.keyGenThreshold?.current ?? '-'),\n                  compressed: node!.compressed!,\n                  uncompressed: node!.uncompressed!,\n                  keyGenAuthorities: authorities,\n                  end,\n                  start,\n                  id: node!.id,\n                  previousKeyId,\n                  nextKeyId,\n                };\n              }),\n              pageInfo: {\n                count: data.totalCount,\n                hasNext: data.pageInfo.hasNextPage,\n                hasPrevious: data.pageInfo.hasPreviousPage,\n              },\n            },\n          };\n        }\n        return {\n          val: null,\n          isFailed: false,\n          isLoading: false,\n        };\n      })\n      .subscribe(setPage);\n\n    return () => subscription.unsubscribe();\n  }, [query, blockTime, sessionHeight]);\n\n  return page;\n}\n\nexport type UseActiveKeysReturnType = Loadable<[PublicKey | undefined, PublicKey | undefined]>;\n\n/**\n * Get the current Public key (Current session active) and the next public key (Next session active)\n * */\nexport function useActiveKeys(): UseActiveKeysReturnType {\n  const metaData = useCurrentMetaData();\n  const [call, query] = useSessionKeysLazyQuery();\n  const { blockTime, sessionHeight } = useStaticConfig();\n  const activeSession = useActiveSession();\n  const [keys, setKeys] = useState<UseActiveKeysReturnType>({\n    val: null,\n    isFailed: false,\n    isLoading: true,\n  });\n\n  useEffect(() => {\n    if (metaData.val) {\n      call({\n        variables: {\n          SessionId: [metaData.val.activeSession, String(Number(metaData.val.activeSession) + 1)],\n        },\n      }).catch((e) => {\n        setKeys({\n          val: null,\n          isFailed: true,\n          isLoading: false,\n          error: e.message,\n        });\n      });\n    }\n  }, [metaData, call]);\n\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): UseActiveKeysReturnType => {\n        if (res.data) {\n          const val: PublicKey[] =\n            res.data.sessions?.nodes\n              .filter((i) => i?.publicKey)\n              .map((i) => {\n                const keyGenAuthorities = mapAuthorities(i?.sessionValidators!)\n                  .filter((auth) => auth.isBest)\n                  .map((auth) => auth.id);\n                const publicKey = i!.publicKey!;\n                const session = i!;\n                const sessionTimeStamp = session.block?.timestamp;\n                const [start, end] = sessionFrame(sessionTimeStamp, sessionHeight, blockTime);\n\n                return {\n                  id: publicKey.id,\n                  session: session.id,\n                  end,\n                  start,\n                  compressed: publicKey.compressed!,\n                  uncompressed: publicKey.uncompressed!,\n                  keyGenAuthorities,\n                  isCurrent: activeSession === session.id,\n                  isDone: Number(activeSession) > Number(session.id),\n                };\n              }) || [];\n\n          const activeKey = val[0] as PublicKey | undefined;\n          const nextKey = val[1] as PublicKey | undefined;\n\n          return {\n            val: [\n              activeKey,\n              nextKey\n                ? {\n                    ...nextKey,\n                    start: activeKey?.end,\n                  }\n                : undefined,\n            ],\n            isFailed: false,\n            isLoading: false,\n          };\n        }\n\n        if (res.error) {\n          return {\n            val: null,\n            isFailed: true,\n            isLoading: false,\n            error: res.error.message,\n          };\n        }\n\n        return {\n          val: null,\n          isFailed: true,\n          isLoading: false,\n        };\n      })\n      .subscribe(setKeys);\n\n    return () => subscription.unsubscribe();\n  }, [query, activeSession, blockTime, sessionHeight]);\n\n  return keys;\n}\n\n/**\n * Graphql query to get the public key details\n * @param id : public key id\n *\n * */\nexport function useKey(id: string): PublicKeyDetailsPage {\n  const [call, query] = usePublicKeyLazyQuery();\n  const [callSessionKeys, sessionKeysQuery] = useSessionKeyIdsLazyQuery();\n  const [key, setKey] = useState<Loadable<PublicKeyDetails>>({\n    val: null,\n    isFailed: false,\n    isLoading: true,\n  });\n  const { blockTime, sessionHeight } = useStaticConfig();\n  const activeSession = useActiveSession();\n  const [prevAndNextKey, setPrevAndNextKey] = useState<Loadable<NextAndPrevKeyStatus>>({\n    val: null,\n    isFailed: false,\n    isLoading: true,\n  });\n  useEffect(() => {\n    call({\n      variables: {\n        id,\n      },\n    }).catch((e) => {\n      setKey({\n        val: null,\n        isFailed: true,\n        isLoading: false,\n        error: e.message,\n      });\n    });\n  }, [id, call]);\n\n  useEffect(() => {\n    const subscription = query.observable\n\n      .map((res): Loadable<PublicKeyDetails> => {\n        if (res.data) {\n          const publicKey = res.data.publicKey!;\n          const session = publicKey.sessions?.nodes[0]!;\n          const history: PublicKeyHistoryEntry[] = (publicKey.history as SessionKeyHistory[]).map((val) => {\n            return {\n              at: new Date(val.timestamp),\n              status: val.stage,\n              hash: val.txHash,\n            };\n          });\n          const sessionAuthorities = mapAuthorities(session.sessionValidators);\n          const authorities = sessionAuthorities\n            .filter((auth) => auth.isBest)\n            .map((auth): KeyGenAuthority => {\n              return {\n                account: auth.id,\n                id: auth.id,\n                location: 'any',\n                reputation: Number(auth.reputation),\n                uptime: 100,\n              };\n            });\n          const validators = sessionAuthorities.length;\n          const [start, end] = sessionFrame(session.block?.timestamp, sessionHeight, blockTime);\n          return {\n            isFailed: false,\n            isLoading: false,\n            val: {\n              height: publicKey.block?.number,\n              compressed: publicKey.compressed!,\n              uncompressed: publicKey.uncompressed!,\n              id: publicKey.id,\n              session: session.id,\n              end,\n              start,\n              history,\n              numberOfValidators: validators,\n              isCurrent: activeSession === session.id,\n              isDone: Number(activeSession) > Number(session.id),\n              authorities,\n              keyGenThreshold: session.keyGenThreshold ? String((session.keyGenThreshold as Threshold).current) : '-',\n              signatureThreshold: session.keyGenThreshold\n                ? String((session.signatureThreshold as Threshold).current)\n                : '-',\n            },\n          };\n        }\n        return {\n          val: null,\n          isFailed: Boolean(res.error),\n          isLoading: false,\n          error: res.error?.message,\n        };\n      })\n      .subscribe((val) => {\n        if (val.val) {\n          const sessionId = Number(val.val.session);\n          const sessionIds = [Math.max(sessionId - 1, 0), sessionId + 1].map((v) => String(v));\n          callSessionKeys({\n            variables: {\n              keys: sessionIds,\n            },\n          }).catch((e) => {\n            console.log(e);\n          });\n        }\n        setKey(val);\n      });\n    return () => subscription.unsubscribe();\n  }, [callSessionKeys, query, activeSession, sessionHeight, blockTime]);\n\n  useEffect(() => {\n    const subscription = sessionKeysQuery.observable\n      .map((res): Loadable<NextAndPrevKeyStatus> => {\n        if (res.data && res.data.sessions) {\n          const sessions = res.data.sessions.nodes!;\n          const map = sessions.filter((s) => s && s.publicKey).map((s) => [s!.id, s!.publicKey!.id]);\n          const [prev, next] = sessionKeysQuery.variables!.keys as string[];\n          return {\n            isLoading: false,\n            val: {\n              nextKeyId: map.find((i) => i[0] === next)?.[1] || null,\n              previousKeyId: map.find((i) => i[0] === prev)?.[1] || null,\n            },\n            isFailed: false,\n          };\n        }\n        return {\n          val: null,\n          isFailed: Boolean(res.error),\n          isLoading: false,\n          error: res.error?.message,\n        };\n      })\n      .subscribe(setPrevAndNextKey);\n    return () => subscription.unsubscribe();\n  }, [sessionKeysQuery, setPrevAndNextKey]);\n  return { key, prevAndNextKey };\n}\n","import {\n  ProposalType,\n  useEnsureProposalsLazyQuery,\n  useProposalDetailsLazyQuery,\n  useProposalsLazyQuery,\n  useProposalsOverviewLazyQuery,\n  useProposalVotesLazyQuery,\n  VoteStatus,\n} from '@nepoche/stats-dapp/generated/graphql';\nimport { mapProposalListItem } from '@nepoche/stats-dapp/provider/hooks/mappers';\nimport { Loadable, Page, PageInfoQuery, ProposalStatus } from '@nepoche/stats-dapp/provider/hooks/types';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { Threshold as QueryThreshold } from './types';\n\n/**\n * Threshold values\n * @param proposal - The proposer threshold value a session\n * @param proposers -The number of proposers of a session\n *\n * */\ntype Thresholds = {\n  proposal: number;\n  proposers: number;\n};\n/**\n * Proposal type Status counter map for proposal statuses\n * @params accepted - number of accepted proposals\n * @params rejected - number of rejected proposals\n * @params open - number of open proposals\n * @params signed - number of signed proposals\n * */\ntype ProposalTypeStats = {\n  accepted: number;\n  rejected: number;\n  open: number;\n  signed: number;\n};\n/** List over view\n *\n * A type for infinite number of list will show a defined number of items and will have the count for the full list\n * @param T - The underlying list item type\n * @param count - Total number of the list of `T`\n * */\nexport type DiscreteList<T = string> = {\n  firstElements: T[];\n  count: number;\n};\n/**\n * Proposal list item\n * @params id - proposal identifier\n * @params status - proposal status\n * @params type - proposal type\n * @params txHash -  Proposal submission transaction hash\n * @params proposers - proposers list view\n * @params chain - Proposal chain\n * */\nexport type ProposalListItem = {\n  id: string;\n  status: ProposalStatus;\n  height?: string;\n  type: ProposalType;\n  txHash: string;\n  proposers: DiscreteList;\n  chain: string;\n};\n\n/**\n * Proposal page\n * */\ntype ProposalsPage = Loadable<Page<ProposalListItem>>;\n/**\n * Proposals overview\n * @params totalProposals - total number of proposers and proposal the current threshold\n * @param status -  Proposal status counter `ProposalTypeStats`\n * @param openProposals -  list of recent open proposals\n **/\ntype ProposalsOverview = {\n  thresholds: Thresholds;\n  stats: ProposalTypeStats;\n  openProposals: ProposalListItem[];\n};\n/**\n * Proposal timeline item\n *  @param status - Proposals status at that timeline item\n *  @param at - The data the timeline item took place\n *  @param blockNumber - the block number the timeline item took place\n *  @param hash - Transaction hash of the timeline item\n *\n * */\ntype ProposalTimeLine = {\n  id: string;\n  status: ProposalStatus;\n  at: Date;\n  blockNumber: number;\n  hash: string;\n};\n/**\n * Vote listing item\n *\n * @param id - Vote identifier\n * @param voterId - The voter id (account 32)\n * @param for - Boolean value indicate if the vote is against or for the proposal, absent indicate abstain vote\n * @param timestamp - The date the vote took place\n * */\nexport type VoteListItem = {\n  id: string;\n  voterId: string;\n  status: VoteStatus;\n  timestamp: Date;\n};\n/**\n * Votes page type\n * */\ntype VotesPage = Loadable<Page<VoteListItem>>;\n\n/**\n * Votes query\n * @param proposalId -  Proposal id to filter votes by proposal\n * @param isFor - Optional boolean value to filter votes by for or against if absent will return all votes\n * */\nexport type VotesQuery = PageInfoQuery<{\n  proposalId: string;\n  status?: VoteStatus;\n}>;\n\n/**\n * Proposal data\n * @params data - Proposal encoded proposal data\n * @params type - Proposal type\n * */\ntype ProposalData = {\n  type: ProposalType;\n  data: string;\n};\n/**\n * Proposal detail\n *\n * @params id - Proposal identifier\n * @params height - Proposal submission block number\n * @params tsHash - Proposal submission transaction hash\n * @params chain - Proposal chain\n * @params forPercentage - Percentage of votes for the proposal\n * @params againstPercentage - Percentage of votes against the proposal\n * @params abstainPercentage - Number of proposers that didn't submit a vote yet\n * @params forCount - Number of proposers that voted for the proposer\n * @params againstCount - Number of proposers that voted against the proposal\n * @params abstainCount - Number of proposals without any votes for the proposal\n * @params timeline - Progress of the proposal status\n * @param data - proposal data\n * */\nexport type ProposalDetails = {\n  id: string;\n  height: string;\n  txHash: string;\n  chain: string;\n  forPercentage: number;\n  againstPercentage: number;\n  abstainPercentage: number;\n  forCount: number;\n  againstCount: number;\n  abstainCount: number;\n  allCount: number;\n  timeline: ProposalTimeLine[];\n  data: ProposalData;\n  status: ProposalStatus;\n};\ntype BlockRange = { start: number; end: number };\n/**\n * Proposals overview\n * @return ProposalsOverview - Proposal overview data\n * */\nexport function useProposalsOverview(sessionId: string, range?: BlockRange): Loadable<ProposalsOverview> {\n  const [proposalsOverview, setProposalsOverview] = useState<Loadable<ProposalsOverview>>({\n    isLoading: true,\n    val: null,\n    isFailed: false,\n  });\n  const [call, query] = useProposalsOverviewLazyQuery();\n\n  useEffect(() => {\n    call({\n      variables: {\n        endRange: range\n          ? {\n              lessThanOrEqualTo: range.end,\n            }\n          : undefined,\n        startRange: range\n          ? {\n              greaterThanOrEqualTo: range.start,\n            }\n          : undefined,\n        sessionId: sessionId,\n      },\n    }).catch((e) => {\n      setProposalsOverview({\n        isLoading: false,\n        isFailed: true,\n        val: null,\n        error: e.message,\n      });\n    });\n  }, [range, sessionId, call]);\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): Loadable<ProposalsOverview> => {\n        if (res.data && res.data.session && res.data.openProposals) {\n          const session = res.data.session!;\n          const thresholds: Thresholds = {\n            proposal: (session.proposerThreshold as QueryThreshold | null)?.current ?? NaN,\n            proposers: session.sessionProposers.totalCount,\n          };\n          const openProposalsCount = res.data.open?.totalCount ?? 0;\n          const rejectedProposalsCount = res.data.reject?.totalCount ?? 0;\n          const signedProposalsCount = res.data.signed?.totalCount ?? 0;\n          const acceptedProposalsCount = res.data.accepted?.totalCount ?? 0;\n          const proposalStats: ProposalTypeStats = {\n            open: openProposalsCount,\n            rejected: rejectedProposalsCount,\n            accepted: acceptedProposalsCount,\n            signed: signedProposalsCount,\n          };\n\n          const openProposals = res.data.openProposals.nodes\n            .filter((p) => p !== null)\n            .map((p) => mapProposalListItem(p!));\n          return {\n            val: {\n              openProposals,\n              stats: proposalStats,\n              thresholds,\n            },\n            isFailed: false,\n            isLoading: false,\n          };\n        }\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setProposalsOverview);\n    return () => subscription.unsubscribe();\n  }, [query]);\n  return proposalsOverview;\n}\n\n/**\n * Listing query for proposals\n * */\nexport function useProposals(reqQuery: PageInfoQuery): ProposalsPage {\n  const [proposalsPage, setProposalsPage] = useState<ProposalsPage>({\n    isLoading: false,\n    val: null,\n    isFailed: false,\n  });\n  const [call, query] = useProposalsLazyQuery();\n  useEffect(() => {\n    call({\n      variables: {\n        offset: reqQuery.offset,\n        perPage: reqQuery.perPage,\n      },\n    }).catch((e) => {\n      setProposalsPage({\n        isLoading: false,\n        isFailed: true,\n        val: null,\n        error: e.message,\n      });\n    });\n  }, [reqQuery, call]);\n\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): ProposalsPage => {\n        if (res.data && res.data.proposalItems) {\n          const data = res.data.proposalItems.nodes.filter((p) => p !== null).map((p) => mapProposalListItem(p!));\n          return {\n            isFailed: false,\n            isLoading: false,\n            val: {\n              items: data,\n              pageInfo: {\n                count: res.data.proposalItems.totalCount,\n                hasPrevious: res.data.proposalItems.pageInfo.hasPreviousPage,\n                hasNext: res.data.proposalItems.pageInfo.hasNextPage,\n              },\n            },\n          };\n        }\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setProposalsPage);\n    return () => subscription.unsubscribe();\n  }, [query]);\n\n  return proposalsPage;\n}\n\ntype NextAndPrevStatus = {\n  nextProposalId: string | null;\n  previousProposalId: string | null;\n};\ntype ProposalDetailsPage = {\n  proposal: Loadable<ProposalDetails>;\n  votes: VotesPage;\n  nextAndPrevStatus: Loadable<NextAndPrevStatus>;\n};\n\n/**\n * Load a proposal with paginated votes and status at a given session\n * @example\n * An example of using previous and next values\n * ```jsx\n *  const ProposalDetailsPage = ({id,targetSessionId}:{id:string ,targetSessionId:string}) => {\n *    const proposalDetailsPage = useProposal(targetSessionId , {\n *      offset: 0,\n *      perPage: 10,\n *      filter:{\n *        proposalId:id\n *      }\n *    });\n *    const nextAndPrevStatus = proposalDetailsPage.nextAndPrevStatus\n *    const hasNext = useMemo( () => nextAndPrevStatus.val?.nextProposalId !== null, [nextAndPrevStatus])\n *    const hasPrev = useMemo( () => nextAndPrevStatus.val?.previousProposalId !== null, [nextAndPrevStatus])\n *    return <div>\n *      <button  disabled={!hasPrev}>Next</button> <button disabled={!hasNext}>Prev</button>\n *    </div>\n *  }\n * ```\n *\n * */\nexport function useProposal(targetSessionId: string, votesReqQuery: VotesQuery): ProposalDetailsPage {\n  const [proposalDetails, setProposalDetails] = useState<Loadable<ProposalDetails>>({\n    isLoading: false,\n    val: null,\n    isFailed: false,\n  });\n\n  const [nextAndPrevStatus, setNextAndPrevStatus] = useState<Loadable<NextAndPrevStatus>>({\n    isLoading: false,\n    val: null,\n    isFailed: false,\n  });\n  const [ensureProposals, ensureProposalsQuery] = useEnsureProposalsLazyQuery();\n\n  const [call, query] = useProposalDetailsLazyQuery();\n  const { offset, perPage } = votesReqQuery;\n  const proposalId = votesReqQuery.filter.proposalId;\n  const votes = useVotes(votesReqQuery);\n\n  useEffect(() => {\n    ensureProposals({\n      variables: {\n        ids: [Number(proposalId) - 1, Number(proposalId) + 1].map((i) => String(i)),\n      },\n    }).catch((e) => {\n      setNextAndPrevStatus({\n        val: null,\n        error: e.message,\n        isLoading: false,\n        isFailed: true,\n      });\n    });\n  }, [proposalId, ensureProposals]);\n\n  useEffect(() => {\n    call({\n      variables: {\n        id: proposalId,\n        targetSessionId,\n      },\n    }).catch((e) => {\n      setProposalDetails({\n        isLoading: false,\n        isFailed: true,\n        val: null,\n        error: e.message,\n      });\n    });\n  }, [proposalId, offset, perPage, targetSessionId, call]);\n  useEffect(() => {\n    const subscription = ensureProposalsQuery.observable\n      .map((res): Loadable<NextAndPrevStatus> => {\n        if (res.data && res.data.proposalItems) {\n          const proposals = res.data.proposalItems.nodes.filter((p) => p !== null);\n          const nextProposalId = proposals.find((p) => Number(p!.id) === Number(proposalId) + 1)?.id ?? null;\n          const previousProposalId = proposals.find((p) => Number(p!.id) === Number(proposalId) - 1)?.id ?? null;\n          return {\n            val: {\n              nextProposalId,\n              previousProposalId,\n            },\n            isFailed: false,\n            isLoading: false,\n          };\n        }\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setNextAndPrevStatus);\n    return () => subscription.unsubscribe();\n  }, [ensureProposalsQuery, setNextAndPrevStatus, proposalId]);\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): Loadable<ProposalDetails> => {\n        if (res.data && res.data.proposalItem && res.data.session) {\n          const proposal = res.data.proposalItem;\n          const forCount = proposal.votesFor.totalCount;\n          const allVotes = proposal.totalVotes.totalCount;\n          const expectedVotesCount = res.data.session.sessionProposers.totalCount;\n          const abstainCount = res.data.proposalItem.abstain.totalCount;\n          const againstCount = res.data.proposalItem.against.totalCount;\n          return {\n            isLoading: false,\n            isFailed: false,\n            val: {\n              id: proposal.id,\n              data: {\n                data: proposal.data,\n                type: proposal.type,\n              },\n              status: proposal.status as any,\n              abstainCount,\n              forCount,\n              againstCount,\n              allCount: allVotes,\n              abstainPercentage: (abstainCount / expectedVotesCount) * 100,\n              forPercentage: (forCount / expectedVotesCount) * 100,\n              againstPercentage: (againstCount / expectedVotesCount) * 100,\n              chain: String(res.data.proposalItem.chainId),\n              height: proposal.block?.timestamp!,\n              timeline: proposal.proposalTimelineStatuses.nodes.map((item) => {\n                const statusItem = item!;\n                return {\n                  at: new Date(statusItem.timestamp),\n                  blockNumber: statusItem.blockNumber,\n                  hash: '0x000',\n                  status: statusItem.status,\n                  id: statusItem.id,\n                };\n              }),\n              txHash: '0x000',\n            },\n          };\n        }\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setProposalDetails);\n\n    return () => subscription.unsubscribe();\n  }, [query]);\n\n  return useMemo(\n    () => ({\n      proposal: proposalDetails,\n      votes,\n      nextAndPrevStatus,\n    }),\n    [nextAndPrevStatus, proposalDetails, votes]\n  );\n}\n\nexport function useVotes(votesReqQuery: VotesQuery): VotesPage {\n  const [votes, setVotes] = useState<VotesPage>({\n    isLoading: true,\n    isFailed: false,\n    val: null,\n  });\n  const [call, query] = useProposalVotesLazyQuery();\n  const {\n    filter: { proposalId, status },\n    offset,\n    perPage,\n  } = votesReqQuery;\n  useEffect(() => {\n    call({\n      variables: {\n        proposalId,\n        offset,\n        perPage,\n        for: status ? { equalTo: status } : undefined,\n      },\n    }).catch((e) => {\n      setVotes({\n        isLoading: false,\n        isFailed: true,\n        val: null,\n        error: e.message,\n      });\n    });\n  }, [perPage, offset, status, call, proposalId]);\n\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): VotesPage => {\n        if (res.data && res.data.proposalVotes) {\n          const votes = res.data.proposalVotes;\n          const data = votes.nodes\n            .filter((p) => p !== null)\n            .map((p): VoteListItem => {\n              const vote = p!;\n              return {\n                status: vote.voteStatus,\n                id: vote.id,\n                voterId: vote.voterId,\n                timestamp: new Date(vote.block?.timestamp!),\n              };\n            });\n          return {\n            isFailed: false,\n            isLoading: false,\n            val: {\n              items: data,\n              pageInfo: {\n                count: votes.totalCount,\n                hasPrevious: votes.pageInfo.hasPreviousPage,\n                hasNext: votes.pageInfo.hasNextPage,\n              },\n            },\n          };\n        }\n        return {\n          isLoading: res.loading,\n          isFailed: Boolean(res.error),\n          error: res.error?.message ?? undefined,\n          val: null,\n        };\n      })\n      .subscribe(setVotes);\n    return () => subscription.unsubscribe();\n  }, [query, setVotes]);\n\n  return votes;\n}\n","import { useLastBlockQuery, useMetaDataQuery } from '@nepoche/stats-dapp/generated/graphql';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\n\n/**\n * Chain metadata\n * @param currentBlock - the current block number\n * @param lastProcessBlock - The block number where the data syncing is done\n * @param activeSession - the current active session\n * @param lastSession - the last created session\n *\n * */\nexport type Metadata = {\n  currentBlock: string;\n  lastProcessBlock: string;\n  lastSession: string;\n  activeSession: string;\n};\n\n/**\n *\n * Get the current session from metadata\n * */\nexport function session(height: string, sessionHeight: number) {\n  const blockNumber = Number(height);\n  const sessionNumber = Math.floor(blockNumber / sessionHeight);\n  return sessionNumber.toString();\n}\n\n/**\n *\n * Get the next session from metadata\n * */\nexport function nextSession(height: string, sessionHeight: number): string {\n  const blockNumber = Number(height);\n  const sessionNumber = Math.ceil(blockNumber / sessionHeight);\n  return sessionNumber.toString();\n}\n\ntype StatsProvidervalue = {\n  children?: React.ReactNode;\n  // Number of seconds for a block to be generated\n  blockTime: number;\n  // Number of blocks for a session\n  sessionHeight: number;\n  //SubQuery synced time object\n  time: SubQlTime;\n  // update time\n  updateTime(time: SubQlTime): void;\n  metaData: Metadata;\n  isReady: boolean;\n};\n\n/**\n * Wrapper date object that consumes the SubQuery node blocks fetching as a time source\n * */\nclass SubQlTime {\n  private lastSynced: Date;\n\n  constructor(private lastBlockTime: Date) {\n    this.lastSynced = new Date();\n  }\n\n  /**\n   * Sync the inner date object\n   * */\n  sync(date: Date): SubQlTime {\n    return new SubQlTime(date);\n  }\n\n  get current(): Date {\n    // Calculate the different from the sync point\n    const diff = new Date().getTime() - this.lastSynced.getTime();\n    // add the diff to the block timestamp\n    return new Date(this.lastBlockTime.getTime() + diff);\n  }\n\n  syncFromIsString(dateStr: string) {\n    const date = new Date(dateStr);\n    return this.sync(date);\n  }\n}\n\nconst statsContext: React.Context<StatsProvidervalue> = React.createContext<StatsProvidervalue>({\n  blockTime: 6,\n  sessionHeight: 10,\n  time: new SubQlTime(new Date()),\n  updateTime(_time: SubQlTime): void {},\n  metaData: {\n    activeSession: '0',\n    currentBlock: '0',\n    lastSession: '0',\n    lastProcessBlock: '0',\n  },\n  isReady: false,\n});\nexport function useStatsContext() {\n  return useContext(statsContext);\n}\nexport const useSubQLtime = (): SubQlTime => {\n  const ctx = useContext(statsContext);\n\n  return ctx.time;\n};\n\nexport const useStaticConfig = () => {\n  const { blockTime, sessionHeight } = useStatsContext();\n  return useMemo(() => {\n    return {\n      blockTime,\n      sessionHeight,\n    };\n  }, [blockTime, sessionHeight]);\n};\nexport const useActiveSession = () => {\n  const {\n    metaData: { activeSession },\n  } = useStatsContext();\n  return activeSession;\n};\nexport const StatsProvider: React.FC<Omit<StatsProvidervalue, 'isReady' | 'metaData' | 'updateTime' | 'time'>> = (\n  props\n) => {\n  const [time, setTime] = useState<SubQlTime>(new SubQlTime(new Date()));\n  const [metaData, setMetaData] = useState<Metadata>({\n    activeSession: '0',\n    currentBlock: '',\n    lastProcessBlock: '',\n    lastSession: '',\n  });\n  const [staticConfig] = useState<{\n    blockTime: number;\n    sessionHeight: number;\n  }>({\n    sessionHeight: props.sessionHeight,\n    blockTime: props.blockTime,\n  });\n  const [isReady, setIsReady] = useState(false);\n  const value = useMemo<StatsProvidervalue>(() => {\n    return {\n      time,\n      ...staticConfig,\n      updateTime: (time: SubQlTime) => {\n        setTime(time);\n      },\n      isReady,\n      metaData,\n    };\n  }, [staticConfig, metaData, isReady, time]);\n  const query = useLastBlockQuery();\n\n  useEffect(() => {\n    const subscription = query.observable\n      .map((res): SubQlTime | null => {\n        if (res.data?.blocks) {\n          const lastBlock = res.data.blocks.nodes[0];\n          if (!lastBlock || !lastBlock.timestamp) {\n            return null;\n          }\n          const lastBlockTimestamp = lastBlock.timestamp;\n          return new SubQlTime(new Date(lastBlockTimestamp));\n        }\n        return null;\n      })\n      .subscribe((val) => {\n        if (val) {\n          setTime(val);\n        }\n      });\n    return () => subscription.unsubscribe();\n  }, [query]);\n  const metaDataQuery = useMetaDataQuery({\n    fetchPolicy: 'cache-and-network',\n  });\n  useEffect(() => {\n    const unSub = metaDataQuery.observable\n      .map((r): Metadata | null => {\n        if (r.data?._metadata) {\n          const data = r.data._metadata;\n          return {\n            currentBlock: String(data.targetHeight),\n            lastProcessBlock: String(data.lastProcessedHeight),\n            activeSession: session(String(data.lastProcessedHeight), staticConfig.sessionHeight),\n            lastSession: nextSession(String(data.targetHeight), staticConfig.sessionHeight),\n          };\n        }\n        return null;\n      })\n      .subscribe((val) => {\n        if (val) {\n          setIsReady(true);\n          setMetaData(val);\n        }\n      });\n    return () => unSub.unsubscribe();\n  }, [query, metaDataQuery, isReady, staticConfig]);\n\n  useEffect(() => {\n    query.startPolling(staticConfig.blockTime * 1000);\n    metaDataQuery.startPolling(staticConfig.blockTime * 1000);\n\n    return () => {\n      query.stopPolling();\n      metaDataQuery.stopPolling();\n    };\n  }, [query, metaDataQuery, staticConfig]);\n\n  return <statsContext.Provider value={value}>{props.children}</statsContext.Provider>;\n};\n","import { RouterConfigData } from '@nepoche/react-environment';\nimport { Spinner } from '@nepoche/webb-ui-components';\nimport { BareProps } from '@nepoche/dapp-types';\nimport { FC, lazy, Suspense } from 'react';\n\nimport { Layout } from '../containers';\n\nconst PageAuthorities = lazy(() => import('../pages/Authorities'));\nconst PageAuthorityDetailDrawer = lazy(() => import('../pages/AuthorityDetailDrawer'));\nconst PageAuthorityDetail = lazy(() => import('../pages/AuthorityDetailPage'));\n\nconst PageAuthoritiesHistory = lazy(() => import('../pages/AuthoritiesHistory'));\n\nconst PageKeys = lazy(() => import('../pages/Keys'));\nconst PageKeyDetailDrawer = lazy(() => import('../pages/KeyDetailDrawer'));\nconst PageKeyDetail = lazy(() => import('../pages/KeyDetailPage'));\n\nconst PageProposals = lazy(() => import('../pages/Proposals'));\nconst PageProposalDetailDrawer = lazy(() => import('../pages/ProposalDetailDrawer'));\nconst PageProposalDetail = lazy(() => import('../pages/ProposalDetailPage'));\n\nconst PageComponentsShowcase = lazy(() => import('../pages/ComponentsShowcase'));\n\nconst CSuspense: FC<BareProps> = ({ children }) => {\n  return (\n    <Suspense\n      fallback={\n        <div className='flex items-center justify-center min-w-full min-h-screen'>\n          <Spinner size='xl' />\n        </div>\n      }\n    >\n      {children}\n    </Suspense>\n  );\n};\n\nexport const routes: RouterConfigData[] = [\n  {\n    children: [\n      {\n        element: (\n          <CSuspense>\n            <PageComponentsShowcase />\n          </CSuspense>\n        ),\n        path: 'components-showcase/*',\n      },\n      {\n        element: (\n          <CSuspense>\n            <PageAuthoritiesHistory />\n          </CSuspense>\n        ),\n        path: 'authorities/history',\n      },\n      {\n        element: (\n          <CSuspense>\n            <PageAuthorityDetail />\n          </CSuspense>\n        ),\n        path: 'authorities/:authorityId',\n      },\n      {\n        element: (\n          <CSuspense>\n            <PageAuthorities />\n          </CSuspense>\n        ),\n        children: [\n          {\n            path: 'drawer/:authorityId',\n            element: (\n              <CSuspense>\n                <PageAuthorityDetailDrawer />\n              </CSuspense>\n            ),\n          },\n        ],\n        path: 'authorities/*',\n      },\n      {\n        element: (\n          <CSuspense>\n            <PageKeyDetail />\n          </CSuspense>\n        ),\n        path: 'keys/:keyId',\n      },\n      {\n        element: (\n          <CSuspense>\n            <PageKeys />\n          </CSuspense>\n        ),\n        children: [\n          {\n            path: 'drawer/:keyId',\n            element: (\n              <CSuspense>\n                <PageKeyDetailDrawer />\n              </CSuspense>\n            ),\n          },\n        ],\n        path: 'keys/*',\n      },\n      {\n        element: (\n          <CSuspense>\n            <PageProposalDetail />\n          </CSuspense>\n        ),\n        path: 'proposals/:proposalId',\n      },\n      {\n        element: (\n          <CSuspense>\n            <PageProposals />\n          </CSuspense>\n        ),\n        children: [\n          {\n            path: 'drawer/:proposalId',\n            element: (\n              <CSuspense>\n                <PageProposalDetailDrawer />\n              </CSuspense>\n            ),\n          },\n        ],\n        path: 'proposals/*',\n      },\n      {\n        path: '*',\n        redirectTo: 'proposals',\n      },\n    ],\n    element: <Layout />,\n    path: '*',\n  },\n];\n","import { ChipProps } from '@nepoche/webb-ui-components/components/Chip/types';\n\nexport function getChipColorByKeyType(type: 'Next' | 'Current' | 'Pending'): ChipProps['color'] {\n  switch (type) {\n    case 'Current': {\n      return 'green';\n    }\n\n    case 'Next': {\n      return 'blue';\n    }\n\n    case 'Pending': {\n      return 'yellow';\n    }\n\n    default: {\n      throw new Error('Unknow ProposalStatus inside `getChipColorByKeyType` function');\n    }\n  }\n}\n","import { ChipProps } from '@nepoche/webb-ui-components/components/Chip/types';\n\nimport { ProposalStatus } from '../generated/graphql';\n\nexport function getChipColorByProposalType(type: ProposalStatus): ChipProps['color'] {\n  switch (type) {\n    case ProposalStatus.Accepted: {\n      return 'purple';\n    }\n\n    case ProposalStatus.Executed: {\n      return 'green';\n    }\n\n    case ProposalStatus.Open: {\n      return 'green';\n    }\n\n    case ProposalStatus.Rejected: {\n      return 'red';\n    }\n\n    case ProposalStatus.FailedToExecute: {\n      return 'red';\n    }\n\n    case ProposalStatus.Removed: {\n      return 'yellow';\n    }\n\n    case ProposalStatus.Signed: {\n      return 'blue';\n    }\n\n    default: {\n      throw new Error('Unknow ProposalStatus inside `getChipColorByProposalType` functioni');\n    }\n  }\n}\n","export * from './getChipColorByKeyType';\nexport * from './getChipColorByProposalType';\n","import { AnimatePresence } from 'framer-motion';\nimport React, { cloneElement, createElement, FC, ReactElement, useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router';\nimport { HashRouter as Router, useLocation, useRoutes } from 'react-router-dom';\n\nimport { StoreData, usePageTitle } from './store';\n\n/* HOC for set page title */\nconst withTitle = (component: RouterConfigData['element'], title: string): FC => {\n  const Inner: FC = () => {\n    usePageTitle({ content: title });\n\n    return component || null;\n  };\n\n  return Inner;\n};\n\nexport interface RouterConfigData {\n  children?: RouterConfigData[];\n  element?: ReactElement;\n  path: string;\n  redirectTo?: string;\n  title?: string;\n}\n\nexport const Redirect: FC<{ to: string }> = ({ to }) => {\n  const navigate = useNavigate();\n\n  useEffect(() => navigate(to), [navigate, to]);\n\n  return null;\n};\n\ninterface Props {\n  config: RouterConfigData[];\n  setTitle?: StoreData['ui']['setTitle'];\n}\n\nconst Routes: FC<Props> = ({ config }) => {\n  const location = useLocation();\n  const _config = useMemo(() => {\n    const inner = config.slice();\n\n    inner.forEach((item) => {\n      // process redirect\n      if (item.redirectTo) {\n        item.element = <Redirect to={item.redirectTo} />;\n      }\n\n      if (item.title && item.element) {\n        item.element = createElement(withTitle(item.element, item.title));\n      }\n    });\n\n    return inner;\n  }, [config]);\n\n  const element = useRoutes(_config, { ...location, key: location.pathname });\n\n  return <AnimatePresence exitBeforeEnter>{element};</AnimatePresence>;\n};\n\nexport const RouterProvider: FC<Props> = ({ config }) => {\n  const _config = useMemo<RouterConfigData[]>(() => {\n    const inner = config.slice();\n\n    inner.forEach((item) => {\n      // process second level route\n      if (item.children) {\n        item.element = cloneElement(item.element as ReactElement, { children: <Routes config={item.children} /> });\n      }\n\n      // process redirect\n      if (item.redirectTo) {\n        item.element = <Redirect to={item.redirectTo} />;\n      }\n    });\n\n    return inner;\n    /* eslint-disable-next-line  react-hooks/exhaustive-deps */\n  }, [config]);\n\n  return useMemo(\n    (): JSX.Element => (\n      <Router>\n        <Routes config={_config} />\n      </Router>\n    ),\n    [_config]\n  );\n};\n","import { useModal } from '@nepoche/ui-hooks';\nimport { noop } from 'lodash';\nimport React, { createContext, FC, PropsWithChildren, useCallback, useEffect, useMemo, useState } from 'react';\n\nexport type Language = 'zh' | 'en';\nexport type Theme = 'normal' | 'dark';\nexport type Browser = 'firefox' | 'chrome' | 'unknown' | undefined;\n\nfunction useSetting<T>(key: string, defaultValue?: T): { value: T; setValue: (value: T) => void } {\n  const [value, _setValue] = useState<T>();\n\n  const setValue = useCallback(\n    (value: T): void => {\n      window.localStorage.setItem(key, value as any as string);\n      _setValue(value);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_setValue, key]\n  );\n\n  useEffect(() => {\n    const storaged = window.localStorage.getItem(key);\n\n    if (storaged) {\n      _setValue(storaged as any as T);\n    } else if (defaultValue) {\n      _setValue(defaultValue);\n    }\n    /* eslint-disable-next-line  react-hooks/exhaustive-deps */\n  }, [_setValue, defaultValue]);\n\n  return { setValue, value: value as any as T };\n}\n\nexport interface SettingDate {\n  browser: Browser;\n  endpoint: string;\n  theme: 'normal' | 'dark';\n  changeEndpoint: (endpoints: string) => void;\n  setTheme: (theme: Theme) => void;\n  settingVisible: boolean;\n  openSetting: () => void;\n  closeSetting: () => void;\n}\n\nexport const SettingContext = createContext<SettingDate>({\n  browser: 'unknown',\n  changeEndpoint: noop as any,\n  closeSetting: noop,\n  endpoint: '',\n  openSetting: noop,\n  setTheme: noop as any,\n  settingVisible: false,\n  theme: 'normal',\n});\n\nexport const SettingProvider: FC<PropsWithChildren<any>> = ({ children }) => {\n  const { close: closeSetting, open: openSetting, status: settingVisible } = useModal();\n  const [browser, setBrowser] = useState<Browser>();\n  const { setValue: setTheme, value: theme } = useSetting<Theme>('theme', 'normal');\n  const [endpoint, setEndpoint] = useState<string>('');\n\n  const changeEndpoint = useCallback(\n    (endpoint: string, reload?: boolean) => {\n      setEndpoint(endpoint);\n      window.localStorage.setItem('endpoint', endpoint);\n\n      if (reload) {\n        window.location.reload();\n      }\n    },\n    [setEndpoint]\n  );\n\n  // set endpoint\n  useEffect(() => {\n    // local setting\n    const localEndpoint = window.localStorage.getItem('endpoint');\n\n    // get search params from path\n    const searchParams = new URLSearchParams(window.location.search);\n    const urlEndpoint = searchParams.get('endpoint');\n\n    // if url endpoint exist, use url endpoint and don't store this config\n    if (urlEndpoint) {\n      setEndpoint(urlEndpoint);\n\n      return;\n    }\n\n    if (localEndpoint && /wss?:\\/\\//.test(localEndpoint)) {\n      setEndpoint(localEndpoint);\n\n      return;\n    }\n  }, [setEndpoint]);\n\n  // set browser type\n  useEffect(() => {\n    if (window.navigator.userAgent.includes('Firefox')) {\n      setBrowser('firefox');\n\n      return;\n    }\n\n    if (window.navigator.userAgent.includes('Chrome')) {\n      setBrowser('chrome');\n\n      return;\n    }\n\n    setBrowser('unknown');\n  }, []);\n\n  return (\n    <SettingContext.Provider\n      value={{\n        browser,\n        changeEndpoint,\n        closeSetting,\n        endpoint,\n        openSetting,\n        setTheme,\n        settingVisible,\n        theme,\n      }}\n    >\n      {children}\n    </SettingContext.Provider>\n  );\n};\n","// Copyright 2022 @webb-tools/\n// SPDX-License-Identifier: Apache-2.0\n\nimport { LoggerService } from '@webb-tools/app-util';\n\nexport type AppMode = 'development' | 'production';\nconst appLogger = LoggerService.get('App');\n\nexport function appMode(): AppMode {\n  // @ts-ignore\n  return process.env.NODE_ENV;\n}\n\nexport function isProduction() {\n  return !isDevelopment();\n}\n\nexport function isDevelopment() {\n  return appMode() === 'development';\n}\n\nexport function isLocalFixtures() {\n  return process.env.LOCAL_FIXTURES === 'true';\n}\n\nexport function withLocalFixtures() {\n  const dev = isDevelopment();\n\n  appLogger.info('local fixtures react app env: ', process.env.LOCAL_FIXTURES);\n  appLogger.info('isDevelopment? ', dev);\n\n  return dev && isLocalFixtures();\n}\n","import { ArkworksProvingManagerThread } from '@webb-tools/sdk-core';\n\nnew ArkworksProvingManagerThread('worker');\n","import { CircomProvingManagerThread } from '@webb-tools/sdk-core';\n\nnew CircomProvingManagerThread(null, 0, 'worker');\n","export * from './RouterProvider';\nexport * from './store';\nexport * from './app-mode';\nexport * from './arkworks-proving-manager.worker';\nexport * from './circom-proving-manager.worker';\nexport * from './SettingProvider';\n","import { Dispatch, MutableRefObject, SetStateAction, useCallback, useRef, useState } from 'react';\n\nexport interface ManipulationParams<T> {\n  state: T;\n  setState: Dispatch<SetStateAction<T>>;\n  stateRef: MutableRefObject<T>;\n}\n\nexport type ManipulationsConfig<T> = Record<string, (params: ManipulationParams<T>) => (...params: any[]) => any>;\n\ntype MapManipulation<T, M extends ManipulationsConfig<T>> = {\n  [k in keyof M]: ReturnType<M[k]>;\n};\n\ntype CreateStoreReturnType<T, M extends ManipulationsConfig<T>, R = MapManipulation<T, M>> = {\n  state: T;\n  setState: Dispatch<SetStateAction<T>>;\n  stateRef: MutableRefObject<T>;\n} & R;\n\nexport function createStore<T, M extends ManipulationsConfig<T>>(initializeStore: T, manipulations: M) {\n  return (): CreateStoreReturnType<T, M> => {\n    // use useState to initialize a store\n    const [state, _setState] = useState<T>(initializeStore);\n    const stateRef = useRef<T>(initializeStore);\n\n    const setState = useCallback(\n      (value: any): void => {\n        // update stateRef first\n        stateRef.current = value;\n\n        // update state\n        _setState(value);\n      },\n      [_setState]\n    );\n\n    const _manipulates: MapManipulation<T, M> = {} as any;\n\n    // generate manipulates\n    Object.keys(manipulations).forEach((key: keyof M) => {\n      (_manipulates as any)[key] = manipulations[key]({\n        setState,\n        state,\n        stateRef,\n      });\n    });\n\n    return {\n      setState,\n      state,\n      stateRef,\n      ..._manipulates,\n    } as CreateStoreReturnType<T, M>;\n  };\n}\n","import { useMemorized } from './useMemorized';\nimport { BareProps } from '@nepoche/dapp-types';\nimport { createContext, FC, ReactNode, useContext, useEffect, useLayoutEffect, useMemo } from 'react';\n\nimport { useApiQueryStore } from './modules/api-query';\nimport { SubMenu, UIData, useUIConfig, UseUIConfigReturnType } from './modules/ui';\n\nexport type StoreData = {\n  apiQuery: ReturnType<typeof useApiQueryStore>;\n  ui: UseUIConfigReturnType;\n};\n\nconst StoreContext = createContext<StoreData>({} as any);\n\nexport const StoreProvider: FC<BareProps> = ({ children }) => {\n  const apiQuery = useApiQueryStore();\n  const ui = useUIConfig();\n  const data = useMemo(\n    () => ({\n      apiQuery,\n      ui,\n    }),\n    [apiQuery, ui]\n  );\n\n  return <StoreContext.Provider value={data}>{children}</StoreContext.Provider>;\n};\n\nexport function useStore<T extends StoreData, K extends keyof T>(namespace: K): T[K] {\n  const context = useContext(StoreContext) as T;\n\n  return context[namespace];\n}\n\nexport function usePageTitle(config: { content: ReactNode; breadcrumb?: UIData['breadcrumb'] }): void {\n  const _config = useMemorized(config);\n  const ui = useStore('ui');\n\n  useEffect(() => {\n    if (!_config.content && !_config.breadcrumb) {\n      return;\n    }\n\n    ui.setTitle(_config);\n    /* eslint-disable-next-line */\n  }, [_config]);\n}\n\nexport function useSubMenu(config: SubMenu | null): void {\n  const _config = useMemorized(config);\n  const ui = useStore('ui');\n\n  useLayoutEffect(() => {\n    ui.setSubMenu(_config);\n\n    return (): void => ui.setSubMenu(null);\n    /* eslint-disable-next-line */\n  }, [_config]);\n}\n","import { createStore, ManipulationParams, ManipulationsConfig } from '../createStore';\n\ntype ApiQueryStoreState = Record<string, any>;\n\ninterface ApiQueryStoreManipulate<T = ApiQueryStoreState> extends ManipulationsConfig<T> {\n  get: (params: ManipulationParams<T>) => (key: string) => any;\n  set: (params: ManipulationParams<T>) => (key: string, value: any) => void;\n}\n\nexport const useApiQueryStore = createStore<ApiQueryStoreState, ApiQueryStoreManipulate<ApiQueryStoreState>>(\n  {},\n  {\n    get:\n      ({ state }) =>\n      (key: string): any => {\n        return state[key];\n      },\n    set:\n      ({ setState, stateRef }) =>\n      (key: string, value: any): void => {\n        // update query result\n        setState({\n          ...stateRef.current,\n          [key]: value,\n        });\n      },\n  }\n);\n","import { ReactNode, useCallback, useMemo, useReducer } from 'react';\n\nexport interface SubMenu {\n  content: {\n    content: ReactNode;\n    key: string;\n  }[];\n  active: string;\n  onClick: (key: string) => void;\n}\n\nexport type UIData = {\n  theme: string;\n  subMenu: SubMenu | null;\n  pageTitle: ReactNode;\n  breadcrumb: { content: string; path: string }[];\n};\n\nexport type UIAction =\n  | { type: 'set_theme'; value: string }\n  | { type: 'set_page_title'; value: { content: ReactNode; breadcrumb?: UIData['breadcrumb'] } }\n  | { type: 'set_sub_menu'; value: SubMenu | null };\n\nconst initState: UIData = {\n  breadcrumb: [],\n  pageTitle: '__empty',\n  subMenu: null,\n  theme: localStorage.getItem('_theme') || 'dark',\n};\n\nconst reducer = (state: UIData, action: UIAction): UIData => {\n  switch (action.type) {\n    case 'set_page_title': {\n      return {\n        ...state,\n        breadcrumb: action.value.breadcrumb ?? [],\n        pageTitle: action.value.content,\n      };\n    }\n\n    case 'set_theme': {\n      localStorage.setItem('_theme', action.value);\n      return {\n        ...state,\n        theme: action.value,\n      };\n    }\n\n    case 'set_sub_menu': {\n      return {\n        ...state,\n        subMenu: action.value,\n      };\n    }\n  }\n};\n\nexport interface UseUIConfigReturnType extends UIData {\n  setTitle: (config: { content: ReactNode }) => void;\n  setTheme: (theme: string) => void;\n  setSubMenu: (menu: SubMenu | null) => void;\n}\n\nconst storage = Storage;\n\nexport const useUIConfig = (): UseUIConfigReturnType => {\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const setTitle = useCallback(\n    (config: { content: ReactNode; breadcrumb?: UIData['breadcrumb'] }) => {\n      dispatch({\n        type: 'set_page_title',\n        value: config,\n      });\n    },\n    [dispatch]\n  );\n\n  const setTheme = useCallback(\n    (theme: string) => {\n      dispatch({\n        type: 'set_theme',\n        value: theme,\n      });\n    },\n    [dispatch]\n  );\n\n  const setSubMenu = useCallback(\n    (value: SubMenu | null) => {\n      dispatch({\n        type: 'set_sub_menu',\n        value: value,\n      });\n    },\n    [dispatch]\n  );\n\n  return useMemo(\n    () => ({\n      ...state,\n      setSubMenu,\n      setTheme,\n      setTitle,\n    }),\n    [state, setTitle, setTheme, setSubMenu]\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\n\nexport const useMemorized = <T>(value: T): T => {\n  const [_value, setValue] = useState<T>(value);\n  const ref = useRef<T>(value);\n\n  useEffect(() => {\n    if (JSON.stringify(ref.current) !== JSON.stringify(value)) {\n      ref.current = value;\n      setValue(value);\n    }\n  }, [value, setValue]);\n\n  return _value;\n};\n","export * from './useCopyable';\nexport * from './useModal';\n","import copyToClipboard from 'copy-to-clipboard';\nimport { useEffect, useRef, useState } from 'react';\n\ntype SetTimeoutReturnType = ReturnType<typeof setTimeout>;\n\n/**\n *\n * @param {number} display The display time to reset time copy state in miliseconds (default 3000)\n * @returns {Object} An object contains `isCopied`, `copiedText` and `copy` function\n */\nexport const useCopyable = (display = 3000) => {\n  const ref = useRef<string>('');\n  const [isCopied, setIsCopied] = useState(false);\n  const [_timeout, _setTimeout] = useState<SetTimeoutReturnType | undefined>();\n\n  const copy = (value: string) => {\n    if (isCopied) {\n      return;\n    }\n\n    ref.current = value;\n    copyToClipboard(value);\n    setIsCopied(true);\n\n    const timeoutObj = setTimeout(() => setIsCopied(false), display);\n    _setTimeout(timeoutObj);\n  };\n\n  // Clear the timeout if the component unmount\n  useEffect(() => {\n    return () => clearTimeout(_timeout);\n  }, [_timeout]);\n\n  return {\n    isCopied,\n    copy,\n    copiedText: ref.current,\n  };\n};\n","import { noop } from 'lodash';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\ninterface ReturnData {\n  close: () => void;\n  open: () => void;\n  status: boolean;\n  toggle: () => void;\n  update: (status: boolean) => void;\n}\n\nexport const useModal = (defaultStatus = false, callback?: () => void): ReturnData => {\n  const [status, setStatus] = useState<boolean>(defaultStatus);\n  const open = useCallback((): void => setStatus(true), []);\n  const close = useCallback((): void => setStatus(false), []);\n  const toggle = useCallback((): void => setStatus(!status), [status]);\n  const _callback = useRef<() => void>(callback || noop);\n  const update = useCallback((status: boolean): void => setStatus(status), []);\n\n  useEffect(() => {\n    _callback.current();\n  }, [status, _callback]);\n\n  return { close, open, status, toggle, update };\n};\n","import * as AvatarPrimitive from '@radix-ui/react-avatar';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport cx from 'classnames';\nimport React, { useEffect, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport Identicon from '@polkadot/react-identicon';\n\nimport { AvatarProps } from './types';\nimport { getAvatarSizeInPx } from './utils';\n\n/**\n * Webb Avatar component\n *\n * Props:\n *\n * - `size`: Size of avatar - `md`: 24px, `lg`: 48px (default: `md`)\n * - `darkMode`: Control darkMode using `js`, leave it's empty to control dark mode using `css`\n * - `src`: Image source for avatar\n * - `alt`: Alternative text if source is unavailable\n * - `fallback`: Optional fallback text if source image is unavailable\n * - `className`: Outer class name\n *\n * @example\n *\n * <Avatar alt=\"Webb Logo\" src=\"webblogo.png\" />\n */\nexport const Avatar: React.FC<AvatarProps> = (props) => {\n  const {\n    alt,\n    className: outerClassName,\n    darkMode,\n    fallback,\n    size = 'md',\n    sourceVariant = 'address',\n    src,\n    theme = 'polkadot',\n    value: valueProp,\n  } = props;\n\n  const sizeClassName = useMemo(() => (size === 'md' ? 'w-6 h-6' : 'w-12 h-12'), [size]);\n\n  const classNames = useMemo(() => {\n    const borderColor =\n      typeof darkMode === 'boolean'\n        ? darkMode\n          ? ('border-mono-180' as const)\n          : ('border-mono-0' as const)\n        : ('border-mono-0 dark:border-mono-180' as const);\n\n    const bg =\n      typeof darkMode === 'boolean'\n        ? darkMode\n          ? ('bg-mono-180' as const)\n          : ('bg-mono-0' as const)\n        : ('bg-mono-0 dark:bg-mono-180' as const);\n\n    const text =\n      typeof darkMode === 'boolean'\n        ? darkMode\n          ? ('text-mono-0' as const)\n          : ('text-mono-180' as const)\n        : ('text-mono-180 dark:text-mono-0' as const);\n\n    return {\n      borderColor,\n      bg,\n      text,\n    };\n  }, [darkMode]);\n\n  const typoVariant = useMemo(() => (size === 'md' ? 'body4' : 'body1'), [size]);\n\n  const valueAddress = useMemo(() => (sourceVariant === 'address' ? valueProp : undefined), [valueProp, sourceVariant]);\n\n  useEffect(() => {\n    if (!valueProp && !src) {\n      throw new Error('Must provide `src` or `value` for Avatar component');\n    }\n  }, [src, valueProp]);\n\n  return (\n    <AvatarPrimitive.Root\n      className={twMerge(\n        'inline-flex items-center justify-center align-middle overflow-hidden rounded-full border box-border',\n        sizeClassName,\n        classNames.borderColor,\n        classNames.bg,\n        outerClassName\n      )}\n    >\n      {valueAddress && <Identicon size={getAvatarSizeInPx(size)} value={valueAddress} theme={theme} />}\n\n      {!valueAddress && (\n        <>\n          <AvatarPrimitive.Image src={src} alt={alt} className='object-cover w-full h-full' />\n          {fallback && (\n            <AvatarPrimitive.Fallback className={cx('w-full h-full flex justify-center items-center', classNames.text)}>\n              <Typography variant={typoVariant} fw='semibold' component='span' className={classNames.text}>\n                {fallback.substring(0, 2)}\n              </Typography>\n            </AvatarPrimitive.Fallback>\n          )}\n        </>\n      )}\n    </AvatarPrimitive.Root>\n  );\n};\n","export * from './Avatar';\n","import { AvatarProps } from './types';\n\n/**\n * Get the avatar size in pixel for other avatar components to consistent with WebbUI Avatar component\n * @param size The `Avatar` size component\n * @returns the size in pixel for other avatar components\n */\nexport function getAvatarSizeInPx(size: AvatarProps['size'] = 'md') {\n  switch (size) {\n    case 'md': {\n      return 24;\n    }\n\n    case 'lg': {\n      return 48;\n    }\n\n    default: {\n      throw new Error('Unknown avatar size in [getAvatarSizeInPx] function');\n    }\n  }\n}\n","import { Typography } from '@nepoche/webb-ui-components/typography';\nimport React, { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { AvatarChildElement, AvatarGroupProps } from './types';\n\n/**\n * Webb Avatar Group - Use to display stacked avatar list\n *\n * Props:\n *\n * - `max`: Max avatars to show before +n (default: `3`)\n * - `total`: The total number of avatars. Used for calculating the number of extra avatars (default: `children.length`)\n * - `children`: Must be a list of `Avatar` components\n *\n * @example\n *\n * ```jsx\n *  <AvatarGroup max={3}>\n *    <Avatar alt=\"Authority1\" src=\"/static/images/avatar/1.jpg\" />\n *    <Avatar alt=\"Authority2\" src=\"/static/images/avatar/2.jpg\" />\n *    <Avatar alt=\"Authority3\" src=\"/static/images/avatar/3.jpg\" />\n *  </AvatarGroup>\n * ```\n */\nexport const AvatarGroup = forwardRef<HTMLDivElement, AvatarGroupProps>(\n  ({ children: childrenProp, className, max = 3, total, ...props }, ref) => {\n    const children: AvatarChildElement[] = useMemo(() => {\n      return React.Children.toArray(childrenProp).filter((child) => React.isValidElement(child));\n    }, [childrenProp]);\n\n    const totalAvatars = useMemo(() => total || children.length, [children.length, total]);\n\n    const extraAvatars = useMemo(() => totalAvatars - max, [totalAvatars, max]);\n\n    const mergedClsx = useMemo(() => twMerge('flex items-center space-x-1', className), [className]);\n\n    return (\n      <div {...props} className={mergedClsx} ref={ref}>\n        <div className='translate-x-1'>\n          {children.slice(0, max).map((child, index) => {\n            return React.cloneElement(child, {\n              ...child.props,\n              size: 'md',\n              className: 'mx-[-4px] last:mx-0',\n            });\n          })}\n        </div>\n        {extraAvatars > 0 && (\n          <Typography className='inline-block translate-x-1' variant='body3'>\n            +{extraAvatars} others\n          </Typography>\n        )}\n      </div>\n    );\n  }\n);\n","export * from './AvatarGroup';\n","import { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Button, Input, InputWrapper, Label, TitleWithInfo } from '..';\nimport { AmountInputProps } from './types';\n\nexport const AmountInput = forwardRef<HTMLDivElement, AmountInputProps>(\n  ({ amount, className, id = 'amount', info, onAmountChange, onMaxBtnClick, ...props }, ref) => {\n    const mergedClsx = useMemo(() => twMerge('cursor-auto', className), [className]);\n\n    return (\n      <InputWrapper {...props} className={mergedClsx} ref={ref}>\n        <div className='flex flex-col space-y-1'>\n          <Label htmlFor={id}>\n            <TitleWithInfo\n              title={id}\n              info={info}\n              variant='body4'\n              titleComponent='span'\n              className='text-mono-100 dark:text-mono-80'\n              titleClassName='uppercase !text-inherit'\n            />\n          </Label>\n\n          <Input id={id} name={id} value={amount} onChange={onAmountChange} placeholder='0' size='sm' />\n        </div>\n\n        <Button onClick={onMaxBtnClick} variant='utility' size='sm'>\n          Max\n        </Button>\n      </InputWrapper>\n    );\n  }\n);\n","import { ChevronRight, TokenIcon } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { forwardRef } from 'react';\n\nimport { Label } from '../Label';\nimport { TitleWithInfo } from '../TitleWithInfo';\nimport { InputWrapper } from './InputWrapper';\nimport { ChainInputProps } from './types';\n\nexport const ChainInput = forwardRef<HTMLDivElement, ChainInputProps>(\n  ({ chain, chainType, id, info, ...props }, ref) => {\n    return (\n      <InputWrapper {...props} ref={ref}>\n        <div className='flex flex-col space-y-1'>\n          <Label htmlFor={id}>\n            <TitleWithInfo\n              title={(chainType === 'source' ? 'Source' : 'Destination') + ' chain'}\n              info={info}\n              variant='body4'\n              className='text-mono-100 dark:text-mono-80'\n              titleClassName='uppercase !text-inherit'\n            />\n          </Label>\n\n          {chain ? (\n            <p className='flex items-center space-x-1'>\n              <TokenIcon name={chain.symbol.trim().toLowerCase()} size='lg' />\n\n              <Typography component='span' variant='body1' fw='bold'>\n                {chain.name}\n              </Typography>\n            </p>\n          ) : (\n            <Typography variant='body1' fw='bold'>\n              Select chain\n            </Typography>\n          )}\n        </div>\n\n        <ChevronRight className='inline-block' />\n      </InputWrapper>\n    );\n  }\n);\n","import React, { forwardRef, useCallback, useEffect, useState } from 'react';\n\nimport { Button } from '../Button';\nimport { Label } from '../Label';\nimport { TitleWithInfo } from '../TitleWithInfo';\nimport { FixedAmountProps } from './types';\nimport { InputWrapper } from '.';\n\nexport const FixedAmount = forwardRef<HTMLDivElement, FixedAmountProps>(\n  ({ id, info, onChange: onChangeProp, value: valueProp, values, ...props }, ref) => {\n    const [value, setValue] = useState(() => valueProp);\n\n    const onClick = useCallback(\n      (nextVal: number) => {\n        setValue(nextVal);\n        onChangeProp?.(nextVal);\n      },\n      [onChangeProp, setValue]\n    );\n\n    useEffect(() => {\n      setValue(valueProp);\n    }, [valueProp]);\n\n    return (\n      <InputWrapper {...props} ref={ref}>\n        <div className='flex flex-col w-full space-y-2'>\n          <Label htmlFor={id}>\n            <TitleWithInfo\n              title='Fixed amount'\n              info={info}\n              variant='body4'\n              titleComponent='span'\n              className='text-mono-100 dark:text-mono-80'\n              titleClassName='uppercase !text-inherit'\n            />\n          </Label>\n\n          <div className='flex space-x-2'>\n            {values.map((val, idx) => (\n              <div key={`${val}-${idx}`} className='cursor-pointer grow shrink basis-0'>\n                <Button\n                  isFullWidth\n                  size='sm'\n                  variant='utility'\n                  className='justify-center'\n                  isDisabled={value === val}\n                  onClick={() => onClick(val)}\n                >\n                  {val.toFixed(2)}\n                </Button>\n              </div>\n            ))}\n          </div>\n        </div>\n      </InputWrapper>\n    );\n  }\n);\n","import { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { InputWrapperProps } from './types';\n\nexport const InputWrapper = forwardRef<HTMLDivElement, InputWrapperProps>(({ children, className, ...props }, ref) => {\n  const mergedClsx = useMemo(\n    () =>\n      twMerge(\n        'bg-mono-0 dark:bg-mono-140 px-4 py-2 min-w-[350px] rounded-lg flex items-center justify-between cursor-pointer',\n        className\n      ),\n    [className]\n  );\n\n  return (\n    <div {...props} className={mergedClsx} ref={ref}>\n      {children}\n    </div>\n  );\n});\n","import { forwardRef, useCallback, useEffect, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Button } from '../Button';\nimport { Input } from '../Input';\nimport { Label } from '../Label';\nimport { TitleWithInfo } from '../TitleWithInfo';\nimport { InputWrapper } from './InputWrapper';\nimport { RecipientInputProps } from './types';\n\nexport const RecipientInput = forwardRef<HTMLDivElement, RecipientInputProps>(\n  ({ className, id = 'recipient', info, onChange: onChangeProp, value, ...props }, ref) => {\n    const [address, setAddress] = useState<string | undefined>(() => value);\n\n    const onClick = useCallback(async () => {\n      const addr = await window.navigator.clipboard.readText();\n\n      setAddress(addr);\n    }, [setAddress]);\n\n    const onChange = useCallback(\n      (nextVal: string | number) => {\n        setAddress(nextVal.toString());\n        onChangeProp?.(nextVal);\n      },\n      [onChangeProp, setAddress]\n    );\n\n    useEffect(() => {\n      setAddress(value);\n    }, [value, setAddress]);\n\n    return (\n      <InputWrapper {...props} className={twMerge('cursor-auto', className)} ref={ref}>\n        <div className='flex flex-col w-full space-y-1'>\n          <Label htmlFor={id}>\n            <TitleWithInfo\n              title='Recipient'\n              info={info}\n              variant='body4'\n              titleComponent='span'\n              className='text-mono-100 dark:text-mono-80'\n              titleClassName='uppercase !text-inherit'\n            />\n          </Label>\n\n          <Input placeholder='Enter recipient wallet address' id={id} size='sm' value={address} onChange={onChange} />\n        </div>\n\n        {!address && (\n          <Button variant='utility' size='sm' onClick={onClick}>\n            Patse\n          </Button>\n        )}\n      </InputWrapper>\n    );\n  }\n);\n","import { ChevronRight, ExternalLinkLine } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { shortenString } from '@nepoche/webb-ui-components/utils';\nimport { forwardRef } from 'react';\n\nimport { Avatar } from '../Avatar';\nimport { Label } from '../Label';\nimport { TitleWithInfo } from '../TitleWithInfo';\nimport { InputWrapper } from './InputWrapper';\nimport { RelayerInputProps } from './types';\n\nexport const RelayerInput = forwardRef<HTMLDivElement, RelayerInputProps>(\n  ({ externalLink, id, info, relayerAddress, ...props }, ref) => {\n    return (\n      <InputWrapper {...props} ref={ref}>\n        <div className='flex flex-col space-y-1'>\n          <Label htmlFor={id}>\n            <TitleWithInfo\n              title='Relayer'\n              variant='body4'\n              info={info}\n              titleComponent='span'\n              className='text-mono-100 dark:text-mono-80'\n              titleClassName='uppercase !text-inherit'\n            />\n          </Label>\n\n          {relayerAddress ? (\n            <div className='flex items-center space-x-1'>\n              <Avatar value={relayerAddress} />\n\n              <Typography component='span' variant='body1' fw='bold'>\n                {shortenString(relayerAddress)}\n              </Typography>\n\n              {externalLink && <ExternalLinkLine />}\n            </div>\n          ) : (\n            <Typography variant='body1' fw='bold'>\n              Add a relayer\n            </Typography>\n          )}\n        </div>\n\n        <ChevronRight className='inline-block' />\n      </InputWrapper>\n    );\n  }\n);\n","import { getRoundedAmountString } from '@nepoche/webb-ui-components/utils';\nimport { ChevronRight, TokenIcon } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport cx from 'classnames';\nimport { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Label } from '../Label';\nimport { TitleWithInfo } from '../TitleWithInfo';\nimport { InputWrapper } from './InputWrapper';\nimport { ShieldedAssetInputProps } from './types';\n\nexport const ShieldedAssetInput = forwardRef<HTMLDivElement, ShieldedAssetInputProps>(\n  ({ asset, className, id, info, ...props }, ref) => {\n    const [balance, balanceInUsd] = useMemo(() => {\n      let balance: string | undefined;\n      let balanceInUsd: string | undefined;\n\n      if (asset?.balance) {\n        balance = getRoundedAmountString(parseFloat(asset.balance.toString()));\n      }\n\n      if (asset?.balanceInUsd) {\n        balanceInUsd = getRoundedAmountString(parseFloat(asset.balanceInUsd.toString()));\n      }\n\n      return [balance, balanceInUsd];\n    }, [asset]);\n\n    return (\n      <InputWrapper {...props} className={twMerge(cx({ 'items-start': balance }), className)} ref={ref}>\n        <div className='flex flex-col space-y-1'>\n          <Label htmlFor={id}>\n            <TitleWithInfo\n              title='Shielded Asset'\n              variant='body4'\n              info={info}\n              titleComponent='span'\n              className='text-mono-100 dark:text-mono-80'\n              titleClassName='uppercase !text-inherit'\n            />\n          </Label>\n\n          {asset ? (\n            <div className='flex items-center space-x-1'>\n              <div className='flex items-center -space-x-2'>\n                <TokenIcon size='lg' name={asset.token1Symbol.toLowerCase()} />\n                <TokenIcon size='lg' name={asset.token2Symbol.toLowerCase()} />\n              </div>\n\n              <Typography component='span' variant='body1' fw='bold'>\n                {asset.token1Symbol.toUpperCase()}/{asset.token2Symbol.toUpperCase()}\n              </Typography>\n            </div>\n          ) : (\n            <Typography variant='body1' fw='bold'>\n              Select Shielded Asset\n            </Typography>\n          )}\n        </div>\n\n        {balance ? (\n          <div className='flex flex-col items-end space-y-1'>\n            <Typography\n              variant='body4'\n              fw='bold'\n              component='span'\n              className='uppercase text-mono-100 dark:text-mono-80'\n            >\n              Balance: {balance} {balanceInUsd ? `≈ $${balanceInUsd}` : ''}\n            </Typography>\n\n            <ChevronRight className='inline-block grow' />\n          </div>\n        ) : (\n          <ChevronRight className='inline-block' />\n        )}\n      </InputWrapper>\n    );\n  }\n);\n","import { getRoundedAmountString } from '@nepoche/webb-ui-components/utils';\nimport { ChevronRight, TokenIcon } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport cx from 'classnames';\nimport { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { InputWrapper, Label, TitleWithInfo } from '..';\nimport { TokenInputProps } from './types';\n\n/**\n * Token Input component, for selecting token on the bridge\n *\n * @example\n *\n * ```jsx\n *  <TokenInput />\n *  <TokenInput token={{ symbol: 'eth', balance: 1.2, balanceInUsd: 1000 }} />\n * ```\n */\nexport const TokenInput = forwardRef<HTMLDivElement, TokenInputProps>(\n  ({ className, id, info, token, ...props }, ref) => {\n    const [balance, balanceInUsd] = useMemo(() => {\n      let balance: string | undefined;\n      let balanceInUsd: string | undefined;\n\n      if (token?.balance) {\n        balance = getRoundedAmountString(parseFloat(token.balance.toString()));\n      }\n\n      if (token?.balanceInUsd) {\n        balanceInUsd = getRoundedAmountString(parseFloat(token.balanceInUsd.toString()));\n      }\n\n      return [balance, balanceInUsd];\n    }, [token]);\n\n    return (\n      <InputWrapper {...props} className={twMerge(cx({ 'items-start': balance }), className)} ref={ref}>\n        <div className='flex flex-col space-y-1'>\n          <Label htmlFor={id}>\n            <TitleWithInfo\n              title='Token'\n              variant='body4'\n              info={info}\n              titleComponent='span'\n              className='text-mono-100 dark:text-mono-80'\n              titleClassName='uppercase !text-inherit'\n            />\n          </Label>\n\n          {token ? (\n            <p className='flex items-center space-x-1'>\n              <TokenIcon name={token.symbol.trim().toLowerCase()} size='lg' />\n\n              <Typography component='span' variant='body1' fw='bold'>\n                {token.symbol.trim().toUpperCase()}\n              </Typography>\n            </p>\n          ) : (\n            <Typography variant='body1' fw='bold'>\n              Select token\n            </Typography>\n          )}\n        </div>\n\n        {balance ? (\n          <div className='flex flex-col items-end space-y-1'>\n            <Typography\n              variant='body4'\n              fw='bold'\n              component='span'\n              className='uppercase text-mono-100 dark:text-mono-80'\n            >\n              Balance: {balance} {balanceInUsd ? `≈ $${balanceInUsd}` : ''}\n            </Typography>\n\n            <ChevronRight className='inline-block grow' />\n          </div>\n        ) : (\n          <ChevronRight className='inline-block' />\n        )}\n      </InputWrapper>\n    );\n  }\n);\n","export * from './AmountInput';\nexport * from './ChainInput';\nexport * from './FixedAmount';\nexport * from './InputWrapper';\nexport * from './RecipientInput';\nexport * from './RelayerInput';\nexport * from './ShieldedAssetInput';\nexport * from './TokenInput';\n","import cx from 'classnames';\nimport React from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { ButtonSpinner } from './ButtonSpinner';\nimport { ButtonContentProps, ButtonProps } from './types';\nimport { useButtonProps } from './use-button-props';\nimport { getButtonClassNameByVariant } from './utils';\n\n/**\n * The Webb Button Component\n *\n * Props:\n *\n * - `isLoading`: If `true`, the button will show a spinner\n * - `isDisabled`: If `true`, the button will be disabled\n * - `loadingText`: The label to show in the button when `isLoading` is true. If no text is passed, it only shows the spinner\n * - `variant`: The button variant (default `primary`)\n * - `leftIcon`: If added, the button will show an icon before the button's label\n * - `rightIcon`:If added, the button will show an icon after the button's label\n * - `spinner`: Replace the spinner component when `isLoading` is set to `true`\n * - `spinnerPlacement`: It determines the placement of the spinner when `isLoading` is `true`\n * - `size`: The button size\n *\n * @example\n *\n * ```jsx\n *  <Button variant=\"secondary\">Button</Button>\n *  <Button variant=\"utility\" isLoading>Button</Button>\n * ```\n */\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n  const {\n    as: asProps,\n    children,\n    className,\n    isDisabled,\n    isFullWidth,\n    isLoading,\n    leftIcon,\n    loadingText,\n    rightIcon,\n    size = 'md',\n    spinner,\n    spinnerPlacement = 'start',\n    variant = 'primary',\n    ...restProps\n  } = props;\n\n  const [buttonProps, { tagName: Component }] = useButtonProps({ tagName: asProps, isDisabled, ...restProps });\n\n  const mergedClassName = twMerge(getButtonClassNameByVariant(variant, size), className);\n\n  const contentProps = { children, leftIcon, rightIcon };\n\n  return (\n    <div className={cx('inline-block', { 'w-full': isFullWidth })}>\n      <Component\n        {...restProps}\n        {...buttonProps}\n        disabled={buttonProps.disabled || isLoading}\n        className={cx(mergedClassName, { 'w-full': isFullWidth })}\n        ref={ref}\n      >\n        {isLoading && spinnerPlacement === 'start' && <ButtonSpinner label={loadingText}>{spinner}</ButtonSpinner>}\n\n        {isLoading ? (\n          loadingText || (\n            <span className='opacity-0'>\n              <ButtonContent {...contentProps} />\n            </span>\n          )\n        ) : (\n          <ButtonContent {...contentProps} />\n        )}\n\n        {isLoading && spinnerPlacement === 'end' && (\n          <ButtonSpinner label={loadingText} placement='end'>\n            {spinner}\n          </ButtonSpinner>\n        )}\n      </Component>\n    </div>\n  );\n});\n\n/***** Internal components */\n\nfunction ButtonContent(props: ButtonContentProps) {\n  const { children, leftIcon, rightIcon } = props;\n\n  return (\n    <>\n      {leftIcon && <span className={cx(`mr-2`, 'block !text-inherit')}>{leftIcon}</span>}\n      <span className='block !text-inherit'>{children}</span>\n      {rightIcon && <span className={cx(`ml-2`, 'block !text-inherit')}>{rightIcon}</span>}\n    </>\n  );\n}\n","import { Spinner } from '@nepoche/webb-ui-components/icons';\nimport React from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { ButtonSpinnerProps } from './types';\n\nexport const ButtonSpinner: React.FC<ButtonSpinnerProps> = (props) => {\n  const { children = <Spinner darkMode={props.darkMode} size='lg' />, className, label, placement = 'start' } = props;\n\n  const mergedClassName = twMerge(\n    'flex items-center',\n    label ? 'relative' : 'absolute',\n    label ? (placement === 'start' ? `mr-2` : `ml-2`) : undefined,\n    className\n  );\n\n  return <div className={mergedClassName}>{children}</div>;\n};\n","export * from './Button';\n","import { AriaButtonProps, UseButtonPropsMetadata, UseButtonPropsOptions } from './types';\n\nexport function isTrivialHref(href?: string) {\n  return !href || href.trim() === '#';\n}\n\nexport function useButtonProps({\n  href,\n  isDisabled,\n  onClick,\n  rel,\n  role,\n  tabIndex = 0,\n  tagName,\n  target,\n  type,\n}: UseButtonPropsOptions): [AriaButtonProps, UseButtonPropsMetadata] {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta: UseButtonPropsMetadata = { tagName };\n  if (tagName === 'button') {\n    return [{ type: (type as any) || 'button', disabled: isDisabled }, meta];\n  }\n\n  const handleClick = (event: React.MouseEvent | React.KeyboardEvent) => {\n    if (isDisabled || (tagName === 'a' && isTrivialHref(href))) {\n      event.preventDefault();\n    }\n\n    if (isDisabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick?.(event);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href ||= '#';\n    if (isDisabled) {\n      href = undefined;\n    }\n  }\n\n  return [\n    {\n      role: role ?? 'button',\n      // explicitly undefined so that it overrides the props disabled in a spread\n      // e.g. <Tag {...props} {...hookProps} />\n      disabled: undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      href,\n      target: tagName === 'a' ? target : undefined,\n      'aria-disabled': !isDisabled ? undefined : isDisabled,\n      rel: tagName === 'a' ? rel : undefined,\n      onClick: handleClick,\n      onKeyDown: handleKeyDown,\n    },\n    meta,\n  ];\n}\n","import { twMerge } from 'tailwind-merge';\n\nimport { ButtonClassNames, ButtonSize, ButtonVariant } from './types';\n\nconst classNames: ButtonClassNames = {\n  primary: {\n    base: {\n      common:\n        'rounded-full px-9 py-2 bg-mono-200 border-2 border-transparent text-mono-0 font-bold dark:bg-mono-180 dark:border-2 dark:border-mono-20 dark:text-mono-20',\n      hover: 'hover:bg-mono-160 dark:hover:bg-mono-160',\n      active: 'active:border-mono-200 dark:active:bg-mono-20 dark:active:border-mono-160 dark:active:text-mono-180',\n      disabled: 'disabled:bg-mono-80 dark:disabled:bg-mono-80 dark:disabled:border-transparent',\n    },\n    md: 'body1',\n    sm: 'body3',\n  },\n  secondary: {\n    base: {\n      common:\n        'rounded-full px-9 py-2 bg-mono-0 border-2 border-mono-200 text-mono-200 font-bold dark:bg-mono-140 dark:border-mono-140 dark:text-mono-20',\n      hover: 'hover:border-mono-140 hover:text-mono-140 dark:hover:bg-mono-100 dark:hover:border-mono-100',\n      active: 'active:bg-mono-20 dark:active:text-mono-0',\n      disabled:\n        'disabled:border-mono-100 disabled:text-mono-100 disabled:bg-mono-20 dark:disabled:border-mono-100 dark:disabled:text-mono-100 dark:disabled:bg-mono-20',\n    },\n    md: 'body1',\n    sm: 'body3',\n  },\n  utility: {\n    base: {\n      common:\n        'rounded-lg px-3 py-2 bg-blue-0 border border-transparent text-blue-70 dark:bg-blue-120 dark:text-blue-20',\n      hover: 'hover:bg-blue-10 hover:text-blue-90 dark:hover:bg-blue-110',\n      active: 'active:border-blue-50 dark:active:border-blue-50',\n      disabled:\n        'disabled:border-none disabled:bg-mono-40 disabled:text-mono-120 disabled:border-transparent dark:disabled:bg-mono-140 dark:disabled:text-mono-100',\n    },\n    md: 'body1 font-semibold',\n    sm: 'utility font-bold uppercase',\n  },\n  link: {\n    base: {\n      common: 'text-blue border-b-[1.6px] border-transparent dark:text-blue-20',\n      hover: 'hover:border-blue dark:hover:text-blue-40 dark:hover:border-blue-40',\n      active: 'active:text-blue-90 active:border-blue-90 dark:active:text-blue dark:active:border-blue',\n      disabled: 'disabled:text-blue-30 disabled:dark:text-blue-110',\n    },\n    md: 'body1 font-semibold',\n    sm: 'utility font-bold uppercase',\n  },\n};\n\n/**\n * Get the tailwind class name to style the button based on variant\n * @param variant Represents the button variant\n * @param darkMode Variable to control dark mode in `js`\n * @returns tailwind className to style to button based on variant\n */\nexport function getButtonClassNameByVariant(variant: ButtonVariant, size: ButtonSize) {\n  const commonClsx = 'box-border flex items-center disabled:pointer-events-none text-center';\n  const { active, common, disabled, hover } = classNames[variant]['base'];\n  return twMerge(commonClsx, common, hover, active, disabled, classNames[variant][size]);\n}\n","import React, { useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { CardProps } from './types';\n\n/**\n * The `Card` component\n * Setup styles, spacing vertically between `block` components\n *\n * @example\n *\n * ```jsx\n *  <Card>\n *    ...\n *  </Card>\n * ```\n */\nexport const Card = React.forwardRef<HTMLDivElement, CardProps>(({ children, className, ...props }, ref) => {\n  const cardClsx = useMemo(\n    () => twMerge('flex flex-col w-full p-4 space-y-6 rounded-lg bg-mono-0 dark:bg-mono-160', className),\n    [className]\n  );\n\n  return (\n    <div {...props} className={cardClsx} ref={ref}>\n      {children}\n    </div>\n  );\n});\n","export * from './Card';\n","import { twMerge } from 'tailwind-merge';\n\nimport { TitleWithInfo } from '../TitleWithInfo';\nimport { CardTableProps } from './types';\n\n/**\n * The style wrapper component for card with table. The component will display the title along with tooltip info\n * and displays `leftTitle` as an argument. Use to wrap around a table component\n *\n * @example\n *\n * ```jsx\n *    <CardTable\n *      leftTitle={\n *        <Filter>\n *          // ...\n *        </Filter>\n *      }\n *    >\n *      <Table\n *        {...props}\n *      />\n *    </CardTable>\n * ```\n */\nexport const CardTable: React.FC<CardTableProps> = ({ children, className, leftTitle, titleProps, ...props }) => {\n  return (\n    <div {...props} className={twMerge('rounded-lg bg-mono-0 dark:bg-mono-180 overflow-hidden', className)}>\n      {/** Title and filter */}\n      <div className='flex items-center justify-between px-6 pt-4 pb-2'>\n        <TitleWithInfo {...titleProps} />\n\n        {leftTitle}\n      </div>\n\n      {/** Table */}\n      {children}\n    </div>\n  );\n};\n","export * from './CardTable';\n","import cx from 'classnames';\nimport React from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { CheckBoxProps } from './types';\n\n/**\n * The `CheckBox` component\n *\n * Props:\n *\n * - `isDisabled`: If `true`, the checkbox will be disabled\n * - `spacing`: The spacing between the checkbox and its label text (default: `4`)\n * - `isChecked`: If `true`, the checkbox will be checked.\n * - `onChange`: The callback invoked when the checked state of the `Checkbox` changes\n * - `inputProps`: Additional props to be forwarded to the `input` element\n * - `htmlFor`: Input id and value for `htmlFor` attribute of `<label></label>` tag\n * - `labelClassName`: Class name in case of overriding the tailwind class of the `<label></label>` tag\n * - `wrapperClassName`: Class name in case of overriding the tailwind class of the checkbox container\n *\n * @example\n *\n * ```jsx\n *  <CheckBox />\n *  <CheckBox isDisabled />\n *  <CheckBox isDisabled>Check mark</CheckBox>\n * ```\n */\nexport const CheckBox: React.FC<CheckBoxProps> = (props) => {\n  const {\n    children,\n    className,\n    inputProps = {},\n    isChecked,\n    isDisabled,\n    onChange,\n    spacing = 4,\n    labelClassName: labelClsxProp,\n    wrapperClassName,\n  } = props;\n\n  const inputClsx = 'form-checkbox peer transition-none bg-mono-0 w-[18px] h-[18px] rounded border border-mono-80 ';\n  const inputHoverClsx = 'hover:bg-blue-0 hover:border-blue-50 hover:shadow-sm hover:shadow-blue-10';\n  const inputCheckedClsx = 'checked:bg-blue dark:checked:bg-blue-30';\n  const inputDisabledClsx =\n    'disabled:border-mono-60 disabled:cursor-not-allowed disabled:bg-mono-0 disabled:shadow-none dark:disabled:bg-mono-140 dark:disabled:border-mono-120';\n\n  const mergedInputClsx = twMerge(inputClsx, inputHoverClsx, inputCheckedClsx, inputDisabledClsx, className);\n\n  const spacingClx = `ml-${spacing}` as const;\n  const labelClsx = cx(\n    'inline-block body1 peer-disabled:cursor-not-allowed',\n    isDisabled ? 'text-mono-120' : 'text-mono-140 dark:text-mono-20',\n    spacingClx\n  );\n  const mergedLabelClsx = twMerge(labelClsx, labelClsxProp);\n\n  return (\n    <span className={wrapperClassName}>\n      <label className='inline-flex justify-center items-center min-h-[28px]'>\n        <input\n          type='checkbox'\n          className={mergedInputClsx}\n          checked={isChecked}\n          onChange={onChange}\n          disabled={isDisabled}\n          {...inputProps}\n        />\n        {children && <label className={mergedLabelClsx}>{children}</label>}\n      </label>\n    </span>\n  );\n};\n","export * from './Checkbox';\n","import React, { useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { ChipProps } from './types';\nimport { getChipClassName } from './utils';\n\n/**\n * The `Chip` component\n *\n * Props:\n *\n * - `color`: The visual style of the badge (default: \"green\")\n * - `isDisabled`: If `true`, the chip will display as disabled state\n *\n * @example\n *\n * ```jsx\n *  <Chip>Active</Chip>\n *  <Chip color=\"red\" isDisabled>Disabled</Chip>\n * ```\n */\nexport const Chip = React.forwardRef<HTMLSpanElement, ChipProps>((props, ref) => {\n  const { children, className: classNameProp, color = 'green', isDisabled } = props;\n\n  const baseClsx = useMemo(() => 'box-border inline-block px-3 py-1 rounded-full utility uppercase', []);\n\n  const className = useMemo(\n    () => twMerge(baseClsx, getChipClassName(color, isDisabled), classNameProp),\n    [baseClsx, color, isDisabled, classNameProp]\n  );\n\n  return (\n    <span className={className} ref={ref}>\n      {children}\n    </span>\n  );\n});\n","export * from './Chip';\n","import { ChipClassNames, ChipColors } from './types';\n\nconst classNames: ChipClassNames = {\n  blue: {\n    active: 'bg-blue-10 text-blue-90 dark:bg-blue-120 dark:text-blue-50',\n    disabled: 'bg-blue-10 text-blue-40 dark:bg-blue-120 dark:text-blue-90',\n  },\n  green: {\n    active: 'bg-green-10 text-green-90 dark:bg-green-120 dark:text-green-50',\n    disabled: 'bg-green-10 text-green-40 dark:bg-green-120 dark:text-green-90',\n  },\n  purple: {\n    active: 'bg-purple-10 text-purple-90 dark:bg-purple-120 dark:text-purple-50',\n    disabled: 'bg-purple-10 text-purple-40 dark:bg-purple-120 dark:text-purple-90',\n  },\n  red: {\n    active: 'bg-red-10 text-red-90 dark:bg-red-120 dark:text-red-50',\n    disabled: 'bg-red-10 text-red-40 dark:bg-red-120 dark:text-red-90',\n  },\n  yellow: {\n    active: 'bg-yellow-10 text-yellow-90 dark:bg-yellow-120 dark:text-yellow-50',\n    disabled: 'bg-yellow-10 text-yellow-40 dark:bg-yellow-120 dark:text-yellow-90',\n  },\n};\n\n/**\n * Get the Tailwind class name for `Chip` component based on `color` and `isDisabled`\n * @param color The chip color\n * @param isDisabled If `true` return the style for disabled state\n * @returns Tailwind class name for style the `Chip` component\n */\nexport function getChipClassName(color: ChipColors, isDisabled?: boolean) {\n  const { active, disabled } = classNames[color];\n  return isDisabled ? disabled : active;\n}\n","import * as CollapsiblePrimitive from '@radix-ui/react-collapsible';\nimport { forwardRef } from 'react';\n\nimport { CollapsibleProps } from './types';\n\n/**\n * The wrapper around Radix Collapsible Root, use for displaying collapsible content\n *\n * @example\n *\n * ```jsx\n *    <Collapsible>\n *      <CollapsibleButton>Click to expand</CollapsibleButton>\n *      <CollapsibleContent>Expanded section</CollapsibleContent>\n *    </Collapsible>\n * ```\n */\nexport const Collapsible = forwardRef<HTMLDivElement, CollapsibleProps>((props, ref) => {\n  return <CollapsiblePrimitive.Root {...props} ref={ref} />;\n});\n","import * as CollapsiblePrimitive from '@radix-ui/react-collapsible';\nimport { ChevronDown } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport cx from 'classnames';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { CollapsibleButtonProps } from './types';\n\n/**\n * The style wrapper around Radix Collapsible Trigger, must use inside `<Collapsible></Collapsible>` tag\n */\nexport const CollapsibleButton = forwardRef<HTMLButtonElement, CollapsibleButtonProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <CollapsiblePrimitive.Trigger\n        {...props}\n        className={twMerge(cx('group flex w-full select-none items-center justify-between px-4 py-2'), className)}\n        ref={ref}\n      >\n        <Typography variant='body1' component='span' fw='bold' className='block'>\n          {children}\n        </Typography>\n        <ChevronDown className='block duration-300 ease-in-out transform group-radix-state-open:rotate-180' />\n      </CollapsiblePrimitive.Trigger>\n    );\n  }\n);\n","import * as CollapsiblePrimitive from '@radix-ui/react-collapsible';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { CollapsibleContentProps } from './types';\n\n/**\n * The style wrapper around Radix Collapsible Content, must use inside `<Collapsible></Collapsible>` tag\n */\nexport const CollapsibleContent = forwardRef<HTMLDivElement, CollapsibleContentProps>(\n  ({ className, ...props }, ref) => {\n    return <CollapsiblePrimitive.Content {...props} className={twMerge('p-4', className)} ref={ref} />;\n  }\n);\n","export * from './Collapsible';\nexport * from './CollapsibleButton';\nexport * from './CollapsibleContent';\n","import { useCopyable } from '@nepoche/webb-ui-components/hooks';\nimport { FileCopyLine } from '@nepoche/webb-ui-components/icons';\nimport cx from 'classnames';\nimport { useCallback } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Tooltip, TooltipBody, TooltipTrigger } from '../Tooltip';\nimport { CopyWithTooltipProps } from './types';\n\n/**\n * The `CopyWithTooltip` component\n *\n * @example\n *\n * ```jsx\n *  <CopyWithTooltip textToCopy=\"0x026d513cf4e5f0e605a6584322382bd5896d4f0dfdd1e9a7\" />\n *  <CopyWithTooltip isUseSpan textToCopy=\"0x026d513cf4e5f0e605a6584322382bd5896d4f0dfdd1e9a7\" />\n * ```\n */\nexport const CopyWithTooltip: React.FC<CopyWithTooltipProps> = ({ className, isUseSpan, textToCopy }) => {\n  const { copy, isCopied } = useCopyable();\n\n  const onCopy = useCallback(() => {\n    if (isCopied) {\n      return;\n    }\n\n    copy(textToCopy);\n  }, [copy, isCopied, textToCopy]);\n\n  return (\n    <Tooltip>\n      <TooltipTrigger\n        className={twMerge(\n          cx('bg-blue-10 dark:bg-blue-120 text-blue-70 dark:text-blue-30', isCopied ? 'cursor-not-allowed' : ''),\n          className\n        )}\n        onClick={onCopy}\n        asChild={isUseSpan}\n      >\n        {isUseSpan ? (\n          <span className='!text-inherit'>\n            <FileCopyLine className='!fill-current' />\n          </span>\n        ) : (\n          <FileCopyLine className='!fill-current' />\n        )}\n      </TooltipTrigger>\n      <TooltipBody>{isCopied ? 'Copied' : 'Copy'}</TooltipBody>\n    </Tooltip>\n  );\n};\n","export * from './CopyWithTooltip';\n","import * as SeparatorPrimitive from '@radix-ui/react-separator';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { DividerProps } from './types';\n\nexport const Divider = forwardRef<HTMLDivElement, DividerProps>(({ className, ...props }, ref) => {\n  return (\n    <SeparatorPrimitive.Root\n      {...props}\n      className={twMerge(\n        'bg-mono-40',\n        'radix-orientation-horizontal:h-[1px] radix-orientation-horizontal:w-full',\n        'radix-orientation-vertical:h-full radix-orientation-vertical:w-[1px]',\n        className\n      )}\n      ref={ref}\n    />\n  );\n});\n","export * from './Divider';\n","import * as DialogPrimitive from '@radix-ui/react-dialog';\nimport { Close } from '@nepoche/webb-ui-components/icons';\nimport { PropsOf } from '@nepoche/webb-ui-components/types';\nimport cx from 'classnames';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { DrawerContentProps } from './types';\n\nconst Drawer = DialogPrimitive.Root;\nconst DrawerTrigger = DialogPrimitive.Trigger;\n\nconst DrawerCloseButton = forwardRef<HTMLButtonElement, PropsOf<'button'>>((props, ref) => (\n  <DialogPrimitive.Close asChild>\n    <button {...props} ref={ref}>\n      <Close size='lg' />\n    </button>\n  </DialogPrimitive.Close>\n));\n\nconst DrawerContent = forwardRef<HTMLDivElement, DrawerContentProps>(({ children, className, ...props }, ref) => (\n  <DialogPrimitive.Portal>\n    <DialogPrimitive.Overlay\n      className={cx(\n        'fixed top-0 bottom-0 left-0 right-0 bg-[rgba(0,0,0,0.15)]',\n        'radix-state-open:animate-drawer-overlay-open radix-state-closed:animate-drawer-overlay-close'\n      )}\n    />\n    <DialogPrimitive.Content {...props} className={twMerge('drawer-content', className)} ref={ref}>\n      {children}\n    </DialogPrimitive.Content>\n  </DialogPrimitive.Portal>\n));\n\nconst DrawerTitle = DialogPrimitive.Title;\nconst DrawerDescription = DialogPrimitive.Description;\n\nexport { Drawer, DrawerTrigger, DrawerCloseButton, DrawerContent, DrawerTitle, DrawerDescription };\n","export * from './Drawer';\n","import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport React, { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { DropdownProps } from './types';\n\n/**\n * The wrapper of Radix `DropdownRoot`\n */\nexport const Dropdown = forwardRef<HTMLDivElement, DropdownProps>(({ children, className, ...props }, ref) => {\n  return (\n    <div {...props} className={twMerge('relative inline-block text-left', className)} ref={ref}>\n      <DropdownMenuPrimitive.Root modal={false}>{children}</DropdownMenuPrimitive.Root>\n    </div>\n  );\n});\n","import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport { ChevronDown } from '@nepoche/webb-ui-components/icons';\nimport cx from 'classnames';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { DropdownButtonProps } from './types';\n\n/**\n * The `DropdownMenu` trigger function, must use inside the `Dropdown` component\n */\nexport const DropdownBasicButton = forwardRef<HTMLButtonElement, DropdownButtonProps>(\n  ({ children, className, ...props }, ref) => {\n    return (\n      <DropdownMenuPrimitive.Trigger asChild>\n        <button {...props} className={className} ref={ref}>\n          {children}\n        </button>\n      </DropdownMenuPrimitive.Trigger>\n    );\n  }\n);\n","import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport cx from 'classnames';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { DropdownBodyProps } from './types';\n\n/**\n * The style wrapper around Radix `Content` and `Portal` component, must use inside the `Dropdown` component\n */\nexport const DropdownBody = forwardRef<HTMLDivElement, DropdownBodyProps>(\n  ({ children, className, size, ...props }, ref) => {\n    return (\n      <DropdownMenuPrimitive.Portal>\n        <DropdownMenuPrimitive.Content\n          {...props}\n          align='end'\n          sideOffset={size === 'sm' ? 8 : 0}\n          className={twMerge(\n            cx(\n              'radix-side-top:animate-slide-up radix-side-bottom:animate-slide-down',\n              'min-w-[176px] shadow-md overflow-hidden webb-shadow-md',\n              size === 'md' ? 'rounded-b-lg border border-t-0' : 'rounded-lg border',\n              'border-blue-40 dark:border-blue-70',\n              'bg-mono-0 dark:bg-mono-200'\n            ),\n            className\n          )}\n          ref={ref}\n        >\n          {children}\n        </DropdownMenuPrimitive.Content>\n      </DropdownMenuPrimitive.Portal>\n    );\n  }\n);\n","import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport { ChevronDown } from '@nepoche/webb-ui-components/icons';\nimport cx from 'classnames';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { DropdownButtonProps } from './types';\n\n/**\n * The `DropdownMenu` trigger function, must use inside the `Dropdown` component\n */\nexport const DropdownButton = forwardRef<HTMLButtonElement, DropdownButtonProps>(\n  ({ className, icon, label, size, ...props }, ref) => {\n    return (\n      <DropdownMenuPrimitive.Trigger asChild>\n        <button\n          {...props}\n          className={twMerge(\n            cx(\n              'border rounded-lg uppercase group',\n              'transition-none transition-[border-radius]',\n              'pl-4 py-2',\n              size === 'md' ? 'min-w-[176px]' : 'min-w-[96px]',\n              'flex items-center justify-between',\n              'bg-mono-0 dark:bg-mono-180',\n              'border-mono-80 dark:border-mono-120',\n              'text-mono-140 dark:text-mono-40',\n              'hover:border-blue-40 dark:hover:border-blue-70',\n              'radix-state-open:border-blue-40 dark:radix-state-open:border-blue-70',\n              'radix-state-open:bg-blue-0 dark:radix-state-open:bg-blue-120',\n              size !== 'sm' && 'radix-state-open:rounded-t-lg',\n              size !== 'sm' && 'radix-state-open:rounded-b-none'\n            ),\n            className\n          )}\n          ref={ref}\n        >\n          <div className='flex items-center space-x-1'>\n            {icon && <span className='text-inherit'>{icon}</span>}\n            <span className={cx('text-inherit', size === 'md' ? 'body1' : 'utility')}>{label}</span>\n          </div>\n          <ChevronDown className='mx-2 transition-transform duration-300 ease-in-out group-radix-state-open:rotate-180' />\n        </button>\n      </DropdownMenuPrimitive.Trigger>\n    );\n  }\n);\n","export * from './Dropdown';\nexport * from './DropdownBasicButton';\nexport * from './DropdownBody';\nexport * from './DropdownButton';\n","import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';\nimport React, { useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Dropdown, DropdownBody, DropdownButton } from '../Dropdown';\nimport { MenuItem } from '../MenuItem';\nimport { DropdownMenuProps } from './types';\n\n/**\n * The `DropdownMenu` component\n *\n * - `size`: The `Dropdown` size\n * - `label`: The label to be display, if not provided, the `Dropdown` trigger will display the value property\n * - `icon`: The icon before the `Dropdown` label\n * - `menuOptions`: Options array to display\n * - `value`: Current selected value (default will get the first item in the option list)\n * - `onChange`: Callback function to update the value\n *\n * ```jsx\n *  <DropdownMenu className='mr-3' size='sm' label='Filter' icon={<Filter />} menuOptions={dropdownOptions} />\n *  <DropdownMenu\n *    label='Brand'\n *    menuOptions={dropdownOptions}\n *    value={value}\n *    onChange={(nextVal) => setValue(nextVal)}\n *  />\n * ```\n */\nexport const DropdownMenu = React.forwardRef<HTMLDivElement, DropdownMenuProps>((props, ref) => {\n  const { className, icon: iconProp, label, menuOptions, onChange, size = 'md', value } = props;\n\n  const icon = useMemo(() => {\n    if (!iconProp) {\n      return;\n    }\n\n    return React.cloneElement(iconProp, {\n      ...iconProp.props,\n      size: size === 'md' ? 'lg' : 'md',\n      className: twMerge('fill-current dark:fill-current', iconProp.props['className']),\n    });\n  }, [iconProp, size]);\n\n  // Calculate the display text on the trigger button\n  const triggerText = useMemo(() => {\n    if (value) {\n      return value;\n    }\n\n    if (!label && !menuOptions.length) {\n      throw new Error('DropdownMenu without label needs an option list to render');\n    }\n\n    if (!label && menuOptions.length > 0) {\n      return menuOptions[0].value;\n    }\n\n    return label;\n  }, [label, menuOptions, value]);\n\n  return (\n    <Dropdown className={className} ref={ref}>\n      <DropdownButton label={triggerText} icon={icon} size={size} />\n\n      <DropdownBody size={size}>\n        <DropdownMenuPrimitive.RadioGroup value={value} onValueChange={onChange}>\n          {menuOptions.map(({ icon, value }, i) => (\n            <DropdownMenuPrimitive.RadioItem key={`${value}-${i}`} value={value} asChild>\n              <MenuItem icon={icon}>{value}</MenuItem>\n            </DropdownMenuPrimitive.RadioItem>\n          ))}\n        </DropdownMenuPrimitive.RadioGroup>\n      </DropdownBody>\n    </Dropdown>\n  );\n});\n","export * from './DropdownMenu';\n","import { FilterIcon, Search } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { forwardRef } from 'react';\n\nimport { Button } from '../Button';\nimport { Dropdown, DropdownBody, DropdownButton } from '../Dropdown';\nimport { Input } from '../Input';\nimport { FilterProps } from './types';\n\n/**\n * The `Filter` wrapper component, contains title, clear function, and the global search.\n * The children will be the specific table filter. Usually is the collapsible filter\n */\nexport const Filter = forwardRef<HTMLDivElement, FilterProps>(\n  ({ children, clearAllFilters, onSearchChange, searchText, ...props }, ref) => {\n    return (\n      <Dropdown {...props} ref={ref}>\n        <DropdownButton label='Filters' icon={<FilterIcon />} size='sm' />\n\n        <DropdownBody className='py-2 min-w-[300px]' size='sm'>\n          {/** Title */}\n          <div className='flex items-center justify-between px-4 py-2'>\n            <Typography variant='h5' fw='bold'>\n              Filters\n            </Typography>\n            <Button variant='link' size='sm' className='uppercase' onClick={clearAllFilters}>\n              Clear all\n            </Button>\n          </div>\n\n          {/** Search input */}\n          <div className='p-2'>\n            <Input\n              id='search keygen'\n              placeholder='Search Authority, or Key'\n              rightIcon={<Search />}\n              value={searchText}\n              onChange={onSearchChange}\n              debounceTime={300}\n            />\n          </div>\n\n          {/** Filter body */}\n          {children}\n        </DropdownBody>\n      </Dropdown>\n    );\n  }\n);\n","export * from './Filter';\nexport * from './utils';\n","import { rankItem } from '@tanstack/match-sorter-utils';\nimport { FilterFn } from '@tanstack/react-table';\n\nexport const fuzzyFilter: FilterFn<any> = (row, columnId, value, addMeta) => {\n  // Rank the item\n  const itemRank = rankItem(row.getValue(columnId), value);\n\n  // Store the itemRank info\n  addMeta({\n    itemRank,\n  });\n\n  // Return if the item should be filtered in/out\n  return itemRank.passed;\n};\n","import cx from 'classnames';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { InputProps } from './types';\n\n/**\n * The `Input` component\n *\n * Props:\n *\n * - `id`: The input id\n * - `htmlSize`: The native HTML `size` attribute to be passed to the `input`\n * - `isRequired`: The `required` attribute of input tab\n * - `isDisabled`: The `disabled` attribute of input tab\n * - `isRequired`: If `true`, the form control will be readonly\n * - `isValid`: If `true`, the input will change to the error state\n * - `value`: The input value, change the value by `onChange` function for controlled component\n * - `onChange`: The `onChange` function to control the value of the input\n * - `errorMessage`: The error message to be displayed if the input is invalid\n * - `leftIcon`: If added, the input will show an icon before the input value\n * - `rightIcon`: If added, the button will show an icon after the input value\n *\n * @example\n *\n * ```jsx\n *  <Input id='default' />\n *  <Input id='placeholder' placeholder='With placeholder' className='mt-3' />\n *  <Input id='readonly' value='Readonly' isReadOnly className='mt-3' />\n *  <Input\n *    id='disabled'\n *    isDisabled\n *    value='isDisabled'\n *    leftIcon={<Graph className='fill-current dark:fill-current' />}\n *    className='mt-3'\n *  />\n *  <Input id='invalid' isInvalid value='isInvalid' className='mt-3' />\n *  <Input id='withError' isInvalid value='With Error' errorMessage='Error message' className='mt-3' />\n *  <Input id='iconLeft' value='Icon left' leftIcon={<Coin size='xl' />} className='mt-3' />\n *  <Input id='iconRight' value='Icon right' rightIcon={<Search size='xl' />} className='mt-3' />\n * ```\n */\nexport const Input: React.FC<InputProps> = (props) => {\n  const {\n    className,\n    debounceTime = 0,\n    errorMessage,\n    htmlSize,\n    id,\n    isDisabled,\n    isInvalid: isInvalidProp,\n    isReadOnly,\n    isRequired,\n    leftIcon: leftIconProp,\n    onChange,\n    rightIcon: rightIconProp,\n    size = 'md',\n    type = 'text',\n    value: initialValue = '',\n    ...restProps\n  } = props;\n  const [value, setValue] = useState(initialValue);\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      onChange?.(value ?? '');\n    }, debounceTime);\n\n    return () => clearTimeout(timeout);\n  }, [debounceTime, onChange, value]);\n\n  // Override the size of left icon prop to 'md'\n  const leftIcon = useMemo(() => {\n    if (!leftIconProp) {\n      return;\n    }\n    return React.cloneElement(leftIconProp, { ...leftIconProp.props, size: 'md' });\n  }, [leftIconProp]);\n\n  // Override the size of right icon prop to 'md'\n  const rightIcon = useMemo(() => {\n    if (!rightIconProp) {\n      return;\n    }\n    return React.cloneElement(rightIconProp, { ...rightIconProp.props, size: 'md' });\n  }, [rightIconProp]);\n\n  const isInvalid = useMemo(() => isInvalidProp || errorMessage, [isInvalidProp, errorMessage]);\n\n  const paddingX = useMemo(\n    () =>\n      leftIconProp && rightIconProp\n        ? ('px-8' as const)\n        : leftIconProp\n        ? ('pl-8 pr-4' as const)\n        : rightIconProp\n        ? ('pl-4 pr-8' as const)\n        : ('px-4' as const),\n    [leftIconProp, rightIconProp]\n  );\n\n  const inputClsxBase = useMemo(\n    () =>\n      cx(\n        'form-input w-full transition-none body1 bg-mono-0 rounded-lg text-mono-140 dark:bg-mono-200 dark:text-mono-40 invalid:border-red-40 py-2',\n        'placeholder:italic placeholder:text-mono-100 dark:placeholder:text-mono-120',\n        paddingX,\n        isInvalid ? ('border-red-40' as const) : ('border-mono-80 dark:border-mono-120' as const)\n      ),\n    [isInvalid, paddingX]\n  );\n  const inputClsxHover = useMemo(() => 'hover:border-blue-40 dark:hover:border-blue-70', []);\n  const inputClsxFocus = useMemo(\n    () => 'focus:bg-blue-0 focus:border-blue-40 dark:focus:bg-blue-120 dark:focus:border-blue-70',\n    []\n  );\n  const inputClsxDisabled = useMemo(\n    () =>\n      'disabled:text-mono-100 dark:disabled:text-mono-120 disabled:bg-mono-40 dark:disabled:bg-mono-160 disabled:cursor-not-allowed disabled:hover:border-mono-80 dark:disabled:hover:border-mono-120',\n    []\n  );\n\n  const mergedInputClsx = useMemo(\n    () =>\n      size === 'md'\n        ? twMerge(inputClsxBase, inputClsxHover, inputClsxFocus, inputClsxDisabled)\n        : cx(\n            'border-none w-full bg-transparent focus:ring-0 p-0 body1 font-bold',\n            'placeholder:text-mono-100 dark:placeholder:text-mono-80 text-mono-200 dark:text-mono-0'\n          ),\n    [inputClsxBase, inputClsxDisabled, inputClsxFocus, inputClsxHover, size]\n  );\n\n  const iconClsx = useMemo(\n    () => cx(twMerge('text-mono-140 dark:text-mono-40', isDisabled ? 'text-mono-100 dark:text-mono-120' : '')),\n    [isDisabled]\n  );\n\n  return (\n    <div className={className}>\n      <div className={cx('relative', { 'shadow-sm': size === 'md' })}>\n        {leftIcon && (\n          <div className='absolute inset-y-0 left-0 flex items-center pl-2 pointer-events-none'>\n            <span className={iconClsx}>{leftIcon}</span>\n          </div>\n        )}\n\n        <input\n          size={htmlSize}\n          type={type}\n          name={id}\n          id={id}\n          disabled={isDisabled}\n          readOnly={isReadOnly}\n          required={isRequired}\n          className={mergedInputClsx}\n          value={value}\n          onChange={(eve) => setValue(eve.target.value)}\n          {...restProps}\n        />\n\n        {rightIcon && (\n          <div className='absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none'>\n            <span className={iconClsx}>{rightIcon}</span>\n          </div>\n        )}\n      </div>\n\n      {errorMessage && <span className='block mt-2 ml-4 utility text-red dark:text-red-50'>{errorMessage}</span>}\n    </div>\n  );\n};\n","export * from './Input';\n","import { Typography } from '@nepoche/webb-ui-components/typography';\nimport React, { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Button } from '../Button';\nimport { CopyWithTooltip } from '../CopyWithTooltip';\nimport { KeyCardProps } from './types';\n\n/**\n * The `KeyCard` component, uses to display the key with the copy button\n *\n * @example\n *\n * ```jsx\n *  <KeyCard title='Compressed Key:' keyValue='0x026d513cf4e5f0e605a6584322382bd5896d4f0dfdd1e9a7' />\n * ```\n */\nexport const KeyCard = forwardRef<HTMLDivElement, KeyCardProps>(({ className, keyValue, title, ...props }, ref) => {\n  const mergedClsx = useMemo(() => twMerge('max-w-[343px] break-all', className), [className]);\n  return (\n    <div {...props} className={mergedClsx} ref={ref}>\n      {/** Top */}\n      <div className='flex items-center justify-between'>\n        <Typography variant='utility' className='uppercase'>\n          {title}\n        </Typography>\n\n        <Button variant='utility' size='sm'>\n          <CopyWithTooltip textToCopy={keyValue} isUseSpan />\n        </Button>\n      </div>\n\n      {/** Bottom */}\n      <div className='p-3 mt-4 rounded-md bg-mono-20 dark:bg-mono-160'>\n        <Typography variant='mono1'>{keyValue}</Typography>\n      </div>\n    </div>\n  );\n});\n","export * from './KeyCard';\n","import { Avatar, AvatarGroup, Button, Card, Chip } from '@nepoche/webb-ui-components/components';\nimport { formatDateToUtc } from '@nepoche/webb-ui-components/utils';\nimport { Link } from 'react-router-dom';\n\nimport { KeyValueWithButton } from '../KeyValueWithButton';\nimport { LabelWithValue } from '../LabelWithValue';\nimport { TimeProgress } from '../TimeProgress';\nimport { TitleWithInfo } from '../TitleWithInfo';\nimport { KeyStatusCardProps } from './types';\n\n/**\n * The `KeyStatusCard` component displays the current key and next key data\n *\n * ```jsx\n *  import { useKeyStatusSeedData } from \"@nepoche/webb-ui-components\";\n *\n *  const statusCardData = useKeyStatusSeedData();\n *\n *  // ...\n *\n *  <KeyStatusCard className='max-w-[680px] mt-6' {...statusCardData} />\n * ```\n */\nexport const KeyStatusCard: React.FC<KeyStatusCardProps> = ({\n  authorities,\n  endTime,\n  fullDetailUrl,\n  instance,\n  keyType,\n  keyVal,\n  sessionNumber,\n  startTime,\n  title,\n  titleInfo,\n  totalAuthorities,\n  ...props\n}) => {\n  return (\n    <Card {...props}>\n      {/** Top */}\n      <div className='flex justify-between w-full'>\n        <div className='flex items-center space-x-2'>\n          <TitleWithInfo title={title} info={titleInfo} variant='h5' />\n          <LabelWithValue label='session: ' value={sessionNumber} />\n          <Chip color='green' className='inline-block'>\n            {keyType}\n          </Chip>\n        </div>\n        <KeyValueWithButton keyValue={keyVal} />\n      </div>\n\n      {/* * Content */}\n      <TimeProgress now={instance} startTime={startTime} endTime={endTime} />\n      {/** Bottom */}\n      <div className='flex items-center justify-between'>\n        <AvatarGroup total={totalAuthorities}>\n          {Array.from(authorities).map((aut, idx) => (\n            <Avatar sourceVariant='address' key={`${aut}${idx}`} value={aut} />\n          ))}\n        </AvatarGroup>\n        <Link to={fullDetailUrl}>\n          <Button variant='link' as='span' size='sm'>\n            See full details\n          </Button>\n        </Link>\n      </div>\n    </Card>\n  );\n};\n","export * from './KeyStatusCard';\nexport * from './useKeyStatusSeedData';\n","export {};\n","import { useCopyable } from '@nepoche/webb-ui-components/hooks';\nimport { FileCopyLine } from '@nepoche/webb-ui-components/icons';\nimport { shortenHex } from '@nepoche/webb-ui-components/utils';\nimport cx from 'classnames';\nimport { forwardRef, useCallback, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { LabelWithValue } from '../LabelWithValue';\nimport { Tooltip, TooltipBody, TooltipTrigger } from '../Tooltip';\nimport { KeyValueWithButtonProps } from './types';\n\n/**\n * The `KeyValueWithButton` component contains the key label and the shortened key hash along with a copy button\n *\n * @example\n *\n * ```jsx\n *  <KeyValueWithButton keyValue='0x958aa9ddbd62f989dec2fd1468bf436aebeb8be6' />\n * ```\n */\nexport const KeyValueWithButton = forwardRef<HTMLDivElement, KeyValueWithButtonProps>(\n  (\n    { className, hasShortenValue = true, isHiddenLabel, keyValue, labelVariant, size = 'md', valueVariant, ...props },\n    ref\n  ) => {\n    const { copy, isCopied } = useCopyable();\n\n    const onCopy = useCallback(() => {\n      if (isCopied) {\n        return;\n      }\n\n      copy(keyValue);\n    }, [copy, isCopied, keyValue]);\n\n    const mergedClsx = useMemo(() => {\n      return twMerge('overflow-hidden rounded-lg', size === 'md' ? 'bg-mono-20 dark:bg-mono-180' : '', className);\n    }, [className, size]);\n\n    const value = useMemo(() => (hasShortenValue ? shortenHex(keyValue, 3) : keyValue), [hasShortenValue, keyValue]);\n\n    return (\n      <div {...props} className={mergedClsx} ref={ref}>\n        <div className={cx('flex items-center', size === 'md' ? 'space-x-2' : 'space-x-1')}>\n          <div className={size === 'md' ? 'py-1 pl-3' : ''}>\n            <Tooltip>\n              <TooltipTrigger onClick={() => copy(keyValue)} asChild>\n                <LabelWithValue\n                  labelVariant={labelVariant}\n                  valueVariant={valueVariant}\n                  isHiddenLabel={isHiddenLabel}\n                  label='Key'\n                  value={value}\n                  className='cursor-default pointer-events-auto'\n                />\n              </TooltipTrigger>\n              <TooltipBody>{keyValue}</TooltipBody>\n            </Tooltip>\n          </div>\n          <Tooltip>\n            <TooltipTrigger\n              className={cx(\n                size === 'md' ? 'p-2 bg-blue-10 dark:bg-blue-120 text-blue-70 dark:text-blue-30' : '',\n                isCopied ? 'cursor-not-allowed' : ''\n              )}\n              onClick={onCopy}\n            >\n              <FileCopyLine className={size === 'md' ? '!fill-current' : ''} />\n            </TooltipTrigger>\n            <TooltipBody>{isCopied ? 'Copied' : 'Copy'}</TooltipBody>\n          </Tooltip>\n        </div>\n      </div>\n    );\n  }\n);\n","export * from './KeyValueWithButton';\n","import * as LabelPrimitive from '@radix-ui/react-label';\n\nimport { LabelProps } from './types';\n\n/**\n * The accessible `Label` component\n *\n * @example\n *\n * ```jsx\n *  <Label className='font-bold uppercase body4' htmlFor=\"username\">\n *    Username\n *  </Label>\n * ```\n */\nexport const Label: React.FC<LabelProps> = (props) => {\n  return <LabelPrimitive.Root {...props} />;\n};\n","export * from './Label';\n","import { Typography } from '@nepoche/webb-ui-components/typography';\nimport cx from 'classnames';\nimport { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Label } from '../Label';\nimport { Tooltip, TooltipBody, TooltipTrigger } from '../Tooltip';\nimport { LabelWithValueProps } from './types';\n\n/**\n * The `LabelWithValue` component\n *\n * Reuseable component contains a small label with value after it\n *\n * ```jsx\n *  <LabelWithValue label='session: ' value={'123'} />\n * ```\n */\nexport const LabelWithValue = forwardRef<HTMLSpanElement, LabelWithValueProps>(\n  (\n    {\n      className,\n      isHiddenLabel,\n      label,\n      labelVariant = 'utility',\n      value,\n      valueTooltip,\n      valueVariant = 'body1',\n      ...props\n    },\n    ref\n  ) => {\n    const mergedClsx = useMemo(() => twMerge('flex items-center space-x-1', className), [className]);\n    return (\n      <span {...props} className={mergedClsx} ref={ref}>\n        <Label\n          hidden={isHiddenLabel}\n          className={cx('font-bold uppercase', labelVariant, isHiddenLabel && 'hidden')}\n          htmlFor={label}\n        >\n          {label}\n        </Label>\n        {!valueTooltip &&\n          (typeof value === 'string' || typeof value === 'number' ? (\n            <Typography component='span' variant={valueVariant}>\n              {value.toString()}\n            </Typography>\n          ) : (\n            value\n          ))}\n\n        {valueTooltip && (\n          <Tooltip>\n            <TooltipTrigger>{value}</TooltipTrigger>\n            <TooltipBody>{valueTooltip}</TooltipBody>\n          </Tooltip>\n        )}\n      </span>\n    );\n  }\n);\n","export * from './LabelWithValue';\n","import { createIcon } from '@nepoche/webb-ui-components/icons/create-icon';\nimport React, { useMemo } from 'react';\n\nimport { LogoProps } from './types';\n\nconst defaultLogoSize = {\n  width: 96,\n  height: 29,\n  viewBox: '0 0 96 29',\n};\n\n/**\n *\n * The Webb Logo component\n *\n * Props:\n *\n * - `size`: The logo size (default `md`)\n * - `darkMode`: Control logo dark mode using `js`, leave it's empty to control using `css`\n *\n * @example\n *\n * ```jsx\n *  <Logo size=\"lg\" />\n *  <Logo darkMode={true} />\n * ```\n */\nexport const Logo: React.FC<LogoProps> = (props) => {\n  const { darkMode, size = 'md', ...restProps } = props;\n\n  const fillClassName = useMemo(\n    () =>\n      typeof darkMode === 'boolean'\n        ? darkMode\n          ? ('fill-mono-0' as const)\n          : ('fill-mono-200' as const)\n        : ('fill-mono-200 dark:fill-mono-0' as const),\n    [darkMode]\n  );\n\n  const { height, width } = useMemo(() => {\n    switch (size) {\n      case 'sm': {\n        return {\n          width: defaultLogoSize.width * 0.5,\n          height: defaultLogoSize.height * 0.5,\n        };\n      }\n\n      case 'md': {\n        return {\n          width: defaultLogoSize.width,\n          height: defaultLogoSize.height,\n        };\n      }\n\n      case 'lg': {\n        return {\n          width: defaultLogoSize.width * 1.5,\n          height: defaultLogoSize.height * 1.5,\n        };\n      }\n\n      default: {\n        throw new Error('Unknown Logo size');\n      }\n    }\n  }, [size]);\n\n  return createIcon({\n    ...restProps,\n    darkMode,\n    path: [\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M11.53 14.475v1.597c0 1.07.875 1.946 1.946 1.946h1.597c1.07 0 1.947-.876 1.947-1.946v-1.597c0-1.07-.876-1.947-1.947-1.947h-1.597a1.953 1.953 0 00-1.947 1.947z'\n        fill='#B5A9F2'\n      />,\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M11.53 9.509c0 1.563-1.23 2.833-2.744 2.833-1.513 0-2.742 1.27-2.742 2.842 0 1.564-1.23 2.834-2.753 2.834-1.513 0-2.742-1.27-2.742-2.834 0-1.572 1.23-2.842 2.742-2.842 1.523 0 2.753-1.27 2.753-2.833 0-1.565-1.23-2.834-2.753-2.834h-.797c-1.067 0-1.945-.908-1.945-2.01V3.008c0-1.101.878-2.01 1.945-2.01h1.603c1.068 0 1.947.909 1.947 2.01v.833c0 1.564 1.229 2.834 2.742 2.834 1.514 0 2.743 1.27 2.743 2.834z'\n        fill='#DD4800'\n      />,\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M17.02 25.45v1.604c0 1.066-.909 1.945-2.01 1.945h-1.656c-1.102 0-2.01-.879-2.01-1.945v-.798c0-1.522-1.27-2.752-2.835-2.752-1.563 0-2.833 1.23-2.833 2.752C5.676 27.77 4.406 29 2.833 29 1.27 28.999 0 27.77 0 26.256c0-1.522 1.27-2.752 2.833-2.752 1.573 0 2.843-1.228 2.843-2.742v-.798c0-1.075.9-1.946 2.01-1.946h1.648c1.11 0 2.01.87 2.01 1.946v.798c0 1.514 1.27 2.742 2.833 2.742h.833c1.101 0 2.01.88 2.01 1.946z'\n        fill='#007D0D'\n      />,\n      <mask\n        id='prefix__a'\n        style={{\n          maskType: 'alpha',\n        }}\n        maskUnits='userSpaceOnUse'\n        x={17}\n        y={11}\n        width={11}\n        height={18}\n      >\n        <path d='M17.02 11.98H28v17.019H17.02v-17.02z' fill='#fff' />\n      </mask>,\n      <g mask='url(#prefix__a)'>\n        <path\n          fillRule='evenodd'\n          clipRule='evenodd'\n          d='M28 26.166c0 1.563-1.229 2.833-2.751 2.833-1.514 0-2.743-1.27-2.743-2.833 0-1.573-1.23-2.844-2.743-2.844h-.799c-1.073 0-1.944-.898-1.944-2.01v-1.647c0-1.11.87-2.01 1.944-2.01h.799c1.514 0 2.743-1.27 2.743-2.834 0-1.572 1.229-2.842 2.743-2.842 1.522 0 2.751 1.27 2.751 2.843 0 1.563-1.229 2.833-2.751 2.833-1.514 0-2.743 1.27-2.743 2.834s1.229 2.833 2.743 2.833c1.522 0 2.751 1.271 2.751 2.844z'\n          fill='#67A0EE'\n        />\n      </g>,\n      <mask\n        id='prefix__b'\n        style={{\n          maskType: 'alpha',\n        }}\n        maskUnits='userSpaceOnUse'\n        x={10}\n        y={0}\n        width={18}\n        height={12}\n      >\n        <path d='M10.98.999H28v10.98H10.98V1z' fill='#fff' />\n      </mask>,\n      <g mask='url(#prefix__b)'>\n        <path\n          fillRule='evenodd'\n          clipRule='evenodd'\n          d='M28 2.944v1.604c0 1.066-.908 1.945-2.01 1.945h-.832c-1.564 0-2.834 1.229-2.834 2.743 0 1.513-1.27 2.743-2.834 2.743s-2.833-1.23-2.833-2.743c0-1.514-1.27-2.743-2.843-2.743h-.825c-1.1 0-2.009-.88-2.009-1.945V2.944c0-1.066.909-1.945 2.01-1.945h1.657c1.101 0 2.01.879 2.01 1.945v.806c0 1.514 1.27 2.743 2.833 2.743 1.564 0 2.834-1.229 2.834-2.743v-.806c0-1.066.908-1.945 2.01-1.945h1.656c1.102 0 2.01.879 2.01 1.945z'\n          fill='#F4C328'\n        />\n      </g>,\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M49.875 20.26v.056c0 .007-.022.011-.068.011-.03 0-.045-.004-.045-.011 0-.007-.007-.018-.022-.034l-1.644-6.43c-.195-.77-.515-1.349-.957-1.735-.444-.385-1.018-.578-1.724-.578-.69 0-1.26.197-1.712.59-.45.393-.788.982-1.013 1.768l-1.645 6.385c.015 0 .02.004.012.011-.008.009-.027.012-.056.012-.031 0-.05-.003-.057-.012-.008-.007-.011-.018-.011-.033l-1.937-8.387H36l2.14 8.988c.135.519.35.953.642 1.302.293.348.638.608 1.036.778.398.17.8.256 1.205.256.645 0 1.205-.193 1.678-.578.473-.386.807-.971 1.002-1.758l1.668-6.564c-.016-.014-.009-.021.022-.021.045 0 .06.007.045.021l1.666 6.564c.195.787.53 1.372 1.003 1.758.473.385 1.033.578 1.678.578.406 0 .807-.086 1.206-.256a2.76 2.76 0 001.035-.778c.293-.35.499-.783.62-1.302l2.05-8.988h-2.952l-1.869 8.387zM92.11 18.791c-.24.431-.574.776-1.002 1.035-.428.26-.92.39-1.475.39-.54 0-1.026-.13-1.453-.39a2.86 2.86 0 01-1.014-1.035 2.75 2.75 0 01-.372-1.4c0-.52.124-.998.373-1.436a2.763 2.763 0 011.013-1.035 2.817 2.817 0 011.453-.378c.556 0 1.047.127 1.475.378.428.253.762.598 1.002 1.035.24.438.361.916.361 1.436 0 .504-.12.97-.36 1.4zm2.816-4.438a5.256 5.256 0 00-2.061-2.057c-.878-.49-1.896-.734-3.052-.734-.81 0-1.562.177-2.252.533-.28.143-.53.311-.767.494V6.8h-3.198v10.59c0 1.112.262 2.107.789 2.982a5.665 5.665 0 002.15 2.069c.908.503 1.94.756 3.098.756 1.155 0 2.188-.264 3.097-.79a5.902 5.902 0 002.151-2.114c.525-.882.788-1.85.788-2.902 0-1.143-.247-2.155-.743-3.038zM58.885 16.233c.09-.37.245-.708.462-1.012.218-.304.503-.545.856-.723.353-.178.762-.267 1.228-.267.45 0 .848.086 1.194.256.345.17.627.409.844.712.218.304.35.649.395 1.034h-4.979zm5.587-3.993c-.826-.512-1.832-.768-3.019-.768-1.141 0-2.148.264-3.018.79a5.6 5.6 0 00-2.039 2.114 5.903 5.903 0 00-.732 2.903c0 1.172.263 2.2.79 3.081a5.53 5.53 0 002.172 2.07c.924.496 1.964.744 3.12.744 1.186 0 2.226-.27 3.12-.811.894-.542 1.58-1.31 2.061-2.303l-2.455-1.224a2.782 2.782 0 01-1.115 1.18 3.205 3.205 0 01-1.633.422c-.63 0-1.175-.136-1.634-.412a2.753 2.753 0 01-1.058-1.145 3.025 3.025 0 01-.281-.89h8.289v-.935a5.902 5.902 0 00-.665-2.78 5.194 5.194 0 00-1.903-2.036zM77.897 18.791c-.24.431-.575.776-1.003 1.035-.427.26-.92.39-1.475.39-.54 0-1.025-.13-1.453-.39a2.861 2.861 0 01-1.013-1.035 2.75 2.75 0 01-.372-1.4c0-.52.123-.998.372-1.436a2.764 2.764 0 011.013-1.035 2.817 2.817 0 011.453-.378c.556 0 1.048.127 1.475.378.428.253.763.598 1.003 1.035.24.438.36.916.36 1.436 0 .504-.12.97-.36 1.4zm.754-6.495c-.878-.49-1.895-.734-3.052-.734-.81 0-1.562.177-2.252.533-.279.143-.53.311-.766.494V6.8h-3.199v10.59c0 1.112.263 2.107.789 2.982a5.665 5.665 0 002.151 2.069c.908.503 1.94.756 3.097.756 1.156 0 2.188-.264 3.097-.79a5.902 5.902 0 002.152-2.114c.524-.882.788-1.85.788-2.902 0-1.143-.248-2.155-.744-3.038a5.257 5.257 0 00-2.06-2.057z'\n        className={fillClassName}\n      />,\n    ],\n    displayName: 'WebbLogo',\n    defaultProps: {\n      width,\n      height,\n      fill: 'none',\n      stroke: 'none',\n    },\n    viewBox: defaultLogoSize.viewBox,\n  });\n};\n","export * from './Logo';\n","import cx from 'classnames';\nimport React, { useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { MenuItemProps } from './types';\n\n/**\n * The `MenuItem` component\n *\n * Props:\n *\n * - `icon`: The icon displayed after the text\n *\n * @example\n *\n * ```jsx\n *  <MenuItem icon={<Filter />}>Filter</MenuItem>\n *  <MenuItem>Item 1</MenuItem>\n * ```\n */\nexport const MenuItem = React.forwardRef<HTMLDivElement, MenuItemProps>(\n  ({ children, className: clsxProp, icon, ...props }, ref) => {\n    const className = useMemo(() => {\n      return twMerge(\n        cx(\n          'flex cursor-pointer items-center px-4 py-2 text-base outline-none capitalize',\n          'text-mono-140 dark:text-mono-80',\n          'hover:bg-blue-0 dark:hover:bg-blue-120',\n          'radix-state-checked:text-blue dark:radix-state-checked:text-blue-50',\n          'radix-state-active:text-blue dark:radix-state-active:text-blue-50'\n        ),\n        clsxProp\n      );\n    }, [clsxProp]);\n\n    return (\n      <div className={className} {...props} ref={ref}>\n        <span className='flex-grow text-inherit dark:text-inherit'>{children}</span>\n        {icon}\n      </div>\n    );\n  }\n);\n","export * from './MenuItem';\n","import { randRecentDate, randSoonDate } from '@ngneat/falso';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { forwardRef } from 'react';\n\nimport { Button } from '../Button';\nimport { Card } from '../Card';\nimport { Chip } from '../Chip';\nimport { KeyValueWithButton } from '../KeyValueWithButton';\nimport { LabelWithValue } from '../LabelWithValue';\nimport { TimeProgress } from '../TimeProgress';\nimport { TitleWithInfo } from '../TitleWithInfo';\nimport { NetworkThresholdsCardProps } from './types';\n\n/**\n * The `NetworkThresholdsCard` component displays the network thresholds data\n *\n * ```jsx\n *  import { useNetworkThresholdsSeedData } from \"@nepoche/webb-ui-components\";\n *\n *  const seedData = useNetworkThresholdsSeedData();\n *\n *  // ...\n *\n *  <NetworkThresholdsCard {...seedData} className='max-w-[1376px] mt-6' />\n * ```\n */\nexport const NetworkThresholdsCard = forwardRef<HTMLDivElement, NetworkThresholdsCardProps>(\n  (\n    {\n      endTime,\n      keyValue,\n      keygenThreshold,\n      sessionNumber,\n      signatureThreshold,\n      startTime,\n      thresholdType,\n      title,\n      titleInfo,\n      viewHistoryUrl,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <Card {...props} ref={ref}>\n        {/** Top */}\n        <TitleWithInfo title={title} info={titleInfo} variant='h5' titleComponent='h5' />\n\n        {/** Content */}\n        <div className='flex justify-evenly'>\n          <div className='flex flex-col items-center justify-center'>\n            <TitleWithInfo title='Keygen' info='Keygen' variant='body2' titleComponent='p' />\n            <Typography variant='h4' fw='bold' className='mt-2'>\n              {keygenThreshold}\n            </Typography>\n          </div>\n\n          <div className='flex flex-col items-center justify-center'>\n            <TitleWithInfo title='Signature' info='Signature' variant='body2' titleComponent='p' />\n            <Typography variant='h4' fw='bold' className='mt-2'>\n              {signatureThreshold}\n            </Typography>\n          </div>\n        </div>\n\n        <TimeProgress startTime={startTime} endTime={endTime} />\n\n        {/** Bottom */}\n        <div className='flex justify-between'>\n          <div className='flex items-center space-x-2'>\n            <Chip color='green' className='inline-block'>\n              {thresholdType}\n            </Chip>\n            <LabelWithValue label='session:' value={sessionNumber} />\n            <span className='inline-block font-semibold body2'>/</span>\n            <KeyValueWithButton size='sm' keyValue={keyValue} />\n          </div>\n          <Button className='block' variant='link' href={viewHistoryUrl} target='_blank' size='sm'>\n            View history\n          </Button>\n        </div>\n      </Card>\n    );\n  }\n);\n","export * from './NetworkThresholdsCard';\nexport * from './useNetworkThresholdsSeedData';\n","import { randNumber, randRecentDate, randSoonDate } from '@ngneat/falso';\n\nimport { NetworkThresholdsCardDataProps } from './types';\n\nexport function useNetworkThresholdsSeedData(): NetworkThresholdsCardDataProps {\n  return {\n    title: 'Network Thresholds',\n    titleInfo: 'Network Thresholds',\n    keygenThreshold: randNumber({ min: 2, max: 20 }),\n    signatureThreshold: randNumber({ min: 2, max: 20 }),\n    startTime: randRecentDate(),\n    endTime: randSoonDate(),\n    thresholdType: 'current',\n    sessionNumber: randNumber({ min: 100, max: 1000 }),\n    keyValue: '0x026d513cf4e5f0e605a6584322382bd5896d4f0dfdd1e9a7',\n    viewHistoryUrl: 'https://webb.tools',\n  };\n}\n","import { ChevronLeft, ChevronRight } from '@nepoche/webb-ui-components/icons';\nimport { getPaginationItems } from '@nepoche/webb-ui-components/utils';\nimport cx from 'classnames';\nimport React, { useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { PaginationProps } from './types';\n\nexport const Pagination = React.forwardRef<HTMLDivElement, PaginationProps>(\n  (\n    {\n      boundaryCount,\n      canNextPage,\n      canPreviousPage,\n      className,\n      itemsPerPage,\n      nextPage,\n      page: currentPage,\n      previousPage,\n      setPageIndex,\n      siblingCount,\n      totalItems,\n      totalPages,\n      ...props\n    },\n    ref\n  ) => {\n    const paginationDisplayItems = useMemo(\n      () => getPaginationItems({ page: currentPage, count: totalPages, boundaryCount, siblingCount }),\n      [boundaryCount, currentPage, siblingCount, totalPages]\n    );\n\n    const showingItemsCount = useMemo(\n      () => (itemsPerPage && totalItems ? Math.min(itemsPerPage, totalItems) : '-'),\n      [itemsPerPage, totalItems]\n    );\n\n    const mergedClsx = useMemo(\n      () =>\n        twMerge(\n          'flex items-center justify-between px-3 py-4',\n          'border-mono-40 dark:border-mono-140 border-t',\n          className\n        ),\n      [className]\n    );\n\n    return (\n      <div {...props} className={mergedClsx} ref={ref}>\n        {/** Left label */}\n        <p className='body1 text-mono-160 dark:text-mono-100'>\n          Showing {showingItemsCount} Keys out of {totalItems ?? '-'}\n        </p>\n\n        {/** Right buttons */}\n        <div className='flex items-center space-x-2'>\n          <ChevronLeft\n            className={cx('cursor-pointer')}\n            onClick={() => {\n              if (canPreviousPage && previousPage) {\n                previousPage();\n              }\n            }}\n            size='lg'\n          />\n\n          {paginationDisplayItems.map((page, idx) =>\n            typeof page === 'number' ? (\n              <button\n                key={`${page}-${idx}`}\n                className={cx(\n                  'p-2 text-center body1 rounded-md',\n                  currentPage === page\n                    ? 'bg-blue-0 text-blue dark:bg-blue-120 dark:text-blue-0' // Active\n                    : 'bg-mono-0 dark:bg-mono-180 text-mono-200 dark:text-mono-40 hover:bg-mono-20 hover:dark:bg-mono-160'\n                )}\n                onClick={() => setPageIndex?.(page - 1)}\n              >\n                {page}\n              </button>\n            ) : (\n              <p key={`${page}-${idx}`} className='p-2 text-center select-none body1'>\n                ...\n              </p>\n            )\n          )}\n\n          <ChevronRight\n            className={cx('cursor-pointer')}\n            onClick={() => {\n              if (canNextPage && nextPage) {\n                nextPage();\n              }\n            }}\n            size='lg'\n          />\n        </div>\n      </div>\n    );\n  }\n);\n","export * from './Pagination';\n","import * as ProgressPrimitive from '@radix-ui/react-progress';\nimport cx from 'classnames';\nimport React, { useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { ProgressClassName, ProgressProps } from './types';\n\nconst classNames: ProgressClassName = {\n  sm: {\n    root: 'h-6 overflow-hidden rounded-lg bg-mono-20 dark:bg-mono-140',\n    indicator:\n      'flex items-center justify-center h-full duration-300 ease-in-out rounded-l-lg bg-green-0 dark:bg-blue-120',\n    label: 'font-semibold body3 text-green dark:text-blue-40',\n  },\n  md: {\n    root: 'h-2 overflow-hidden rounded-full bg-mono-40 dark:bg-mono-140',\n    indicator:\n      'flex items-center justify-center h-full duration-300 ease-in-out rounded-l-full bg-blue dark:bg-blue-50',\n    label: '',\n  },\n  lg: {\n    root: 'h-[60px] overflow-hidden rounded-lg bg-mono-20 dark:bg-mono-160',\n    indicator:\n      'flex items-center justify-center h-full duration-300 ease-in-out rounded-l-lg bg-blue-0 dark:bg-blue-120',\n    label: 'font-bold body3 text-blue dark:text-blue-40',\n  },\n};\n\n/**\n * The `Progress` component\n *\n * @example\n *\n * ```jsx\n *    <Progress size='sm' value={60} />\n *    <Progress value={60} />\n *    <Progress size='lg' value={60} />\n * ```\n */\nexport const Progress: React.FC<ProgressProps> = ({\n  className,\n  max,\n  prefixLabel = '',\n  size = 'md',\n  suffixLabel = '',\n  value: valueProp,\n}) => {\n  const hasValue = useMemo(() => !!valueProp, [valueProp]);\n\n  const displayValue = useMemo(() => {\n    // Not display the value if the size is \"md\"\n    if (size === 'md') {\n      return '';\n    }\n\n    // If the valueProp has value or the progress size not equal to 'lg' => Displays the `prefixLabel` if it has value\n    const prefix = typeof valueProp === 'number' || size !== 'lg' ? prefixLabel : '';\n\n    // Display the value if it is not null, otherwise if the size is equal to \"sm\" display '0', otherwise displays \"Unavailable\"\n    const value = typeof valueProp === 'number' ? valueProp : size === 'sm' ? '0' : 'Unavailable';\n\n    // If the valueProp has value or the progress size not equal to 'lg' => Display the `suffixLabel` if it has value\n    const suffix = typeof valueProp === 'number' || size !== 'lg' ? suffixLabel : '';\n\n    return `${prefix}${value}${suffix}`;\n  }, [prefixLabel, size, suffixLabel, valueProp]);\n\n  return (\n    <ProgressPrimitive.Root value={valueProp} className={twMerge(classNames[size]['root'], className)} max={max}>\n      {hasValue && (\n        <ProgressPrimitive.Indicator\n          style={{ width: `${valueProp}%` }}\n          className={cx(\n            classNames[size]['indicator'],\n            'radix-state-indeterminate:bg-transparent dark:radix-state-indeterminate:bg-transparent'\n          )}\n        >\n          <span className={classNames[size]['label']}>{displayValue}</span>\n        </ProgressPrimitive.Indicator>\n      )}\n\n      {!hasValue && (\n        <span className={cx(classNames[size]['label'], 'w-full h-full flex justify-center items-center')}>\n          {displayValue}\n        </span>\n      )}\n    </ProgressPrimitive.Root>\n  );\n};\n","export * from './Progress';\n","import * as SliderPrimitive from '@radix-ui/react-slider';\nimport cx from 'classnames';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { SliderProps, SliderThumbProps } from './types';\n\n/**\n * The `Slider` component\n *\n * Props:\n *\n * - `defaultValue`: The value of the slider when initially rendered. Use when you do not need to control the state of the slider.\n * - `value`: The controlled value of the slider. Must be used in conjunction with `onChange`.\n * - `onChange`: Event handler called when the value changes.\n * - `minStepsBetweenThumbs`: The minimum permitted steps between multiple.\n * - `name`: The name of the slider. Submitted with its owning form as part of a name/value pair.\n * - `isDisabled`: When true, prevents the user from interacting with the slider.\n * - `min`: The minimum value for the range.\n * - `max`: The maximum value for the range\n * - `step`: The stepping interval.\n *\n * ```jsx\n *  <Slider className='mt-4' defaultValue={[25]} />\n *  <Slider className='mt-4' hasLabel defaultValue={[25]} />\n *  <Slider className='mt-4' value={sliderVal} onChange={setSliderVal} />\n *  <Slider className='mt-4' hasLabel defaultValue={[25, 75]} />\n * ```\n */\nexport const Slider = React.forwardRef<HTMLSpanElement, SliderProps>(\n  ({ className, defaultValue, hasLabel, isDisabled, onChange, value: valueProp, ...props }, ref) => {\n    // Internal state to display labels\n    const [value, setValue] = useState<number[] | undefined>(valueProp ?? defaultValue);\n\n    useEffect(() => {\n      if (!value || !value.length || value.length > 2) {\n        throw new Error(\n          '[Slider.tsx] You must provide `defaultValue` or `value` and `value.length` should less than 3 to the Slider component'\n        );\n      }\n    }, [value]);\n\n    const onValueChange = useCallback(\n      (nextVal: number[]) => {\n        setValue(nextVal);\n        if (onChange) {\n          onChange(nextVal);\n        }\n      },\n      [onChange]\n    );\n\n    return (\n      <div className={twMerge('min-w-[495px] min-h-[36px] flex items-end', className)}>\n        <SliderPrimitive.Root\n          {...props}\n          defaultValue={value}\n          ref={ref}\n          aria-label='value'\n          className={'relative flex items-center w-full h-4 touch-none'}\n          value={value}\n          onValueChange={onValueChange}\n        >\n          <SliderPrimitive.Track className='relative w-full h-2 rounded-full bg-mono-80 dark:bg-mono-140 grow'>\n            <SliderPrimitive.Range className='absolute h-full rounded-full bg-blue dark:bg-blue-50' />\n          </SliderPrimitive.Track>\n\n          {value?.length === 1 && <SliderThumb hasLabel={hasLabel} value={value[0]} />}\n\n          {value?.length === 2 && (\n            <>\n              <SliderThumb hasLabel={hasLabel} value={value[0]} />\n              <SliderThumb hasLabel={hasLabel} value={value[1]} />\n            </>\n          )}\n        </SliderPrimitive.Root>\n      </div>\n    );\n  }\n);\n\n/***** Internal components */\n\nfunction SliderThumb({ hasLabel, value }: SliderThumbProps) {\n  return (\n    <SliderPrimitive.Thumb\n      className={cx(\n        'block relative h-4 w-4 rounded-full',\n        'bg-blue dark:bg-blue-50',\n        'cursor-pointer',\n        'focus:outline-none dark:focus:outline-none',\n        'focus-visible:outline-none dark:focus-visible:outline-none',\n        'focus:ring',\n        'focus:ring-blue-50 dark:focus:ring-blue-60',\n        'focus:ring-opacity-75 dark:focus:ring-opacity-50'\n      )}\n    >\n      {hasLabel && <span className='absolute left-0 translate-x-1/4 -top-5 utility'>{value}</span>}\n    </SliderPrimitive.Thumb>\n  );\n}\n","export * from './Slider';\n","import { Typography } from '@nepoche/webb-ui-components/typography';\nimport React, { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { TitleWithInfo } from '../TitleWithInfo';\nimport { StatsProps } from './types';\n\nexport const Stats = forwardRef<HTMLDivElement, StatsProps>(({ className, items, ...props }, ref) => {\n  const mergedClsx = useMemo(() => twMerge('flex items-center pb-12 justify-evenly', className), [className]);\n\n  return (\n    <div {...props} className={mergedClsx} ref={ref}>\n      {items.map((item, idx) => (\n        <div key={`${item.titleProps.title}-${idx}`} className='flex flex-col items-center space-y-2'>\n          <TitleWithInfo {...item.titleProps} />\n\n          <Typography variant='h4' fw='bold'>\n            {item.value.toString()}\n          </Typography>\n        </div>\n      ))}\n    </div>\n  );\n});\n","export * from './Stats';\n","import * as SwitchPrimitive from '@radix-ui/react-switch';\nimport cx from 'classnames';\nimport { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { SwitcherProps } from './types';\n\nexport const Switcher = forwardRef<HTMLButtonElement, SwitcherProps>(({ className, ...props }, ref) => {\n  const mergedClxs = useMemo(\n    () =>\n      twMerge(\n        cx(\n          'group',\n          'radix-state-checked:bg-blue-10 dark:radix-state-checked:bg-blue-90',\n          'radix-state-unchecked:bg-mono-80 dark:radix-state-unchecked:bg-mono-140',\n          'relative inline-flex h-[6px] w-[28px] flex-shrink-0 cursor-pointer rounded-full transition-colors duration-200 ease-in-out',\n          'focus:outline-none focus-visible:ring focus-visible:ring-purple-500 focus-visible:ring-opacity-75',\n          'radix-disabled:pointer-events-none radix-disabled:bg-mono-40 dark:radix-disabled:bg-mono-120'\n        ),\n        className\n      ),\n    [className]\n  );\n\n  return (\n    <SwitchPrimitive.Root {...props} ref={ref} className={mergedClxs}>\n      <SwitchPrimitive.Thumb\n        className={cx(\n          'group-radix-state-checked:translate-x-3',\n          'group-radix-state-unchecked:translate-x-0',\n          'group-radix-state-checked:bg-blue-70 dark:group-radix-state-checked:bg-blue-50',\n          'absolute inline-block top-1/2 -translate-y-1/2',\n          'shadow-[0_1px_4px_0_rgba(0,0,0,0.35)] dark:shadow-[0_2px_4px_0_rgba(6,6,6,0.35)]',\n          'group-hover:shadow-[0_2px_4px_1px_rgba(0,0,0,0.35)] dark:group-hover:shadow-[0_3px_4px_2px_rgba(6,6,6,0.35)]',\n          'pointer-events-none inline-block h-4 w-4 transform rounded-full bg-mono-0 dark:bg-mono-40 transition duration-200 ease-in-out',\n          'radix-disabled:bg-mono-20 dark:radix-disabled:bg-mono-140'\n        )}\n      />\n    </SwitchPrimitive.Root>\n  );\n});\n","export * from './Switcher';\n","import cx from 'classnames';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { TDataProps } from './types';\n\n/**\n * The styler wrapper of `<td></td>` tag, use inside `<tbody></tbody>` tab for table\n */\nexport const TData = forwardRef<HTMLTableCellElement, TDataProps>(({ children, className, ...props }, ref) => {\n  return (\n    <td\n      {...props}\n      className={twMerge(\n        cx(\n          'px-2 py-4 text-left border-t first:pl-6 last:pr-6 body1',\n          'border-mono-40 dark:border-mono-140',\n          'text-mono-140 dark:text-mono-60',\n          'bg-mono-0 dark:bg-mono-180',\n          'group-hover:bg-blue-0 dark:group-hover:bg-mono-160'\n        ),\n        className\n      )}\n      ref={ref}\n    >\n      {children}\n    </td>\n  );\n});\n","import { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { THeaderProps } from './types';\n\n/**\n * The styler wrapper of `<th></th>` tag, use inside `<thead></thead>` tab for table\n */\nexport const THeader = forwardRef<HTMLTableCellElement, THeaderProps>(({ children, className, ...props }, ref) => {\n  return (\n    <th\n      {...props}\n      className={twMerge(\n        'px-2 py-5 text-left border-y body1 first:pl-6 last:pr-6 border-mono-40 dark:border-mono-140 text-mono-140 dark:text-mono-60 bg-mono-0 dark:bg-mono-180',\n        className\n      )}\n      ref={ref}\n    >\n      {children}\n    </th>\n  );\n});\n","import { flexRender, RowData } from '@tanstack/react-table';\nimport React, { forwardRef } from 'react';\n\nimport { Pagination } from '../Pagination';\nimport { TData } from './TData';\nimport { THeader } from './THeader';\nimport { TableProps } from './types';\n\nconst TableComp = <T extends RowData>(\n  { isDisplayFooter, isPaginated, tableProps: table, totalRecords = 0, ...props }: TableProps<T>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) => {\n  return (\n    <div {...props} ref={ref}>\n      <table className='w-full border-collapse table-auto'>\n        <thead>\n          {table.getHeaderGroups().map((headerGroup) => (\n            <tr key={headerGroup.id}>\n              {headerGroup.headers.map((header) => (\n                <THeader key={header.id}>\n                  {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\n                </THeader>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows.map((row) => (\n            <tr key={row.id} className='group'>\n              {row.getVisibleCells().map((cell) => (\n                <TData key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</TData>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n        {isDisplayFooter && (\n          <tfoot>\n            {table.getFooterGroups().map((footerGroup) => (\n              <tr key={footerGroup.id}>\n                {footerGroup.headers.map((header) => (\n                  <THeader key={header.id}>\n                    {header.isPlaceholder ? null : flexRender(header.column.columnDef.footer, header.getContext())}\n                  </THeader>\n                ))}\n              </tr>\n            ))}\n          </tfoot>\n        )}\n      </table>\n\n      {/** Pagination */}\n      {isPaginated && (\n        <Pagination\n          itemsPerPage={table.getState().pagination.pageSize}\n          totalItems={Math.max(table.getPrePaginationRowModel().rows.length, totalRecords)}\n          page={table.getState().pagination.pageIndex + 1}\n          totalPages={table.getPageCount()}\n          canPreviousPage={table.getCanPreviousPage()}\n          previousPage={table.previousPage}\n          canNextPage={table.getCanNextPage()}\n          nextPage={table.nextPage}\n          setPageIndex={table.setPageIndex}\n        />\n      )}\n    </div>\n  );\n};\n\nexport const Table = forwardRef(TableComp);\n","export * from './Table';\nexport * from './TData';\nexport * from './THeader';\n","import cx from 'classnames';\nimport { forwardRef, useCallback, useEffect, useMemo, useState } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { TabProps, TabsProps } from './types';\n\n/**\n * The `Tabs` component\n *\n * @example\n *\n * ```jsx\n *\n *  <Tabs value={['all', 'for', 'against', 'abstain']} />\n *\n * ```\n */\nexport const Tabs = forwardRef<HTMLDivElement, TabsProps>(({ className, onChange, value, ...props }, ref) => {\n  const [selectedTab, setSelectedTab] = useState(value[0]);\n\n  const onTabChange = useCallback(\n    (nextValue: string) => {\n      setSelectedTab(nextValue);\n\n      onChange?.(nextValue);\n    },\n    [onChange]\n  );\n\n  const tabs = useMemo(() => value, [value]);\n\n  const mergedClsx = useMemo(() => twMerge('flex items-center space-x-2', className), [className]);\n\n  // Update the default selected tab when `value` prop change\n  useEffect(() => {\n    setSelectedTab(value[0]);\n  }, [value]);\n\n  return (\n    <div {...props} className={mergedClsx} ref={ref}>\n      {tabs.map((tab, idx) => {\n        return (\n          <Tab key={`${tab}-${idx}`} isActive={selectedTab === tab} onClick={() => onTabChange(tab)}>\n            {tab}\n          </Tab>\n        );\n      })}\n    </div>\n  );\n});\n\n/**\n * The `Tab` component\n */\nconst Tab = forwardRef<HTMLButtonElement, TabProps>(({ children, className, isActive, ...props }, ref) => {\n  return (\n    <button\n      {...props}\n      disabled={isActive}\n      className={twMerge(\n        cx(\n          'flex items-center justify-center grow shrink basis-0',\n          'py-2 font-bold rounded-lg body2',\n          'text-mono-120 dark:text-mono-80 bg-mono-0 dark:bg-mono-180',\n          'disabled:bg-blue-0 dark:disabled:bg-blue-120 disabled:text-blue-70 dark:disabled:text-blue-50'\n        ),\n        className\n      )}\n      ref={ref}\n    >\n      <span className='inline-block !text-inherit'>{children}</span>\n    </button>\n  );\n});\n","export * from './Tabs';\n","import { Half2Icon } from '@radix-ui/react-icons';\nimport { useDarkMode } from '@nepoche/webb-ui-components/hooks';\nimport { MoonLine, SunLine } from '@nepoche/webb-ui-components/icons';\nimport { useMemo } from 'react';\n\nconst ThemeSwitcherButton = () => {\n  const [isDarkMode, toggleThemeMode] = useDarkMode();\n\n  const Icon = useMemo(() => {\n    const preferredTheme = isDarkMode ? 'dark' : 'light';\n    switch (preferredTheme) {\n      case 'light':\n        return <SunLine size='lg' />;\n      case 'dark':\n        return <MoonLine size='lg' />;\n      default:\n        return <Half2Icon className='w-6 h-6 fill-mono-200 dark:fill-mono-40' />;\n    }\n  }, [isDarkMode]);\n\n  return (\n    <button className='relative inline-block text-left' onClick={() => toggleThemeMode(isDarkMode ? 'light' : 'dark')}>\n      {Icon}\n    </button>\n  );\n};\n\nexport default ThemeSwitcherButton;\n","import { Half2Icon } from '@radix-ui/react-icons';\nimport { useDarkMode } from '@nepoche/webb-ui-components/hooks';\nimport { MoonLine, SunLine } from '@nepoche/webb-ui-components/icons';\nimport { useMemo } from 'react';\n\nimport { MenuItem } from '../MenuItem';\n\ntype ThemeSwitcherMenuItemProps = {\n  className?: string;\n};\n\nconst ThemeSwitcherMenuItem = (props: ThemeSwitcherMenuItemProps) => {\n  const [isDarkMode, toggleThemeMode] = useDarkMode();\n\n  const Icon = useMemo(() => {\n    const currentTheme = isDarkMode ? 'dark' : 'light';\n    switch (currentTheme) {\n      case 'light':\n        return <MoonLine size='lg' />;\n      case 'dark':\n        return <SunLine size='lg' />;\n      default:\n        return <Half2Icon className='w-6 h-6 fill-mono-200 dark:fill-mono-40' />;\n    }\n  }, [isDarkMode]);\n\n  return (\n    <MenuItem onClick={() => toggleThemeMode(isDarkMode ? 'light' : 'dark')} icon={Icon} className={props.className}>\n      {isDarkMode ? 'Light Theme' : 'Dark Theme'}\n    </MenuItem>\n  );\n};\n\nexport default ThemeSwitcherMenuItem;\n","export * from './ThemeSwitcherButton';\nexport { default as ThemeSwitcherButton } from './ThemeSwitcherButton';\nexport { default as ThemeSwitcherMenuItem } from './ThemeSwitcherMenuItem';\n","import { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { TimeLineProps } from './types';\n\n/**\n * The `TimeLine` style wrapper\n *\n * @example\n *\n * ```jsx\n *    <TimeLine>\n *      <TimeLineItem\n *        title='Proposed'\n *        time={randRecentDate()}\n *        txHash={randEthereumAddress()}\n *        externalUrl='https://webb.tools'\n *      />\n *    </TimeLine>\n * ```\n */\nexport const TimeLine = forwardRef<HTMLDivElement, TimeLineProps>(({ children, className, ...props }, ref) => {\n  return (\n    <div\n      {...props}\n      className={twMerge(\n        'flex flex-col space-y-2 border-l border-blue dark:border-blue-30',\n        'translate-x-3 transalte-y-0.5',\n        className\n      )}\n      ref={ref}\n    >\n      {children}\n    </div>\n  );\n});\n","import { CheckboxCircleLine, ExternalLinkLine, Spinner } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { shortenHex } from '@nepoche/webb-ui-components/utils';\nimport { formatDistanceToNow } from 'date-fns';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { LabelWithValue } from '../LabelWithValue';\nimport { TimeLineItemProps } from './types';\n\n/**\n * The `TimeLineItem`, must use inside `<TimeLine></TimeLine>` component\n *\n * @example\n *\n * ```jsx\n *    <TimeLineItem\n *      title='Proposed'\n *      time={randRecentDate()}\n *      txHash={randEthereumAddress()}\n *      externalUrl='https://webb.tools'\n *    />\n *\n *    <TimeLineItem\n *      title='Signed'\n *      time={randRecentDate()}\n *      txHash={randEthereumAddress()}\n *      externalUrl='https://webb.tools'\n *      extraContent={\n *        <div className='flex items-center space-x-2'>\n *          <KeyValueWithButton keyValue={randEthereumAddress()} size='sm' />\n *          <Button variant='link' size='sm' className='uppercase'>\n *            Detail\n *          </Button>\n *        </div>\n *       }\n *     />\n *\n *    <TimeLineItem\n *      title='Key Rotated'\n *      time={randRecentDate()}\n *      txHash={randEthereumAddress()}\n *      externalUrl='https://webb.tools'\n *      extraContent={\n *        <div className='flex items-center space-x-4'>\n *          <LabelWithValue label='Height' value={1000654} />\n *          <LabelWithValue label='Proposal' value='KeyRotation' />\n *          <LabelWithValue\n *            label='Proposers'\n *            value={\n *              <AvatarGroup total={randNumber({ min: 10, max: 20 })}>\n *                {Object.values(keygen.authorities).map((au) => (\n *                   <Avatar key={au.id} src={au.avatarUrl} alt={au.id} />\n *                ))}\n *              </AvatarGroup>\n *            }\n *          />\n *          <Button size='sm' variant='link' className='uppercase'>\n *            Details\n *          </Button>\n *        </div>\n *      }\n *    />\n * ```\n */\nexport const TimeLineItem = forwardRef<HTMLDivElement, TimeLineItemProps>(\n  ({ className, externalUrl, extraContent, isLoading, time, title, txHash, ...props }, ref) => {\n    return (\n      <div {...props} className={twMerge('flex flex-col -ml-3 -mt-0.5 space-y-1', className)} ref={ref}>\n        <div className='flex items-center space-x-2'>\n          {isLoading ? (\n            <Spinner size='lg' className='inline-block rounded-full fill-mono-0 dark:fill-mono-180' />\n          ) : (\n            <CheckboxCircleLine\n              size='lg'\n              className='inline-block rounded-full fill-blue dark:fill-blue-30 bg-mono-0 dark:bg-mono-180'\n            />\n          )}\n          <Typography component='span' variant='body1' fw='bold' className='inline-block text-blue dark:text-blue-30'>\n            {title}\n          </Typography>\n          <Typography variant='utility' className='inline-block uppercase'>\n            {formatDistanceToNow(time, { addSuffix: true })}\n          </Typography>\n        </div>\n\n        {txHash && (\n          <div className='flex items-center ml-8 space-x-1'>\n            <LabelWithValue labelVariant='body3' label='tx hash:' value={shortenHex(txHash, 3)} valueTooltip={txHash} />\n            <a href={externalUrl} target='_blank' rel='noopener noreferrer'>\n              <ExternalLinkLine />\n            </a>\n          </div>\n        )}\n\n        <div className='ml-8'>{extraContent}</div>\n      </div>\n    );\n  }\n);\n","export * from './TimeLine';\nexport * from './TimeLineItem';\n","import { calculateDateProgress, formatDateToUtc } from '@nepoche/webb-ui-components/utils';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { LabelWithValue } from '../LabelWithValue';\nimport { Progress } from '../Progress';\nimport { TimeProgressProps } from './types';\n\n/**\n * The `TimeProgress` component displays the `Progress` bar with the `startTime` and `endTime` dynamically\n *\n * @example\n *\n * ```jsx\n *  <TimeProgress startTime=\"Sep 09 2022 (15:08:51 PM UTC)\" endTime=\"Sep 09 2022 (15:08:51 PM UTC)\" />\n * ```\n */\nexport const TimeProgress = React.forwardRef<HTMLDivElement, TimeProgressProps>(\n  ({ endTime, now, startTime, ...props }, ref) => {\n    const [dateProgress, setDateProgress] = useState<number | null>(calculateDateProgress(startTime, endTime, now));\n    const timerRef = useRef<NodeJS.Timeout>();\n\n    // Re-calculate progress each 1s\n    useEffect(() => {\n      const timer = setInterval(() => {\n        const progress = calculateDateProgress(startTime, endTime, now);\n        setDateProgress(progress);\n      }, 1000);\n\n      timerRef.current = timer;\n\n      return () => {\n        if (timerRef.current) {\n          clearInterval(timerRef.current);\n        }\n      };\n    }, [dateProgress, endTime, startTime, now]);\n\n    return (\n      <div {...props} ref={ref}>\n        <Progress value={dateProgress} className='w-full' />\n        <div className='flex items-center justify-between mt-3'>\n          <LabelWithValue label='start:' value={formatDateToUtc(startTime)} />\n          <LabelWithValue label='end:' value={formatDateToUtc(endTime)} />\n        </div>\n      </div>\n    );\n  }\n);\n","export * from './TimeProgress';\n","import { InformationLine } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport cx from 'classnames';\nimport { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { Tooltip, TooltipBody, TooltipTrigger } from '../Tooltip';\nimport { TitleWithInfoProps } from './types';\n\n/**\n * The re-useable title component with small info in a popup tooltip\n *\n * @example\n *\n * ```jsx\n *  <TitleWithInfo title='Active key' info='This is the active key card' />\n * ```\n */\nexport const TitleWithInfo = forwardRef<HTMLDivElement, TitleWithInfoProps>(\n  ({ className, info, title, titleClassName, titleComponent = 'span', variant = 'body1', ...props }, ref) => {\n    const mergedClsx = useMemo(() => {\n      return twMerge('flex items-center space-x-1 text-mono-180 dark:text-mono-0', className);\n    }, [className]);\n\n    return (\n      <div {...props} className={mergedClsx} ref={ref}>\n        <Typography component={titleComponent} variant={variant} fw='bold' className={titleClassName}>\n          {title}\n        </Typography>\n        {info && (\n          <Tooltip>\n            <TooltipTrigger className='text-center' asChild>\n              <span className='cursor-pointer !text-inherit'>\n                <InformationLine className='!fill-current pointer-events-none' />\n              </span>\n            </TooltipTrigger>\n            <TooltipBody>{info}</TooltipBody>\n          </Tooltip>\n        )}\n      </div>\n    );\n  }\n);\n","export * from './TitleWithInfo';\n","import { TokenIcon } from '@nepoche/webb-ui-components/icons';\nimport cx from 'classnames';\nimport { forwardRef, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { TokenSelectorProps } from './types';\n\nexport const TokenSelector = forwardRef<HTMLButtonElement, TokenSelectorProps>(\n  ({ children, className, disabled, isActive, ...props }, ref) => {\n    const mergedClsx = useMemo(\n      () =>\n        twMerge(\n          cx(\n            'px-3 py-2 flex items-center space-x-2 max-w-fit',\n            'bg-mono-0 dark:bg-mono-160',\n            'border rounded-lg border-mono-60 dark:border-mono-120',\n            'text-mono-120 dark:text-mono-0',\n            'hover:bg-mono-20 dark:hover:bg-mono-120',\n            'disabled:opacity-50 disabled:pointer-events-none dark:disabled:border-mono-60'\n          ),\n          className\n        ),\n      [className]\n    );\n\n    const isDisabled = useMemo(() => isActive || disabled, [disabled, isActive]);\n\n    return (\n      <button {...props} disabled={isDisabled} className={mergedClsx} ref={ref}>\n        <TokenIcon name={children.toLowerCase()} size='lg' />\n\n        <span className='inline-block text-inherit'>{children}</span>\n      </button>\n    );\n  }\n);\n","export * from './TokenSelector';\n","import * as TooltipPrimitive from '@radix-ui/react-tooltip';\nimport cx from 'classnames';\nimport { cloneElement, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { TooltipBodyProps, TooltipProps, TooltipTriggerProps } from './types';\n\n/**\n * The `ToolTipBody` component, use after the `TooltipTrigger`.\n * Reresents the popup content of the tooltip.\n * Must use inside the `Tooltip` component.\n *\n * @example\n *\n * ```jsx\n *    <ToolTipBody className='max-w-[185px] w-auto'>\n *      <span>A report of a DKG authority misbehaving. (Body xs Regular)</span>\n *    </ToolTipBody>\n * ```\n */\nexport const TooltipBody: React.FC<TooltipBodyProps> = ({ button, children, className, title, ...props }) => {\n  return (\n    <TooltipPrimitive.Content\n      sideOffset={4}\n      className={cx(\n        'radix-side-top:animate-slide-down-fade',\n        'radix-side-right:animate-slide-left-fade',\n        'radix-side-bottom:animate-slide-up-fade',\n        'radix-side-left:animate-slide-right-fade',\n        'inline-flex items-center break-all rounded p-2 min-w-0 max-w-[300px]',\n        'bg-mono-20 dark:bg-mono-160',\n        'webb-shadow-sm'\n      )}\n      {...props}\n    >\n      <TooltipPrimitive.Arrow className='fill-current text-mono-20 dark:text-mono-160 webb-shadow-sm' />\n      <div className={twMerge('body4 text-mono-140 dark:text-mono-80 font-normal', className)}>\n        {title && <h6 className='mb-2 utility'>{title}</h6>}\n        {children}\n        {button && <div className='flex justify-end mt-4'>{button}</div>}\n      </div>\n    </TooltipPrimitive.Content>\n  );\n};\n\n/**\n * The `TooltipTrigger` component, wrap around a trigger component like `Button` or `Chip` or a html tag.\n * Must use inside the `Tooltip` component.\n *\n * @example\n *\n * ```jsx\n *    <ToolTipTrigger>\n *      <Chip color='blue'>Text only</Chip>\n *    </ToolTipTrigger>\n * ```\n */\nexport const TooltipTrigger: React.FC<TooltipTriggerProps> = ({ children, className, ...props }) => {\n  return (\n    <TooltipPrimitive.Trigger className={className} {...props}>\n      {children}\n    </TooltipPrimitive.Trigger>\n  );\n};\n\n/**\n * The `Tooltip` component.\n *\n * @example\n *\n * ```jsx\n *    <Tooltip isDefaultOpen>\n *      <ToolTipTrigger>\n *        <Chip color='blue'>Text only</Chip>\n *      </ToolTipTrigger>\n *      <ToolTipBody className='max-w-[185px] w-auto'>\n *        <span>A report of a DKG authority misbehaving. (Body xs Regular)</span>\n *      </ToolTipBody>\n *    </Tooltip>\n * ```\n */\nexport const Tooltip: React.FC<TooltipProps> = ({\n  children,\n  className,\n  isDefaultOpen,\n  isDisableHoverableContent,\n  isOpen,\n  onChange,\n  ...props\n}) => {\n  return (\n    <TooltipPrimitive.Provider>\n      <TooltipPrimitive.Root\n        {...props}\n        defaultOpen={isDefaultOpen}\n        open={isOpen}\n        onOpenChange={onChange}\n        disableHoverableContent={isDisableHoverableContent}\n      >\n        {children}\n      </TooltipPrimitive.Root>\n    </TooltipPrimitive.Provider>\n  );\n};\n","export * from './Tooltip';\n","export * from './Avatar';\nexport * from './AvatarGroup';\nexport * from './BridgeInputs';\nexport * from './Button';\nexport * from './Card';\nexport * from './CardTable';\nexport * from './CheckBox';\nexport * from './Chip';\nexport * from './Collapsible';\nexport * from './CopyWithTooltip';\nexport * from './Divider';\nexport * from './Drawer';\nexport * from './Dropdown';\nexport * from './DropdownMenu';\nexport * from './Filter';\nexport * from './Input';\nexport * from './KeyCard';\nexport * from './KeyValueWithButton';\nexport * from './Label';\nexport * from './LabelWithValue';\nexport * from './Logo';\nexport * from './MenuItem';\nexport * from './NetworkThresholdsCard';\nexport * from './Pagination';\nexport * from './Progress';\nexport * from './Slider';\nexport * from './Stats';\nexport * from './Switcher';\nexport * from './Table';\nexport * from './Tabs';\nexport * from './ThemeSwitcher';\nexport * from './TimeLine';\nexport * from './TimeProgress';\nexport * from './TitleWithInfo';\nexport * from './TokenSelector';\nexport * from './Tooltip';\n","import React, { ErrorInfo } from 'react';\n\nimport { WebbUIErrorBoudaryProps, WebbUIErrorBoudaryState } from './types';\n\nexport class WebbUIErrorBoudary extends React.Component<WebbUIErrorBoudaryProps, WebbUIErrorBoudaryState> {\n  state: WebbUIErrorBoudaryState = {\n    hasError: false,\n    error: null,\n    errorInfo: null,\n  };\n\n  static getDerivedStateFromError(error: unknown) {\n    console.log(error);\n\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error: error as any };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // You can also log the error to an error reporting service\n    this.props.logger.error(errorInfo);\n    this.props.logger.debug({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo?.componentStack}\n          </details>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","export * from './WebbUIErrorBoudary';\n","export * from './WebbUIErrorBoudary';\n","export * from './useCopyable';\nexport * from './useDarkMode';\nexport * from './useDynamicSVGImport';\nexport * from './useKeygenSeedData';\nexport * from './useSeedData';\nexport * from './useWebbUI';\n","import copyToClipboard from 'copy-to-clipboard';\nimport { useEffect, useRef, useState } from 'react';\n\ntype SetTimeoutReturnType = ReturnType<typeof setTimeout>;\n\n/**\n * Object contains `isCopied`, `copiedText` and `copy` function\n */\nexport type UseCopyableReturnType = {\n  /**\n   * The copy state, determine whether the value has copied or not\n   */\n  isCopied: boolean;\n  /**\n   * Copy the `value` string to clipboard\n   * @param value Represents the value to copy to clipboard\n   */\n  copy: (value: string) => void;\n  /**\n   * The copied text\n   */\n  copiedText: string | undefined;\n};\n\n/**\n *\n * @param {number} display The display time to reset time copy state in miliseconds (default 3000)\n * @returns An object contains `isCopied`, `copiedText` and `copy` function\n */\nexport const useCopyable = (display = 3000): UseCopyableReturnType => {\n  // Reference to to copied string\n  const ref = useRef<string>('');\n\n  // Internal state to manage and reset the copy state\n  const [isCopied, setIsCopied] = useState(false);\n  const [_timeout, _setTimeout] = useState<SetTimeoutReturnType | undefined>();\n\n  const copy = (value: string) => {\n    if (isCopied) {\n      return;\n    }\n\n    ref.current = value;\n    copyToClipboard(value);\n    setIsCopied(true);\n\n    const timeoutObj = setTimeout(() => setIsCopied(false), display);\n    _setTimeout(timeoutObj);\n  };\n\n  // Clear the timeout if the component unmount\n  useEffect(() => {\n    if (_timeout) {\n      return () => clearTimeout(_timeout);\n    }\n    return;\n  }, [_timeout]);\n\n  return {\n    isCopied,\n    copy,\n    copiedText: ref.current,\n  };\n};\n","import { useCallback, useEffect, useState } from 'react';\n\n/**\n * Function to toggle or change the theme mode (possible value: `light`, `dark`, `undefined`)\n */\nexport type ToggleThemeModeFunc = (nextThemeMode?: 'light' | 'dark' | undefined) => void;\n\n/**\n * Hook to get the current theme mode and a function to toggle the theme mode\n * @returns `[isDarkMode, toggleThemeMode]`\n */\nexport function useDarkMode(): [boolean, ToggleThemeModeFunc] {\n  const [preferredTheme, setPreferredTheme] = useState<null | 'dark' | 'light'>(null);\n\n  useEffect(() => {\n    if (\n      localStorage.getItem('theme') === 'dark' ||\n      (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)\n    ) {\n      document.documentElement.classList.add('dark');\n      setPreferredTheme('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      setPreferredTheme('light');\n    }\n  }, []);\n\n  const toggleThemeMode = useCallback<ToggleThemeModeFunc>(\n    (nextThemeMode?: 'light' | 'dark' | undefined) => {\n      let _nextThemeMode: 'light' | 'dark';\n      if (!nextThemeMode) {\n        _nextThemeMode = preferredTheme === 'dark' ? 'light' : 'dark';\n      } else {\n        _nextThemeMode = nextThemeMode;\n      }\n\n      switch (_nextThemeMode) {\n        case 'dark': {\n          if (localStorage.getItem('theme') !== _nextThemeMode) {\n            document.documentElement.classList.add(_nextThemeMode);\n            localStorage.setItem('theme', _nextThemeMode);\n          }\n          break;\n        }\n\n        case 'light': {\n          if (localStorage.getItem('theme') !== _nextThemeMode) {\n            document.documentElement.classList.remove('dark');\n            localStorage.setItem('theme', _nextThemeMode);\n          }\n          break;\n        }\n      }\n\n      setPreferredTheme(_nextThemeMode);\n    },\n    [preferredTheme]\n  );\n\n  return [preferredTheme === 'dark', toggleThemeMode];\n}\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { DefaultTokenIcon } from '../icons';\n\n/**\n * Options for `useDynamicSVGImport` to import cryptocurrency icon dynamically\n */\nexport interface DynamicSVGImportOptions {\n  /**\n   * A optional function which is called when finish loading SVG icon\n   */\n  onCompleted?: (name: string, SvgIcon: React.FC<React.SVGProps<SVGSVGElement>> | undefined) => void;\n  /**\n   * An optional function for handle error when loading SVG icon\n   */\n  onError?: React.ReactEventHandler<SVGSVGElement>;\n}\n\n/**\n * Hook for loading the actual cryptocurrency icon based on the token symbol (e.g. usdt, polkadot, ...)\n * @param _name Represent the token symbol to get the actual icon\n * @param options Represent the option when using the hooks\n * @returns `error`, `loading` and `SvgIcon` in an object\n */\nexport function useDynamicSVGImport(name: string, options: DynamicSVGImportOptions = {}) {\n  const ImportedIconRef = useRef<React.FC<React.SVGProps<SVGSVGElement>>>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>();\n\n  const { onCompleted, onError } = options;\n\n  const _name = useMemo(() => name.trim().toLowerCase(), [name]);\n\n  useEffect(() => {\n    setLoading(true);\n    const importIcon = async (): Promise<void> => {\n      try {\n        ImportedIconRef.current = (\n          await import(`!!@svgr/webpack?+svgo,+titleProp,+ref!../icons/tokens/${_name}.svg`)\n        ).default;\n        onCompleted?.(_name, ImportedIconRef.current);\n      } catch (err) {\n        if ((err as any).message.includes('Cannot find module')) {\n          ImportedIconRef.current = DefaultTokenIcon;\n          onCompleted?.(_name, ImportedIconRef.current);\n        } else {\n          console.error('IMPORT ERROR', (err as any).message);\n          onError?.(err as any);\n          setError(err as Error);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    importIcon();\n  }, [_name, onCompleted, onError]);\n\n  return { error, loading, SvgIcon: ImportedIconRef.current };\n}\n","export {};\n","import { randNumber } from '@ngneat/falso';\nimport { useCallback, useMemo } from 'react';\n\nimport { arrayFrom } from '../utils';\n\n/**\n * A hook to create seed data for UI\n * @param factoryFn The factory function to create a seeded data\n * @param sizeArg The optional size indicates the total number of items in the seeded array\n * @returns an array of seeded items and a 'fake' fetch function to get data\n */\nexport const useSeedData = <T,>(factoryFn: () => T, sizeArg?: number) => {\n  const size = useMemo(() => sizeArg ?? randNumber({ min: 50, max: 100 }), [sizeArg]);\n\n  const seedItems = useMemo(() => arrayFrom(size, () => factoryFn()), [factoryFn, size]);\n\n  /**\n   * Fake fetch function to get seeded data\n   * @param options Object contains `pageIndex` and `pageSize` to pagination\n   * @returns Paginated data\n   */\n  const fetchData = useCallback(\n    async (options: {\n      pageIndex: number;\n      pageSize: number;\n    }): Promise<{ rows: T[]; pageCount: number; totalItems: number }> => {\n      // Simualte some network latency\n      await new Promise((r) => setTimeout(r, 500));\n\n      return {\n        rows: seedItems.slice(options.pageIndex * options.pageSize, (options.pageIndex + 1) * options.pageSize),\n        pageCount: Math.ceil(seedItems.length / options.pageSize),\n        totalItems: seedItems.length,\n      };\n    },\n    [seedItems]\n  );\n\n  return {\n    seedItems,\n    fetchData,\n  };\n};\n","import { useContext } from 'react';\n\nimport { WebbUIContext } from '../provider';\n\n/**\n * The hook use the read the Webb UI Kit configurations (ex: `theme`, etc...)\n * @returns `WebbUIContext` contains all configures for the Webb UI Kit\n */\nexport function useWebbUI() {\n  return useContext(WebbUIContext);\n}\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ArrowDropDownFill = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M12 14L8 10H16L12 14Z',\n    displayName: 'ArrowDropDownFill',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ArrowDropUpFill = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M12 10L16 14H8L12 10Z',\n    displayName: 'ArrowDropUpFill',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ArrowLeft = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M7.828 13L13.192 18.364L11.778 19.778L4 12L11.778 4.22195L13.192 5.63595L7.828 11L20 11L20 13L7.828 13Z',\n    displayName: 'ArrowLeft',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ArrowRight = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M16.172 11L10.808 5.63605L12.222 4.22205L20 12L12.222 19.778L10.808 18.364L16.172 13H4V11H16.172Z',\n    displayName: 'ArrowRight',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const AuctionLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M14 20V22H2V20H14ZM14.586 0.686035L22.364 8.46404L20.95 9.88004L19.89 9.52604L17.413 12L23.07 17.657L21.656 19.071L16 13.414L13.596 15.818L13.879 16.95L12.464 18.364L4.686 10.586L6.101 9.17204L7.231 9.45404L13.525 3.16104L13.172 2.10104L14.586 0.686035ZM15.293 4.22204L8.222 11.292L11.757 14.828L18.828 7.75804L15.293 4.22204Z',\n    displayName: 'AuctionLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const BankLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: [\n      <g clipPath='url(#prefix__clip0_163_4126)'>\n        <path\n          d='M2 20h20v2H2v-2zm2-8h2v7H4v-7zm5 0h2v7H9v-7zm4 0h2v7h-2v-7zm5 0h2v7h-2v-7zM2 7l10-5 10 5v4H2V7zm2 1.236V9h16v-.764l-8-4-8 4zM12 8a1 1 0 110-2 1 1 0 010 2z'\n          fill='inherit'\n        />\n      </g>,\n      <defs>\n        <clipPath id='prefix__clip0_163_4126'>\n          <path fill='#fff' d='M0 0h24v24H0z' />\n        </clipPath>\n      </defs>,\n    ],\n    displayName: 'BankLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Block = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: [\n      <path\n        d='M12.05 3.0681L19.7103 7.49075C19.7412 7.50861 19.7603 7.54162 19.7603 7.57735V16.4226C19.7603 16.4584 19.7412 16.4914 19.7103 16.5093L12.05 20.9319C12.0191 20.9498 11.9809 20.9498 11.95 20.9319L4.28975 16.5093C4.25881 16.4914 4.23975 16.4584 4.23975 16.4226V7.57735C4.23975 7.54162 4.25881 7.50861 4.28975 7.49075L11.95 3.0681C11.9809 3.05023 12.0191 3.05024 12.05 3.0681Z'\n        stroke='inherit'\n        strokeWidth='1.8'\n      />,\n      <path d='M19.6604 8L12.0001 12L4.33984 8' stroke='inherit' strokeWidth='1.8' />,\n      <path d='M11.87 20.9375L11.87 12' stroke='inherit' strokeWidth='1.8' />,\n    ],\n    displayName: 'Block',\n    colorUsingStroke: true,\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const CheckboxBlankCircleLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16.001A8 8 0 0012 20zm-.997-4L6.76 11.757l1.414-1.414 2.829 2.829 5.656-5.657 1.415 1.414L11.003 16z',\n    displayName: 'CheckboxBlankCircleLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const CheckboxCircleLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M12 22C6.477 22 2 17.523 2 12C2 6.477 6.477 2 12 2C17.523 2 22 6.477 22 12C22 17.523 17.523 22 12 22ZM12 20C14.1217 20 16.1566 19.1571 17.6569 17.6569C19.1571 16.1566 20 14.1217 20 12C20 9.87827 19.1571 7.84344 17.6569 6.34315C16.1566 4.84285 14.1217 4 12 4C9.87827 4 7.84344 4.84285 6.34315 6.34315C4.84285 7.84344 4 9.87827 4 12C4 14.1217 4.84285 16.1566 6.34315 17.6569C7.84344 19.1571 9.87827 20 12 20ZM11.003 16L6.76 11.757L8.174 10.343L11.003 13.172L16.659 7.515L18.074 8.929L11.003 16Z',\n    displayName: 'CheckboxCircleLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const CheckboxFill = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: [\n      <g clipPath='url(#clip0_163_4181)'>\n        <path d='M4 3H20C20.2652 3 20.5196 3.10536 20.7071 3.29289C20.8946 3.48043 21 3.73478 21 4V20C21 20.2652 20.8946 20.5196 20.7071 20.7071C20.5196 20.8946 20.2652 21 20 21H4C3.73478 21 3.48043 20.8946 3.29289 20.7071C3.10536 20.5196 3 20.2652 3 20V4C3 3.73478 3.10536 3.48043 3.29289 3.29289C3.48043 3.10536 3.73478 3 4 3ZM11.003 16L18.073 8.929L16.659 7.515L11.003 13.172L8.174 10.343L6.76 11.757L11.003 16Z' />\n      </g>,\n      <defs>\n        <clipPath id='clip0_163_4181'>\n          <rect width='24' height='24' fill={props.darkMode ? 'black' : 'white'} />\n        </clipPath>\n      </defs>,\n    ],\n    displayName: 'CheckboxFill',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ChevronDown = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M12 13.172l4.95-4.95 1.415 1.414L12 16 5.637 9.636 7.05 8.222l4.95 4.95z',\n    displayName: 'ChevronDown',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ChevronLeft = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M10.8273 12L15.7773 16.95L14.3633 18.364L7.99934 12L14.3633 5.63601L15.7773 7.05001L10.8273 12Z',\n    displayName: 'ChevronLeft',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ChevronRight = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M13.1727 12L8.22266 7.04999L9.63666 5.63599L16.0007 12L9.63666 18.364L8.22266 16.95L13.1727 12Z',\n    displayName: 'ChevronRight',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ChevronUp = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M12 10.828l-4.95 4.95-1.413-1.414L12 8l6.364 6.364-1.414 1.414-4.95-4.95z',\n    displayName: 'ChevronUp',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Close = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M12.364 10.95L17.314 6l1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95L6 17.314l4.95-4.95L6 7.414 7.414 6l4.95 4.95z'\n      />\n    ),\n    displayName: 'Close',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Coin = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M2 12C2 17.523 6.477 22 12 22C17.523 22 22 17.523 22 12C22 6.477 17.523 2 12 2C6.477 2 2 6.477 2 12ZM20 12C20 16.4183 16.4183 20 12 20C7.58172 20 4 16.4183 4 12C4 7.58172 7.58172 4 12 4C16.4183 4 20 7.58172 20 12ZM12.0008 7.05005L16.9508 12L12.0008 16.95L7.05078 12L12.0008 7.05005ZM9.879 12L12 9.879L14.121 12L12 14.121L9.879 12Z'\n      />\n    ),\n    displayName: 'Coin',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const CommonWealth = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    viewBox: '0 0 20 20',\n    d: 'M2.146 4.419a2.146 2.146 0 100-4.293 2.146 2.146 0 000 4.293zM7.298 4.419a2.146 2.146 0 100-4.293 2.146 2.146 0 000 4.293zM12.45 4.419a2.146 2.146 0 100-4.292 2.146 2.146 0 000 4.292zM17.601 4.419a2.146 2.146 0 100-4.292 2.146 2.146 0 000 4.292zM2.146 9.57a2.146 2.146 0 100-4.292 2.146 2.146 0 000 4.293zM12.45 9.57a2.146 2.146 0 100-4.292 2.146 2.146 0 000 4.293zM17.601 9.57a2.146 2.146 0 100-4.292 2.146 2.146 0 000 4.293zM2.146 14.722a2.146 2.146 0 100-4.293 2.146 2.146 0 000 4.293zM7.298 14.722a2.146 2.146 0 100-4.293 2.146 2.146 0 000 4.293zM17.601 14.722a2.146 2.146 0 100-4.293 2.146 2.146 0 000 4.293zM2.146 19.874a2.146 2.146 0 100-4.292 2.146 2.146 0 000 4.292zM7.298 19.874a2.146 2.146 0 100-4.292 2.146 2.146 0 000 4.292zM12.45 19.874a2.146 2.146 0 100-4.292 2.146 2.146 0 000 4.292zM17.601 19.874a2.146 2.146 0 100-4.292 2.146 2.146 0 000 4.292zM7.298 5.172L5.045 7.424l2.253 2.253L9.55 7.424 7.298 5.172zm5.152 5.151l-2.253 2.253 2.253 2.252 2.252-2.252-2.252-2.253z',\n    displayName: 'CommonWealth',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Copyright = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M12 2C17.52 2 22 6.48 22 12C22 17.52 17.52 22 12 22C6.48 22 2 17.52 2 12C2 6.48 6.48 2 12 2ZM12 4C7.58 4 4 7.58 4 12C4 16.42 7.58 20 12 20C16.42 20 20 16.42 20 12C20 7.58 16.42 4 12 4ZM12 7C13.82 7 15.413 7.973 16.288 9.428L14.574 10.457C14.3043 10.0072 13.9213 9.63605 13.4634 9.38045C13.0055 9.12484 12.4885 8.99374 11.9641 9.00023C11.4397 9.00672 10.9262 9.15056 10.4747 9.41742C10.0232 9.68428 9.6496 10.0648 9.39107 10.5211C9.13254 10.9774 8.99815 11.4935 9.00128 12.0179C9.00442 12.5424 9.14498 13.0568 9.40895 13.51C9.67292 13.9632 10.0511 14.3392 10.5057 14.6007C10.9603 14.8621 11.4756 14.9998 12 15C12.5181 15.0003 13.0275 14.8664 13.4785 14.6112C13.9294 14.356 14.3065 13.9883 14.573 13.544L16.288 14.572C15.726 15.5106 14.8716 16.239 13.8559 16.6453C12.8402 17.0517 11.7192 17.1137 10.6649 16.8217C9.61058 16.5298 8.68114 15.9 8.01914 15.029C7.35713 14.1581 6.99912 13.094 7 12C7 9.24 9.24 7 12 7Z',\n    displayName: 'Copyright',\n  });\n};\n","export function DefaultTokenIcon() {\n  return (\n    <svg viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M0.877075 7.49972C0.877075 3.84204 3.84222 0.876892 7.49991 0.876892C11.1576 0.876892 14.1227 3.84204 14.1227 7.49972C14.1227 11.1574 11.1576 14.1226 7.49991 14.1226C3.84222 14.1226 0.877075 11.1574 0.877075 7.49972ZM7.49991 1.82689C4.36689 1.82689 1.82708 4.36671 1.82708 7.49972C1.82708 10.6327 4.36689 13.1726 7.49991 13.1726C10.6329 13.1726 13.1727 10.6327 13.1727 7.49972C13.1727 4.36671 10.6329 1.82689 7.49991 1.82689ZM8.24993 10.5C8.24993 10.9142 7.91414 11.25 7.49993 11.25C7.08571 11.25 6.74993 10.9142 6.74993 10.5C6.74993 10.0858 7.08571 9.75 7.49993 9.75C7.91414 9.75 8.24993 10.0858 8.24993 10.5ZM6.05003 6.25C6.05003 5.57211 6.63511 4.925 7.50003 4.925C8.36496 4.925 8.95003 5.57211 8.95003 6.25C8.95003 6.74118 8.68002 6.99212 8.21447 7.27494C8.16251 7.30651 8.10258 7.34131 8.03847 7.37854L8.03841 7.37858C7.85521 7.48497 7.63788 7.61119 7.47449 7.73849C7.23214 7.92732 6.95003 8.23198 6.95003 8.7C6.95004 9.00376 7.19628 9.25 7.50004 9.25C7.8024 9.25 8.04778 9.00601 8.05002 8.70417L8.05056 8.7033C8.05924 8.6896 8.08493 8.65735 8.15058 8.6062C8.25207 8.52712 8.36508 8.46163 8.51567 8.37436L8.51571 8.37433C8.59422 8.32883 8.68296 8.27741 8.78559 8.21506C9.32004 7.89038 10.05 7.35382 10.05 6.25C10.05 4.92789 8.93511 3.825 7.50003 3.825C6.06496 3.825 4.95003 4.92789 4.95003 6.25C4.95003 6.55376 5.19628 6.8 5.50003 6.8C5.80379 6.8 6.05003 6.55376 6.05003 6.25Z\" fill=\"currentColor\" fill-rule=\"evenodd\" clip-rule=\"evenodd\"></path>\n    </svg>\n  )\n}\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const DiscordFill = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M10.076 11c.6 0 1.086.45 1.075 1 0 .55-.474 1-1.075 1C9.486 13 9 12.55 9 12s.475-1 1.076-1zm3.848 0c.601 0 1.076.45 1.076 1s-.475 1-1.076 1c-.59 0-1.075-.45-1.075-1s.474-1 1.075-1zm4.967-9C20.054 2 21 2.966 21 4.163V23l-2.211-1.995-1.245-1.176-1.317-1.25.546 1.943H5.109C3.946 20.522 3 19.556 3 18.359V4.163C3 2.966 3.946 2 5.109 2h13.782zm-3.97 13.713c2.273-.073 3.148-1.596 3.148-1.596 0-3.381-1.482-6.122-1.482-6.122-1.48-1.133-2.89-1.102-2.89-1.102l-.144.168c1.749.546 2.561 1.334 2.561 1.334a8.263 8.263 0 00-5.173-.988c-.062 0-.114.011-.175.021-.36.032-1.235.168-2.335.662-.38.178-.607.305-.607.305s.854-.83 2.705-1.376l-.103-.126s-1.409-.031-2.89 1.103c0 0-1.481 2.74-1.481 6.121 0 0 .864 1.522 3.137 1.596 0 0 .38-.472.69-.871-1.307-.4-1.8-1.24-1.8-1.24s.102.074.287.179c.01.01.02.021.041.031.031.022.062.032.093.053.257.147.514.262.75.357.422.168.926.336 1.513.452.88.172 1.783.176 2.664.01a6.664 6.664 0 001.491-.451c.36-.137.761-.337 1.183-.62 0 0-.514.861-1.862 1.25.309.399.68.85.68.85h-.001z'\n      />\n    ),\n    displayName: 'DiscordFill',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const EditLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M6.414 16.0001L16.556 5.85808L15.142 4.44408L5 14.5861V16.0001H6.414ZM7.243 18.0001H3V13.7571L14.435 2.32208C14.6225 2.13461 14.8768 2.0293 15.142 2.0293C15.4072 2.0293 15.6615 2.13461 15.849 2.32208L18.678 5.15108C18.8655 5.33861 18.9708 5.59292 18.9708 5.85808C18.9708 6.12325 18.8655 6.37756 18.678 6.56508L7.243 18.0001ZM3 20.0001H21V22.0001H3V20.0001Z',\n    displayName: 'EditLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ExchangeFunds = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M19.3741 15.103C20.7045 11.9419 19.8722 8.28443 17.305 6.01024C14.7378 3.73605 11.0066 3.351 8.02906 5.05299L7.03706 3.31599C10.1255 1.55085 13.9192 1.55999 16.9991 3.33999C21.4891 5.93199 23.2091 11.482 21.1161 16.11L22.4581 16.884L18.2931 19.098L18.1281 14.384L19.3741 15.103ZM6.69314 17.9897C4.12625 15.7158 3.29387 12.0591 4.62353 8.89825L5.86906 9.61699L5.70406 4.90299L1.53906 7.11699L2.88206 7.88999C0.789063 12.518 2.50906 18.068 6.99906 20.66C10.0789 22.44 13.8727 22.4491 16.9611 20.684L15.9691 18.947C12.9915 20.649 9.26037 20.2639 6.69314 17.9897ZM13.4143 14.8275L13.4148 14.828H13.4138L13.4143 14.8275ZM10.5838 12L13.4143 14.8275L17.6568 10.586L16.2428 9.172L13.4138 12L10.5848 9.172L6.3418 13.414L7.7558 14.828L10.5838 12Z'\n        fill='inherit'\n      />\n    ),\n    displayName: 'ExchangeFunds',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ExchangeLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M2 12C2 17.523 6.477 22 12 22C17.523 22 22 17.523 22 12C22 6.477 17.523 2 12 2C6.477 2 2 6.477 2 12ZM20 12C20 16.4183 16.4183 20 12 20C7.58172 20 4 16.4183 4 12C4 7.58172 7.58172 4 12 4C16.4183 4 20 7.58172 20 12ZM7 13H16V15H12V18L7 13ZM12 6V9H8V11H17L12 6Z'\n      />\n    ),\n    displayName: 'ExchangeLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Expand = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: [\n      <path\n        d='M17.4439 17.5592L17.6044 10.5606L19.6036 10.6065L19.3972 19.6042L10.3995 19.3978L10.4454 17.3986L17.4439 17.5592Z'\n        fill='inhterit'\n      />,\n      <path\n        d='M6.49973 6.49979L6.49973 13.5002L4.50003 13.5002L4.50003 4.5001L13.5001 4.5001L13.5001 6.49979L6.49973 6.49979Z'\n        fill='inherit'\n      />,\n    ],\n    displayName: 'Expand',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ExternalLinkLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    viewBox: '0 0 16 16',\n    d: 'M6.66667 4V5.33333H3.33333V12.6667H10.6667V9.33333H12V13.3333C12 13.5101 11.9298 13.6797 11.8047 13.8047C11.6797 13.9298 11.5101 14 11.3333 14H2.66667C2.48986 14 2.32029 13.9298 2.19526 13.8047C2.07024 13.6797 2 13.5101 2 13.3333V4.66667C2 4.48986 2.07024 4.32029 2.19526 4.19526C2.32029 4.07024 2.48986 4 2.66667 4H6.66667ZM14 2V7.33333H12.6667V4.27533L7.47133 9.47133L6.52867 8.52867L11.7233 3.33333H8.66667V2H14Z',\n    displayName: 'ExternalLinkLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const FileCopyLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M7 6V3C7 2.44772 7.44772 2 8 2H20C20.5523 2 21 2.44772 21 3V17C21 17.5523 20.5523 18 20 18H17V21C17 21.552 16.55 22 15.993 22H4.007C3.74065 22.0016 3.48465 21.897 3.29566 21.7093C3.10666 21.5216 3.00026 21.2664 3 21L3.003 7C3.003 6.448 3.453 6 4.01 6H7ZM5.003 8L5 20H15V8H5.003ZM9 6H17V16H19V4H9V6Z'\n      />\n    ),\n    displayName: 'FileCopyLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const FilterIcon = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M6.17 18.003a3.001 3.001 0 015.66 0H22v2H11.83a3.001 3.001 0 01-5.66 0H2v-2h4.17zm6-7a3 3 0 015.66 0H22v2h-4.17a3.001 3.001 0 01-5.66 0H2v-2h10.17zm-6-7a3.001 3.001 0 015.66 0H22v2H11.83a3 3 0 01-5.66 0H2v-2h4.17zm2.83 2a1 1 0 100-2 1 1 0 000 2zm6 7a1 1 0 100-2 1 1 0 000 2zm-6 7a1 1 0 100-2 1 1 0 000 2z',\n    displayName: 'Filter',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const GithubFill = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M12 2C6.475 2 2 6.475 2 12a9.994 9.994 0 006.838 9.488c.5.087.687-.213.687-.476 0-.237-.013-1.024-.013-1.862-2.512.463-3.162-.612-3.362-1.175-.113-.288-.6-1.175-1.025-1.413-.35-.187-.85-.65-.013-.662.788-.013 1.35.725 1.538 1.025.9 1.512 2.338 1.087 2.912.825.088-.65.35-1.087.638-1.337-2.225-.25-4.55-1.113-4.55-4.938 0-1.088.387-1.987 1.025-2.688-.1-.25-.45-1.275.1-2.65 0 0 .837-.262 2.75 1.026a9.28 9.28 0 012.5-.338c.85 0 1.7.112 2.5.337 1.912-1.3 2.75-1.024 2.75-1.024.55 1.375.2 2.4.1 2.65.637.7 1.025 1.587 1.025 2.687 0 3.838-2.337 4.688-4.562 4.938.362.312.675.912.675 1.85 0 1.337-.013 2.412-.013 2.75 0 .262.188.574.688.474A10.016 10.016 0 0022 12c0-5.525-4.475-10-10-10z'\n      />\n    ),\n    displayName: 'GithubFill',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Graph = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M5 19V3H3V21H21V19H5ZM21.707 7.707L20.293 6.293L16 10.585L13 7.586L7.293 13.293L8.707 14.707L13 10.415L16 13.414L21.707 7.707Z'\n        fill='inherit'\n      />\n    ),\n    displayName: 'Graph',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const InformationLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    viewBox: '0 0 16 16',\n    d: 'M7.999 14.667a6.666 6.666 0 110-13.333 6.666 6.666 0 010 13.333zm0-1.333a5.333 5.333 0 100-10.667 5.333 5.333 0 000 10.667zm-.667-8.667h1.333V6H7.332V4.667zm0 2.667h1.333v4H7.332v-4z',\n    displayName: 'InformationLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Key = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M10.757 11.828l7.85-7.849 1.413 1.414-1.414 1.415 2.474 2.474-1.414 1.415-2.475-2.475-1.414 1.414 2.121 2.121-1.414 1.415-2.12-2.122-2.193 2.192a5.001 5.001 0 11-8.052-.41 5 5 0 016.638-1.004zm-.637 6.293a3 3 0 10-4.24-4.241 3 3 0 004.241 4.242v-.001z',\n    displayName: 'Key',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Link = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M18.365 15.536l-1.414-1.416 1.414-1.414a5 5 0 10-7.07-7.071L9.88 7.05 8.465 5.636l1.416-1.414a7 7 0 119.9 9.9l-1.415 1.414zm-2.828 2.828l-1.415 1.414a7 7 0 01-9.9-9.9l1.415-1.414L7.051 9.88l-1.414 1.414a5 5 0 107.071 7.071l1.414-1.414 1.415 1.414v-.001zM14.83 7.757l1.415 1.415-7.07 7.07-1.416-1.414 7.071-7.07v-.001z',\n    displayName: 'Link',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Mail = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M3 3h18a1 1 0 011 1v16a1 1 0 01-1 1H3a1 1 0 01-1-1V4a1 1 0 011-1zm17 4.238l-7.928 7.1L4 7.216V19h16V7.238zM4.511 5l7.55 6.662L19.502 5H4.511z',\n    displayName: 'Mail',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Menu = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M3.40625 4H23.8491V6H3.40625V4ZM3.40625 11H23.8491V13H3.40625V11ZM3.40625 18H23.8491V20H3.40625V18Z'\n      />\n    ),\n    displayName: 'Menu',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const MoonLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M10 7C9.9998 8.39064 10.4138 9.74983 11.1892 10.9042C11.9646 12.0586 13.0663 12.9559 14.3538 13.4816C15.6412 14.0073 17.0561 14.1376 18.4179 13.8559C19.7797 13.5742 21.0268 12.8933 22 11.9V12C22 17.523 17.523 22 12 22C6.477 22 2 17.523 2 12C2 6.477 6.477 2 12 2H12.1C11.434 2.65113 10.9051 3.42896 10.5445 4.28768C10.1838 5.1464 9.99869 6.06862 10 7ZM4 12C3.99927 13.785 4.59553 15.5189 5.69389 16.926C6.79226 18.333 8.32963 19.3323 10.0614 19.7648C11.7932 20.1974 13.6199 20.0383 15.2508 19.313C16.8818 18.5876 18.2233 17.3377 19.062 15.762C17.5694 16.1136 16.0118 16.0781 14.5368 15.6587C13.0619 15.2394 11.7185 14.4501 10.6342 13.3658C9.54992 12.2815 8.76065 10.9381 8.34128 9.46318C7.92192 7.98821 7.88636 6.43056 8.238 4.938C6.95758 5.62014 5.88678 6.63766 5.14026 7.88164C4.39373 9.12562 3.99958 10.5492 4 12Z',\n    displayName: 'MoonLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const QRCode = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M16 17v-1h-3v-3h3v2h2v2h-1v2h-2v2h-2v-3h2v-1h1zm5 4h-4v-2h2v-2h2v4zM3 3h8v8H3V3zm10 0h8v8h-8V3zM3 13h8v8H3v-8zm15 0h3v2h-3v-2zM6 6v2h2V6H6zm0 10v2h2v-2H6zM16 6v2h2V6h-2z',\n    displayName: 'QRCode',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Search = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M18.031 16.617L22.314 20.899L20.899 22.314L16.617 18.031C15.0237 19.3082 13.042 20.0029 11 20C6.032 20 2 15.968 2 11C2 6.032 6.032 2 11 2C15.968 2 20 6.032 20 11C20.0029 13.042 19.3082 15.0237 18.031 16.617ZM16.025 15.875C17.2941 14.5699 18.0029 12.8204 18 11C18 7.132 14.867 4 11 4C7.132 4 4 7.132 4 11C4 14.867 7.132 18 11 18C12.8204 18.0029 14.5699 17.2941 15.875 16.025L16.025 15.875V15.875Z',\n    displayName: 'Search',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const ShuffleLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M18 17.883V16L23 19L18 22V19.91C14.8914 19.4648 12.2396 17.4316 11.003 14.545L11 14.54L10.997 14.546C9.57861 17.8548 6.32497 20 2.725 20H2V18H2.725C5.5253 17.9999 8.05608 16.331 9.159 13.757L9.912 12L9.159 10.243C8.05608 7.66905 5.5253 6.00008 2.725 6H2V4H2.725C6.32521 4.00017 9.57892 6.14584 10.997 9.455L11 9.46L11.003 9.454C12.2399 6.56782 14.8916 4.53496 18 4.09V2L23 5L18 8V6.117C15.6987 6.54339 13.7628 8.09169 12.841 10.243L12.088 12L12.841 13.757C13.7628 15.9083 15.6987 17.4566 18 17.883Z',\n    displayName: 'ShuffleLine',\n  });\n};\n","import React from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const Spinner: React.FC<IconBase> = (props) => {\n  // Spin animation attach to className\n  const className = twMerge(props.className, 'animate-spin !fill-transparent !stroke-none');\n\n  return createIcon({\n    ...props,\n    className,\n    path: [\n      <path\n        d='M10 1C14.9706 1 19 5.02944 19 10C19 14.9706 14.9706 19 10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1Z'\n        stroke='#D5E6FF'\n        strokeWidth='2'\n        strokeLinecap='round'\n      />,\n      <path d='M10 1C14.9706 1 19 5.02944 19 10' stroke='#4E8CDF' strokeWidth='2' strokeLinecap='round' />,\n    ],\n    displayName: 'Spinner',\n    viewBox: '0 0 20 20',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const SunLine = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    d: 'M12 18C10.4087 18 8.88258 17.3679 7.75736 16.2426C6.63214 15.1174 6 13.5913 6 12C6 10.4087 6.63214 8.88258 7.75736 7.75736C8.88258 6.63214 10.4087 6 12 6C13.5913 6 15.1174 6.63214 16.2426 7.75736C17.3679 8.88258 18 10.4087 18 12C18 13.5913 17.3679 15.1174 16.2426 16.2426C15.1174 17.3679 13.5913 18 12 18ZM12 16C13.0609 16 14.0783 15.5786 14.8284 14.8284C15.5786 14.0783 16 13.0609 16 12C16 10.9391 15.5786 9.92172 14.8284 9.17157C14.0783 8.42143 13.0609 8 12 8C10.9391 8 9.92172 8.42143 9.17157 9.17157C8.42143 9.92172 8 10.9391 8 12C8 13.0609 8.42143 14.0783 9.17157 14.8284C9.92172 15.5786 10.9391 16 12 16ZM11 1H13V4H11V1ZM11 20H13V23H11V20ZM3.515 4.929L4.929 3.515L7.05 5.636L5.636 7.05L3.515 4.93V4.929ZM16.95 18.364L18.364 16.95L20.485 19.071L19.071 20.485L16.95 18.364ZM19.071 3.514L20.485 4.929L18.364 7.05L16.95 5.636L19.071 3.515V3.514ZM5.636 16.95L7.05 18.364L4.929 20.485L3.515 19.071L5.636 16.95ZM23 11V13H20V11H23ZM4 11V13H1V11H4Z',\n    displayName: 'SunLine',\n  });\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const TelegramFill = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm-3.11-8.83l.013-.007.87 2.87c.112.311.266.367.453.341.188-.025.287-.126.41-.244l1.188-1.148 2.55 1.888c.466.257.801.124.917-.432l1.657-7.822c.183-.728-.137-1.02-.702-.788l-9.733 3.76c-.664.266-.66.638-.12.803l2.497.78v-.001z'\n      />\n    ),\n    displayName: 'TelegramFill',\n  });\n};\n","import React from 'react';\n\nimport { useDynamicSVGImport } from '../hooks';\nimport { TokenIconBase } from './types';\nimport { getIconSizeInPixel } from './utils';\n\nexport const TokenIcon: React.FC<TokenIconBase> = (props) => {\n  const { className, name, onCompleted, onError, size = 'md', ...restProps } = props;\n\n  const { SvgIcon, error, loading } = useDynamicSVGImport(name, { onCompleted, onError });\n\n  if (error) {\n    return <span>{error.message}</span>;\n  }\n\n  if (loading) {\n    return <span>Loading...</span>;\n  }\n\n  if (SvgIcon) {\n    const sizeInPx = getIconSizeInPixel(size);\n    return <SvgIcon className={className} width={parseInt(sizeInPx)} height={parseInt(sizeInPx)} {...restProps} />;\n  }\n\n  return null;\n};\n","import { createIcon } from './create-icon';\nimport { IconBase } from './types';\n\nexport const TwitterFill = (props: IconBase) => {\n  return createIcon({\n    ...props,\n    path: (\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M22.162 5.656a8.385 8.385 0 01-2.402.658A4.196 4.196 0 0021.6 4c-.82.488-1.719.83-2.656 1.015a4.182 4.182 0 00-7.126 3.814 11.874 11.874 0 01-8.62-4.37 4.168 4.168 0 00-.566 2.103c0 1.45.738 2.73 1.86 3.48a4.168 4.168 0 01-1.894-.522v.052a4.185 4.185 0 003.355 4.1 4.208 4.208 0 01-1.89.073A4.185 4.185 0 007.97 16.65a8.394 8.394 0 01-6.19 1.732 11.829 11.829 0 006.409 1.88c7.693 0 11.9-6.373 11.9-11.9 0-.18-.005-.362-.013-.54a8.497 8.497 0 002.087-2.165v-.001z'\n      />\n    ),\n    displayName: 'TwitterFill',\n  });\n};\n","import React, { Children } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { IconBase } from './types';\nimport { getFillColor, getIconSizeInPixel, getStrokeColor } from './utils';\n\ninterface CreateIconOptions extends IconBase {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string;\n  /**\n   * The `svg` path or group element\n   */\n  path?: React.ReactElement | React.ReactElement[];\n  /**\n   * If the `svg` has a single path, simply copy the path's `d` attribute\n   */\n  d?: string;\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string;\n  /**\n   * Color using `stroke` instead of `fill`\n   * @default false\n   */\n  colorUsingStroke?: boolean;\n  /**\n   * Default props automatically passed to the component; overwriteable\n   */\n  defaultProps?: React.SVGProps<SVGSVGElement>;\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    className,\n    d: pathDefinition,\n    defaultProps = {},\n    displayName,\n    path,\n    viewBox = '0 0 24 24',\n    size = 'md',\n    darkMode,\n    colorUsingStroke = false,\n    ...restOptions\n  } = options;\n  const _path = Children.toArray(path);\n  const _size = getIconSizeInPixel(size);\n\n  const _className = colorUsingStroke ? getStrokeColor(darkMode) : getFillColor(darkMode);\n\n  const Comp: React.FC<React.SVGProps<SVGSVGElement>> = (props) => (\n    <svg\n      viewBox={viewBox}\n      width={_size}\n      height={_size}\n      className={twMerge(_className, colorUsingStroke ? 'fill-transparent' : 'stroke-transparent', className)}\n      {...restOptions}\n      {...defaultProps}\n      {...props}\n    >\n      {_path.length ? _path : <path fill='inherit' d={pathDefinition} />}\n    </svg>\n  );\n\n  Comp.displayName = displayName;\n\n  return <Comp />;\n}\n","export * from './ArrowDropDownFill';\nexport * from './ArrowDropUpFill';\nexport * from './ArrowLeft';\nexport * from './ArrowRight';\nexport * from './AuctionLine';\nexport * from './BankLine';\nexport * from './Block';\nexport * from './CheckboxBlankCircleLine';\nexport * from './CheckboxCircleLine';\nexport * from './CheckboxFill';\nexport * from './ChevronDown';\nexport * from './ChevronLeft';\nexport * from './ChevronRight';\nexport * from './ChevronUp';\nexport * from './Close';\nexport * from './Coin';\nexport * from './CommonWealth';\nexport * from './Copyright';\nexport * from './DefaultTokenIcon';\nexport * from './DiscordFill';\nexport * from './EditLine';\nexport * from './ExchangeFunds';\nexport * from './ExchangeLine';\nexport * from './Expand';\nexport * from './ExternalLinkLine';\nexport * from './FileCopyLine';\nexport * from './FilterIcon';\nexport * from './GithubFill';\nexport * from './Graph';\nexport * from './InformationLine';\nexport * from './Key';\nexport * from './Link';\nexport * from './Mail';\nexport * from './Memu';\nexport * from './MoonLine';\nexport * from './QRCode';\nexport * from './Search';\nexport * from './ShuffleLine';\nexport * from './Spinner';\nexport * from './SunLine';\nexport * from './TelegramFill';\nexport * from './TokenIcon';\nexport * from './TwitterFill';\n","import { IconSize } from './types';\n\n/**\n * Get the tailwind className for stroke color\n * @param darkMode Get the className in dark mode or not,\n * use this variable to control dark mode in `js`,\n * leave it's empty if want to control dark mode in `css`\n * @returns the tailwind class for stroke color\n */\nexport function getStrokeColor(darkMode?: boolean) {\n  if (darkMode === undefined) {\n    return 'stroke-mono-200 dark:stroke-mono-40' as const;\n  } else {\n    return darkMode ? ('stroke-mono-40' as const) : ('stroke-mono-200' as const);\n  }\n}\n\n/**\n * Get the tailwind className for fill color\n * @param darkMode Get the className in dark mode or not\n * use this variable to control dark mode in `js`\n * leave it's empty if want to control dark mode in `css`\n * @returns the tailwind class for fill color\n */\nexport function getFillColor(darkMode?: boolean) {\n  if (darkMode === undefined) {\n    return 'fill-mono-200 dark:fill-mono-40' as const;\n  } else {\n    return darkMode ? ('fill-mono-40' as const) : ('fill-mono-200' as const);\n  }\n}\n\n/**\n * Get the icon size in pixel based on text\n * @param size Represent the icon size in text\n * @returns The icon in pixel\n */\nexport function getIconSizeInPixel(size: IconSize) {\n  switch (size) {\n    case 'xl': {\n      return '48px' as const;\n    }\n\n    case 'lg': {\n      return '24px' as const;\n    }\n\n    case 'md': {\n      return '16px' as const;\n    }\n\n    default: {\n      throw new Error('Unknown icon size');\n    }\n  }\n}\n","import './tailwind.css';\n\nexport * from './components';\nexport * from './containers';\nexport * from './typography';\nexport * from './provider';\nexport * from './icons';\nexport * from './utils';\nexport * from './hooks';\n","import { LoggerService } from '@webb-tools/app-util';\nimport React, { createContext, useMemo } from 'react';\n\nimport { WebbUIErrorBoudary } from '../containers';\nimport { useDarkMode } from '../hooks';\nimport { IWebbUIContext, WebbUIProviderProps } from './types';\n\nexport const WebbUIContext = createContext<null | IWebbUIContext>(null);\n\nconst appLogger = LoggerService.new('Stats App');\n\nexport const WebbUIProvider: React.FC<WebbUIProviderProps> = ({ children, hasErrorBoudary }) => {\n  const [isDarkMode, toggleMode] = useDarkMode();\n\n  const theme = useMemo<IWebbUIContext['theme']>(\n    () => ({\n      isDarkMode,\n      toggleThemeMode: toggleMode,\n    }),\n    [isDarkMode, toggleMode]\n  );\n\n  const WebbUIEErrorBoundaryElement = useMemo(() => {\n    return React.createElement(\n      WebbUIErrorBoudary,\n      {\n        logger: appLogger,\n        children\n      },\n    );\n  }, [children]);\n\n  return (\n    <WebbUIContext.Provider value={{ theme }}>\n      {hasErrorBoudary ? WebbUIEErrorBoundaryElement : children}\n    </WebbUIContext.Provider>\n  );\n};\n","import React, { createElement, useMemo } from 'react';\nimport { twMerge } from 'tailwind-merge';\n\nimport { WebbTypographyProps } from '../types';\nimport { getFontWeightClassName, getTextAlignClassName } from '../utils';\n\nconst defaultComponent = {\n  h1: 'h1' as const,\n  h2: 'h2' as const,\n  h3: 'h3' as const,\n  h4: 'h4' as const,\n  h5: 'h5' as const,\n  body1: 'p' as const,\n  body2: 'p' as const,\n  body3: 'p' as const,\n  body4: 'p' as const,\n  mono1: 'span' as const,\n  mono2: 'span' as const,\n  para1: 'p' as const,\n  para2: 'p' as const,\n  label: 'span' as const,\n  utility: 'span' as const,\n};\n\n/**\n * The Webb Typography component\n *\n * Props:\n * - `variant`: Represent different variants of the component\n * - `component`: The html tag (default: same as `variant` prop)\n * - `fw`: Represent the **font weight** of the component (default: `normal`)\n * - `ta`: Text align (default: `left`)\n * - `darkMode`: Control component dark mode display in `js`, leave it's empty if you want to control dark mode in `css`\n *\n * @example\n *\n * ```jsx\n * <Typography variant=\"h1\" fw=\"semibold\" ta=\"center\">This is heading 1</Typography>\n * <Typography variant=\"h2\" component=\"h3\">This is heading 3 with variant h2</Typography>\n * ```\n */\nexport const Typography: React.FC<WebbTypographyProps> = (props) => {\n  const { children, className, component, darkMode, fw = 'normal', ta = 'left', variant, ...restProps } = props;\n\n  const _component = useMemo(() => component ?? defaultComponent[variant], [component, variant]);\n\n  const _className = useMemo(\n    () => twMerge(`${variant}` as const, getTextAlignClassName(ta), getFontWeightClassName(variant, fw), className),\n    [className, fw, ta, variant]\n  );\n\n  return createElement(_component, { ...restProps, className: _className }, children);\n};\n","export * from './Typography';\n","export * from './Typography';\n","import {\n  HeadingVariant,\n  MonospaceVariant,\n  TypographyAlignValues,\n  TypographyFontWeightValues,\n  WebbTypographyVariant,\n} from '../types';\n\n/**\n * Get the tailwindcss className to style `text-align` attribute base on the typography align values\n * @param textAlign Represent the text align value\n * @returns tailwindcss className to style the `text-align` attribute\n */\nexport function getTextAlignClassName(textAlign: TypographyAlignValues) {\n  switch (textAlign) {\n    case 'center': {\n      return 'text-center';\n    }\n\n    case 'justify': {\n      return 'text-justify';\n    }\n\n    case 'left': {\n      return 'text-left';\n    }\n\n    case 'right': {\n      return 'text-right';\n    }\n\n    default: {\n      throw new Error('Unknown text align value');\n    }\n  }\n}\n\n/**\n * Get the tailwindcss className to style `font-weight` attribute base on the typography font weight values\n * @param fontWeight Represent the font weight value\n * @returns tailwindcss className to style the `font-weight` attribute\n */\nexport function getFontWeightClassName(variant: WebbTypographyVariant, fontWeight: TypographyFontWeightValues) {\n  // Monospace variant do not have `semibold` for font weight, so cast it to `bold`\n  if (isMonospaceVariant(variant) && fontWeight === 'semibold') {\n    return `font-bold`;\n  } else if (variant === 'label' || variant === 'utility') {\n    return '';\n  } else {\n    return `font-${fontWeight}` as const;\n  }\n}\n\n/**\n * Assert the typography variant to heading variant\n * @param variant Represent the value to check if it is the heading variant\n * @returns Whether the typography variant is heading variant\n */\nexport function isHeadingVariant(variant: WebbTypographyVariant): variant is HeadingVariant {\n  const headingKeys = ['h1', 'h2', 'h3', 'h4', 'h5'];\n  return headingKeys.indexOf(variant) !== -1;\n}\n\n/**\n * Assert the typography variant to monospace variant\n * @param variant Represent the value to check if it is the monospace variant\n * @returns Whether the typography variant is monospace variant\n */\nexport function isMonospaceVariant(variant: WebbTypographyVariant): variant is MonospaceVariant {\n  const monoKeys = ['mono1', 'mono2'];\n  return monoKeys.indexOf(variant) !== -1;\n}\n","export const arrayFrom = <T>(length: number, callback: () => T): T[] => {\n  return Array.from({ length }, callback);\n};\n","import { compareAsc, differenceInMilliseconds, isValid } from 'date-fns';\nimport { ISubQlTime } from '@nepoche/dapp-types';\n\n/**\n * Calculated the percentage of the current date have passed since the start date\n * @param startDateStr The start date string\n * @param endDateStr The end date string\n * @returns `null` when one of the provided string is invalid or the start date is in the future,\n * otherwise returns the percentage of the current date have passed since the start date\n */\nexport const calculateDateProgress = (\n  startDateStr: string | Date | null,\n  endDateStr: string | Date | null,\n  now?: ISubQlTime\n): number | null => {\n  if (startDateStr === null || endDateStr === null) {\n    return null;\n  }\n\n  // If one of two date is invalid -> Return `null`\n  if (!isValid(startDateStr) || !isValid(endDateStr)) {\n    return null;\n  }\n  const currentTime = now?.current.getTime() ?? Date.now();\n  const startDate = new Date(startDateStr);\n  const endDate = new Date(endDateStr);\n  // If the start date in to future -> Return `null`\n  if (differenceInMilliseconds(currentTime, startDate) < 0) {\n    return null;\n  }\n\n  const diffBetweenStartAndEnd = Math.abs(startDate.getTime() - endDate.getTime());\n  const diffBetweenStartAndNow = Math.abs(startDate.getTime() - currentTime);\n\n  if (diffBetweenStartAndEnd === 0) {\n    return null;\n  }\n  if (diffBetweenStartAndNow > diffBetweenStartAndEnd) {\n    return 100;\n  }\n  return parseFloat(((diffBetweenStartAndNow / diffBetweenStartAndEnd) * 100).toFixed(2));\n};\n","import { isValid, parseISO } from 'date-fns';\nimport { format, utcToZonedTime } from 'date-fns-tz';\n\n/**\n * Format a `date` to UTC string\n * @param dateArg Represents the `value` to parse to UTC format\n * @returns the string represents the utc format of the given date\n */\nexport const formatDateToUtc = (dateArg: string | Date | null): string => {\n  if (!dateArg) {\n    return 'TBD';\n  }\n\n  if (!isValid(dateArg)) {\n    throw new Error('Please provide valid date object');\n  }\n\n  let dateISO: Date;\n  if (typeof dateArg === 'string') {\n    dateISO = parseISO(new Date(dateArg).toISOString());\n  } else {\n    dateISO = parseISO(dateArg.toISOString());\n  }\n  return format(utcToZonedTime(dateISO, 'UTC'), \"MMM dd (HH:mm:ss a 'UTC')\", { timeZone: 'UTC' });\n};\n","import { range } from './range';\n\nexport interface PaginationItemsOptions {\n  /**\n   * The total number of pages.\n   * @default 1\n   */\n  count?: number;\n  /**\n   * Number of always visible pages at the beginning and end.\n   * @default 1\n   */\n  boundaryCount?: number;\n  /**\n   * Number of always visible pages before and after the current page.\n   * @default 1\n   */\n  siblingCount?: number;\n  /**\n   * The current page.\n   * @default 1\n   */\n  page?: number;\n}\n\n/**\n * Get the array of displayed items of pagination. E.g. [1, 'start-ellipsis', 4, 5, 6, 'end-ellipsis', 10,]\n * @param options {PaginationItemsOptions} The hook options\n */\nexport const getPaginationItems = (options: PaginationItemsOptions): (number | string)[] => {\n  const { boundaryCount = 1, count = 1, page = 1, siblingCount = 1 } = options;\n\n  const startPages = range(1, Math.min(boundaryCount, count));\n  const endPages = range(Math.max(count - boundaryCount + 1, boundaryCount + 1), count);\n\n  const siblingsStart = Math.max(\n    Math.min(\n      // Natural start\n      page - siblingCount,\n      // Lower boundary when page is high\n      count - boundaryCount - siblingCount * 2 - 1\n    ),\n    // Greater than startPages\n    boundaryCount + 2\n  );\n\n  const siblingsEnd = Math.min(\n    Math.max(\n      // Natural end\n      page + siblingCount,\n      // Upper boundary when page is low\n      boundaryCount + siblingCount * 2 + 2\n    ),\n    // Less than endPages\n    endPages.length > 0 ? endPages[0] - 2 : count - 1\n  );\n\n  return [\n    ...startPages,\n\n    // Start ellipsis\n    ...(siblingsStart > boundaryCount + 2\n      ? ['start-ellipsis']\n      : boundaryCount + 1 < count - boundaryCount\n      ? [boundaryCount + 1]\n      : []),\n\n    // Sibling pages\n    ...range(siblingsStart, siblingsEnd),\n\n    // End ellipsis\n    ...(siblingsEnd < count - boundaryCount - 1\n      ? ['end-ellipsis']\n      : count - boundaryCount > boundaryCount\n      ? [count - boundaryCount]\n      : []),\n\n    ...endPages,\n  ].filter((val) => (typeof val !== 'number' ? true : val > 0));\n};\n","import numbro from 'numbro';\n\n/**\n *\n * @param num: Represents a number to be formatted\n * @param digits: Represents the number of digits to display\n * @returns: Returns an abbreviated formatted number (e.g. millions - m, billions b)\n */\n export function getRoundedAmountString(num: number | undefined, digits = 3): string {\n  if (num === 0) {\n    return '0';\n  }\n\n  if (!num) {\n    return '-';\n  }\n\n  if (num < 0.001) {\n    return '<0.001';\n  }\n  return numbro(num).format({\n    average: num > 1000,\n    totalLength: num > 1000 ? 3 : 0,\n    mantissa: digits,\n    optionalMantissa: true,\n    trimMantissa: true,\n    thousandSeparated: true,\n    roundingFunction: Math.floor,\n  });\n}","export * from './arrayFrom';\nexport * from './calculateDateProgress';\nexport * from './formatDateToUtc';\nexport * from './getPaginationItems';\nexport * from './randAccount32';\nexport * from './randomEnum';\nexport * from './range';\nexport * from './shortenHex';\nexport * from './shorttenString';\nexport * from './getRoundedAmountString';\n","import { arrayFrom } from './arrayFrom';\n\nfunction randHexaDecimal(): string {\n  return Math.round(Math.random() * 10).toString(16);\n}\n\n/**\n * Get a random Polkadot account\n * @returns a Polkadot account (account 32)\n */\nexport function randAccount32(): string {\n  return arrayFrom(64, () => randHexaDecimal()).join('');\n}\n","export function randomEnum<T extends object>(anEnum: T): T[keyof T] {\n  const enumValues = Object.keys(anEnum) as unknown as T[keyof T][];\n  const randomIndex = Math.floor(Math.random() * enumValues.length);\n  const randomEnumValue = enumValues[randomIndex];\n  return randomEnumValue;\n}\n","/**\n * Create an array of number from range `start` to `end`\n * @param start The start value\n * @param end The end value\n * @returns An array of numbers start from `start` and end at `end`\n */\nexport const range = (start: number, end: number): number[] => {\n  const length = end - start + 1;\n  return Array.from({ length }, (_, idx) => start + idx);\n};\n","/**\n * shorten the a hex string and concatenate `0x` at the beginning of the string if not yet\n * @param hexStr the hex string to shorten\n * @param chars first and last number of characters to display\n * @returns the shortened hex string\n */\nexport const shortenHex = (hexStr: string, chars = 4): string => {\n  const hexLower = hexStr.toLowerCase();\n  const isStartWith0x = hexLower.startsWith('0x');\n  let startStr = '',\n    endStr = '';\n\n  if (isStartWith0x && hexLower.length <= chars * 2 + 2) {\n    return hexLower;\n  }\n\n  if (!isStartWith0x && hexLower.length <= chars * 2) {\n    return `0x${hexLower}`;\n  }\n\n  if (isStartWith0x) {\n    startStr = hexLower\n      .split('')\n      .slice(0, chars + 2)\n      .join('');\n    endStr = hexLower.split('').slice(-chars).join('');\n  } else {\n    startStr = hexLower.split('').slice(0, chars).join('');\n    endStr = hexLower.split('').slice(-chars).join('');\n  }\n  return isStartWith0x ? `${startStr}...${endStr}` : `0x${startStr}...${endStr}`;\n};\n","/**\n * shorten a string in format `abc...xyz`\n * @param str the hex string to shorten\n * @param chars first and last number of characters to display\n * @returns the shortened string\n */\nexport const shortenString = (str: string, chars = 4): string => {\n  if (str.length <= chars * 2) {\n    return str;\n  }\n\n  const startStr = str.split('').slice(0, chars).join('');\n\n  const endStr = str.split('').slice(-chars).join('');\n  return `${startStr}...${endStr}`;\n};\n","var map = {\n\t\"./avax.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/avax.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-b33d15\"\n\t],\n\t\"./btc.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/btc.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-1b855d\"\n\t],\n\t\"./dai.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/dai.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-24c336\"\n\t],\n\t\"./default.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/default.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-af70bc\"\n\t],\n\t\"./dot.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/dot.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-e6c2de\"\n\t],\n\t\"./eth.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/eth.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-76f95c\"\n\t],\n\t\"./ksm.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/ksm.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-c36fd5\"\n\t],\n\t\"./link.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/link.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-7302ae\"\n\t],\n\t\"./matic.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/matic.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-b744da\"\n\t],\n\t\"./one.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/one.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-f141ab\"\n\t],\n\t\"./op.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/op.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-b4a0c9\"\n\t],\n\t\"./usdc.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/usdc.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-3ccc16\"\n\t],\n\t\"./usdt.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/usdt.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-164bd4\"\n\t],\n\t\"./webb.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/webb.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-595201\"\n\t],\n\t\"./webb^2.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/webb^2.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-671a08\"\n\t],\n\t\"./webbdev.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/webbdev.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-96b51d\"\n\t],\n\t\"./webbeth.svg\": [\n\t\t\"../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref!../../libs/webb-ui-components/src/icons/tokens/webbeth.svg\",\n\t\t\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-c929e1\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"../../libs/webb-ui-components/src/icons/tokens lazy recursive !!../../node_modules/@svgr/webpack/lib/index.js?+svgo,+titleProp,+ref! ^\\\\.\\\\/.*\\\\.svg$\";\nmodule.exports = webpackAsyncContext;","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/** Layer base */\\nbody, \\nhtml {\\n    min-height: 100% !important;\\n    min-width: 100% !important;\\n    --tw-bg-opacity: 1 !important;\\n    background-color: rgb(247 248 247 / var(--tw-bg-opacity)) !important;\\n}\\n.dark body, .dark \\nhtml {\\n    --tw-bg-opacity: 1 !important;\\n    background-color: rgb(31 29 43 / var(--tw-bg-opacity)) !important;\\n}\\nhtml[class*=dark] {\\n    --tw-bg-opacity: 1 !important;\\n    background-color: rgb(31 29 43 / var(--tw-bg-opacity)) !important;\\n}\\nh1, \\nh2, \\nh3, \\nh4, \\nh5, \\n.h1, \\n.h2, \\n.h3, \\n.h4, \\n.h5 {\\n    --tw-text-opacity: 1;\\n    color: rgb(31 29 43 / var(--tw-text-opacity));\\n}\\n.dark h1, .dark \\nh2, .dark \\nh3, .dark \\nh4, .dark \\nh5, .dark \\n.h1, .dark \\n.h2, .dark \\n.h3, .dark \\n.h4, .dark \\n.h5 {\\n    --tw-text-opacity: 1;\\n    color: rgb(226 229 235 / var(--tw-text-opacity));\\n}\\np, \\nspan, \\nlabel, \\n.body1, \\n.body2, \\n.body3, \\n.body4, \\n.mono1, \\n.mono2 {\\n    --tw-text-opacity: 1;\\n    color: rgb(58 62 83 / var(--tw-text-opacity));\\n}\\n.dark p, .dark \\nspan, .dark \\nlabel, .dark \\n.body1, .dark \\n.body2, .dark \\n.body3, .dark \\n.body4, .dark \\n.mono1, .dark \\n.mono2 {\\n    --tw-text-opacity: 1;\\n    color: rgb(211 216 226 / var(--tw-text-opacity));\\n}\\n.card {\\n    --tw-bg-opacity: 1;\\n    background-color: rgb(255 255 255 / var(--tw-bg-opacity));\\n}\\n.dark .card {\\n    --tw-bg-opacity: 1;\\n    background-color: rgb(31 29 43 / var(--tw-bg-opacity));\\n}\\n.webb-shadow-sm {\\n    --tw-shadow: 0 4px 8px 0 rgba(0,0,0,0.08);\\n    --tw-shadow-colored: 0 4px 8px 0 var(--tw-shadow-color);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\n.dark .webb-shadow-sm {\\n    --tw-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\\n    --tw-shadow-colored: 0 4px 8px 0 var(--tw-shadow-color);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\n.webb-shadow-md {\\n    --tw-shadow: 0 4px 4px 0 rgba(0,0,0,0.25);\\n    --tw-shadow-colored: 0 4px 4px 0 var(--tw-shadow-color);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\n.dark .webb-shadow-md {\\n    --tw-shadow: 0 6px 12px 0 rgba(0,0,0,0.2);\\n    --tw-shadow-colored: 0 6px 12px 0 var(--tw-shadow-color);\\n    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\nhtml, \\nbody, \\ndiv, \\nmain {\\n    --scrollbar-track: initial;\\n    --scrollbar-thumb: initial;\\n    --scrollbar-corner: initial;\\n    --scrollbar-track-hover: var(--scrollbar-track);\\n    --scrollbar-thumb-hover: var(--scrollbar-thumb);\\n    --scrollbar-corner-hover: var(--scrollbar-corner);\\n    --scrollbar-track-active: var(--scrollbar-track-hover);\\n    --scrollbar-thumb-active: var(--scrollbar-thumb-hover);\\n    --scrollbar-corner-active: var(--scrollbar-corner-hover);\\n    scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-track);\\n    overflow: overlay;\\n}\\nhtml.overflow-x-hidden, \\nbody.overflow-x-hidden, \\ndiv.overflow-x-hidden, \\nmain.overflow-x-hidden {\\n    overflow-x: hidden;\\n}\\nhtml.overflow-y-hidden, \\nbody.overflow-y-hidden, \\ndiv.overflow-y-hidden, \\nmain.overflow-y-hidden {\\n    overflow-y: hidden;\\n}\\nhtml::-webkit-scrollbar-track, \\nbody::-webkit-scrollbar-track, \\ndiv::-webkit-scrollbar-track, \\nmain::-webkit-scrollbar-track {\\n    background-color: var(--scrollbar-track);\\n}\\nhtml::-webkit-scrollbar-thumb, \\nbody::-webkit-scrollbar-thumb, \\ndiv::-webkit-scrollbar-thumb, \\nmain::-webkit-scrollbar-thumb {\\n    background-color: var(--scrollbar-thumb);\\n}\\nhtml::-webkit-scrollbar-corner, \\nbody::-webkit-scrollbar-corner, \\ndiv::-webkit-scrollbar-corner, \\nmain::-webkit-scrollbar-corner {\\n    background-color: var(--scrollbar-corner);\\n}\\nhtml::-webkit-scrollbar-track:hover, \\nbody::-webkit-scrollbar-track:hover, \\ndiv::-webkit-scrollbar-track:hover, \\nmain::-webkit-scrollbar-track:hover {\\n    background-color: var(--scrollbar-track-hover);\\n}\\nhtml::-webkit-scrollbar-thumb:hover, \\nbody::-webkit-scrollbar-thumb:hover, \\ndiv::-webkit-scrollbar-thumb:hover, \\nmain::-webkit-scrollbar-thumb:hover {\\n    background-color: var(--scrollbar-thumb-hover);\\n}\\nhtml::-webkit-scrollbar-corner:hover, \\nbody::-webkit-scrollbar-corner:hover, \\ndiv::-webkit-scrollbar-corner:hover, \\nmain::-webkit-scrollbar-corner:hover {\\n    background-color: var(--scrollbar-corner-hover);\\n}\\nhtml::-webkit-scrollbar-track:active, \\nbody::-webkit-scrollbar-track:active, \\ndiv::-webkit-scrollbar-track:active, \\nmain::-webkit-scrollbar-track:active {\\n    background-color: var(--scrollbar-track-active);\\n}\\nhtml::-webkit-scrollbar-thumb:active, \\nbody::-webkit-scrollbar-thumb:active, \\ndiv::-webkit-scrollbar-thumb:active, \\nmain::-webkit-scrollbar-thumb:active {\\n    background-color: var(--scrollbar-thumb-active);\\n}\\nhtml::-webkit-scrollbar-corner:active, \\nbody::-webkit-scrollbar-corner:active, \\ndiv::-webkit-scrollbar-corner:active, \\nmain::-webkit-scrollbar-corner:active {\\n    background-color: var(--scrollbar-corner-active);\\n}\\nhtml, \\nbody, \\ndiv, \\nmain {\\n    scrollbar-width: thin;\\n}\\nhtml::-webkit-scrollbar, \\nbody::-webkit-scrollbar, \\ndiv::-webkit-scrollbar, \\nmain::-webkit-scrollbar {\\n    width: 8px;\\n    height: 8px;\\n}\\nhtml, \\nbody, \\ndiv, \\nmain {\\n    --scrollbar-thumb: #D3D8E2;\\n}\\n.dark html, .dark \\nbody, .dark \\ndiv, .dark \\nmain {\\n    --scrollbar-thumb: #6C7180;\\n}\\nhtml, \\nbody, \\ndiv, \\nmain {\\n    overflow: visible;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../libs/webb-ui-components/src/css/layer-base.css\"],\"names\":[],\"mappings\":\"AAAA,gBAAA;AAGE;;IAAA,2BAAA;IAAA,0BAAA;IAAA,6BAAA;IAAA,oEAAA;AAAA;AAAA;;IAAA,6BAAA;IAAA,iEAAA;AAAA;AAIA;IAAA,6BAAA;IAAA,iEAAA;AAAA;AAaA;;;;;;;;;;IAAA,oBAAA;IAAA,6CAAA;AAAA;AAAA;;;;;;;;;;IAAA,oBAAA;IAAA,gDAAA;AAAA;AAYA;;;;;;;;;IAAA,oBAAA;IAAA,6CAAA;AAAA;AAAA;;;;;;;;;IAAA,oBAAA;IAAA,gDAAA;AAAA;AAIA;IAAA,kBAAA;IAAA,yDAAA;AAAA;AAAA;IAAA,kBAAA;IAAA,sDAAA;AAAA;AAIA;IAAA,yCAAA;IAAA,uDAAA;IAAA,uGAAA;AAAA;AAAA;IAAA,wCAAA;IAAA,uDAAA;IAAA,uGAAA;AAAA;AAIA;IAAA,yCAAA;IAAA,uDAAA;IAAA,uGAAA;AAAA;AAAA;IAAA,yCAAA;IAAA,wDAAA;IAAA,uGAAA;AAAA;AAOA;;;;IAAA,0BAAA;IAAA,0BAAA;IAAA,2BAAA;IAAA,+CAAA;IAAA,+CAAA;IAAA,iDAAA;IAAA,sDAAA;IAAA,sDAAA;IAAA,wDAAA;IAAA,8DAAA;IAAA,iBAAA;AAAA;AAAA;;;;IAAA,kBAAA;AAAA;AAAA;;;;IAAA,kBAAA;AAAA;AAAA;;;;IAAA,wCAAA;AAAA;AAAA;;;;IAAA,wCAAA;AAAA;AAAA;;;;IAAA,yCAAA;AAAA;AAAA;;;;IAAA,8CAAA;AAAA;AAAA;;;;IAAA,8CAAA;AAAA;AAAA;;;;IAAA,+CAAA;AAAA;AAAA;;;;IAAA,+CAAA;AAAA;AAAA;;;;IAAA,+CAAA;AAAA;AAAA;;;;IAAA,gDAAA;AAAA;AAAA;;;;IAAA,qBAAA;AAAA;AAAA;;;;IAAA,UAAA;IAAA,WAAA;AAAA;AAAA;;;;IAAA,0BAAA;AAAA;AAAA;;;;IAAA,0BAAA;AAAA;AACA;;;;IAAA,iBAAA;AAAA\",\"sourcesContent\":[\"/** Layer base */\\nbody,\\nhtml {\\n  @apply bg-mono-20 dark:bg-mono-200 min-h-full min-w-full #{!important};\\n}\\n\\nhtml[class*='dark'] {\\n  @apply bg-mono-200 #{!important};\\n}\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\n.h1,\\n.h2,\\n.h3,\\n.h4,\\n.h5 {\\n  @apply text-mono-200 dark:text-mono-40;\\n}\\n\\np,\\nspan,\\nlabel,\\n.body1,\\n.body2,\\n.body3,\\n.body4,\\n.mono1,\\n.mono2 {\\n  @apply text-mono-160 dark:text-mono-60;\\n}\\n\\n.card {\\n  @apply bg-mono-0 dark:bg-mono-200;\\n}\\n\\n.webb-shadow-sm {\\n  @apply shadow-[0_4px_8px_0_rgba(0,0,0,0.08)] dark:shadow-[0_4px_8px_0_rgba(0,0,0,0.2)];\\n}\\n\\n.webb-shadow-md {\\n  @apply shadow-[0_4px_4px_0_rgba(0,0,0,0.25)] dark:shadow-[0_6px_12px_0_rgba(0,0,0,0.2)];\\n}\\n\\nhtml,\\nbody,\\ndiv,\\nmain {\\n  @apply scrollbar-thin scrollbar-thumb-mono-60 dark:scrollbar-thumb-mono-120;\\n  @apply overflow-visible;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/** Layer components */\\n.h1 {\\n  font-size: 64px;\\n  line-height: 96px;\\n}\\n.h2 {\\n  font-size: 48px;\\n  line-height: 72px;\\n}\\n.h3 {\\n  font-size: 36px;\\n  line-height: 54px;\\n}\\n.h4 {\\n  font-size: 24px;\\n  line-height: 36px;\\n}\\n.h5 {\\n  font-size: 18px;\\n  line-height: 27px;\\n}\\n.body1 {\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\n.body2 {\\n  font-size: 14px;\\n  line-height: 21px;\\n}\\n.body3 {\\n  font-size: 12px;\\n  line-height: 18px;\\n}\\n.body4 {\\n  font-size: 10px;\\n  line-height: 15px;\\n}\\n.mono1 {\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\n.mono2 {\\n  font-size: 12px;\\n  line-height: 18px;\\n}\\n/* Used for subtitles and buttons */\\n.label {\\n  font-weight: 700;\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\n/* Default type size, used for paragraphs and inputs */\\n.para1 {\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\n/* Used for details, and small informational components */\\n.para2 {\\n  font-size: 14px;\\n  line-height: 21px;\\n}\\n/* Small utility used for labels and warnings */\\n.utility {\\n  font-weight: 700;\\n  font-size: 12px;\\n  line-height: 15px;\\n}\\n@media screen and (max-width: 800px) {\\n  .h1 {\\n    font-size: 46px;\\n    line-height: 69px;\\n  }\\n  .h2 {\\n    font-size: 34px;\\n    line-height: 51px;\\n  }\\n  .h3 {\\n    font-size: 24px;\\n    line-height: 36px;\\n  }\\n  .h4 {\\n    font-size: 20px;\\n    line-height: 30px;\\n  }\\n  .h5 {\\n    font-size: 15px;\\n    line-height: 22px;\\n  }\\n}\\n.drawer-content {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\\n  --tw-shadow: -12px 0px 12px 0px rgba(0,0,0,0.25);\\n  --tw-shadow-colored: -12px 0px 12px 0px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\n.dark .drawer-content {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(43 47 64 / var(--tw-bg-opacity));\\n  --tw-shadow: -12px 0px 12px 0px rgba(0,0,0,0.25);\\n  --tw-shadow-colored: -12px 0px 12px 0px var(--tw-shadow-color);\\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\\n}\\n.drawer-content {\\n  position: fixed;\\n  top: 0px;\\n  bottom: 0px;\\n  right: 0px;\\n  width: 750px;\\n  overflow: auto;\\n}\\n@keyframes drawer-content-right-slide-in {\\n  from {\\n    transform: translate3d(100%,0,0);\\n  }\\n  to {\\n    transform: translate3d(0,0,0);\\n  }\\n}\\n.drawer-content[data-state=open] {\\n  animation: drawer-content-right-slide-in 150ms cubic-bezier(0.22, 1, 0.36, 1);\\n}\\n@keyframes drawer-content-right-slide-out {\\n  from {\\n    transform: translate3d(0,0,0);\\n  }\\n  to {\\n    transform: translate3d(100%,0,0);\\n  }\\n}\\n.drawer-content[data-state=closed] {\\n  animation: drawer-content-right-slide-out 150ms cubic-bezier(0.22, 1, 0.36, 1);\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../libs/webb-ui-components/src/css/layer-components.css\"],\"names\":[],\"mappings\":\"AAAA,sBAAA;AACA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA;EACE,eAAA;EACA,iBAAA;AACF;AAEA,mCAAA;AAEE;EAAA,gBAAA;EAAA,eAAA;EAAA,iBAAA;AAAA;AAGF,sDAAA;AAEE;EAAA,eAAA;EAAA,iBAAA;AAAA;AAGF,yDAAA;AAEE;EAAA,eAAA;EAAA,iBAAA;AAAA;AAGF,+CAAA;AAEE;EAAA,gBAAA;EAEA,eAAA;EACA,iBAAA;AAHA;AAMF;EACE;IACE,eAAA;IACA,iBAAA;EAAF;EAGA;IACE,eAAA;IACA,iBAAA;EADF;EAIA;IACE,eAAA;IACA,iBAAA;EAFF;EAKA;IACE,eAAA;IACA,iBAAA;EAHF;EAMA;IACE,eAAA;IACA,iBAAA;EAJF;AACF;AAQE;EAAA,kBAAA;EAAA,yDAAA;EAAA,gDAAA;EAAA,8DAAA;EAAA,uGAAA;AAAA;AAAA;EAAA,kBAAA;EAAA,sDAAA;EAAA,gDAAA;EAAA,8DAAA;EAAA,uGAAA;AAAA;AAEA;EAAA,eAAA;EAAA,QAAA;EAAA,WAAA;EAAA,UAAA;EAAA,YAAA;EAAA,cAAA;AAAA;AAGE;EAAA;IAAA,gCAAA;EAAA;EAAA;IAAA,6BAAA;EAAA;AAAA;AAAA;EAAA,6EAAA;AAAA;AAIA;EAAA;IAAA,6BAAA;EAAA;EAAA;IAAA,gCAAA;EAAA;AAAA;AAAA;EAAA,8EAAA;AAAA\",\"sourcesContent\":[\"/** Layer components */\\n.h1 {\\n  font-size: 64px;\\n  line-height: 96px;\\n}\\n\\n.h2 {\\n  font-size: 48px;\\n  line-height: 72px;\\n}\\n\\n.h3 {\\n  font-size: 36px;\\n  line-height: 54px;\\n}\\n\\n.h4 {\\n  font-size: 24px;\\n  line-height: 36px;\\n}\\n\\n.h5 {\\n  font-size: 18px;\\n  line-height: 27px;\\n}\\n\\n.body1 {\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\n\\n.body2 {\\n  font-size: 14px;\\n  line-height: 21px;\\n}\\n\\n.body3 {\\n  font-size: 12px;\\n  line-height: 18px;\\n}\\n\\n.body4 {\\n  font-size: 10px;\\n  line-height: 15px;\\n}\\n\\n.mono1 {\\n  font-size: 16px;\\n  line-height: 24px;\\n}\\n\\n.mono2 {\\n  font-size: 12px;\\n  line-height: 18px;\\n}\\n\\n/* Used for subtitles and buttons */\\n.label {\\n  @apply body1 font-bold;\\n}\\n\\n/* Default type size, used for paragraphs and inputs */\\n.para1 {\\n  @apply body1;\\n}\\n\\n/* Used for details, and small informational components */\\n.para2 {\\n  @apply body2;\\n}\\n\\n/* Small utility used for labels and warnings */\\n.utility {\\n  @apply font-bold;\\n\\n  font-size: 12px;\\n  line-height: 15px;\\n}\\n\\n@media screen and (max-width: 800px) {\\n  .h1 {\\n    font-size: 46px;\\n    line-height: 69px;\\n  }\\n\\n  .h2 {\\n    font-size: 34px;\\n    line-height: 51px;\\n  }\\n\\n  .h3 {\\n    font-size: 24px;\\n    line-height: 36px;\\n  }\\n\\n  .h4 {\\n    font-size: 20px;\\n    line-height: 30px;\\n  }\\n\\n  .h5 {\\n    font-size: 15px;\\n    line-height: 22px;\\n  }\\n}\\n\\n.drawer-content {\\n  @apply bg-mono-0 dark:bg-mono-180 shadow-[-12px_0px_12px_0px_rgba(0,0,0,0.25)] dark:shadow-[-12px_0px_12px_0px_rgba(0,0,0,0.25)];\\n\\n  @apply fixed top-0 bottom-0 right-0 w-[750px] overflow-auto;\\n\\n  &[data-state='open'] {\\n    @apply animate-drawer-content-right-open;\\n  }\\n\\n  &[data-state='closed'] {\\n    @apply animate-drawer-content-right-close;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./css/layer-base.css\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_1___ = require(\"-!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./css/layer-components.css\");\nvar ___CSS_LOADER_GET_URL_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/getUrl.js\");\nvar ___CSS_LOADER_URL_IMPORT_0___ = require(\"./fonts/BreezeSans-Regular.ttf\");\nvar ___CSS_LOADER_URL_IMPORT_1___ = require(\"./fonts/BreezeSans-Medium.ttf\");\nvar ___CSS_LOADER_URL_IMPORT_2___ = require(\"./fonts/BreezeSans-Bold.ttf\");\nvar ___CSS_LOADER_URL_IMPORT_3___ = require(\"./fonts/Cousine-Regular.ttf\");\nvar ___CSS_LOADER_URL_IMPORT_4___ = require(\"./fonts/Cousine-Bold.ttf\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"html {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\\n  scrollbar-color: #00000080 transparent;\\n  scrollbar-width: auto;\\n}\\n\\nhtml[class*='dark'] {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(17 24 39 / var(--tw-bg-opacity));\\n  scrollbar-color: #ffffffb3 transparent;\\n  scrollbar-width: auto;\\n}\\n\\n::-webkit-scrollbar {\\n  height: 8px;\\n  width: 8px;\\n}\\n\\n::-webkit-scrollbar-track {\\n  background-color: transparent;\\n}\\n\\n::-webkit-scrollbar-thumb {\\n  border-radius: 9999px;\\n  background-color: rgb(0 0 0 / 0.5);\\n}\\n\\n.dark ::-webkit-scrollbar-thumb {\\n  background-color: rgb(255 255 255 / 0.7);\\n}\\n\\n::-webkit-scrollbar-thumb:hover {\\n  background-color: rgb(0 0 0 / 0.6);\\n}\\n\\n.dark ::-webkit-scrollbar-thumb:hover:hover {\\n  background-color: rgb(255 255 255 / 0.8);\\n}\\n\\nbutton {\\n  /* Disables tap highlight color on Chrome */\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n/* Input darkmode fix for checkbox / radio */\\n\\n.dark [type='checkbox']:checked,\\n.dark [type='radio']:checked {\\n  background-color: currentColor;\\n}\\n\\n/** Load fonts */\\n\\n/* Font Family Breeze Sans */\\n\\n@font-face {\\n  font-family: 'BreezeSans';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n\\n@font-face {\\n  font-family: 'BreezeSans';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format('truetype');\\n  font-weight: 600;\\n  font-style: normal;\\n}\\n\\n@font-face {\\n  font-family: 'BreezeSans';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format('truetype');\\n  font-weight: 800;\\n  font-style: normal;\\n}\\n\\n/* Cousine */\\n\\n@font-face {\\n  font-family: 'Cousine';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \") format('truetype');\\n  font-weight: 400;\\n  font-style: normal;\\n}\\n\\n@font-face {\\n  font-family: 'Cousine';\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \") format('truetype');\\n  font-weight: 800;\\n  font-style: normal;\\n}\\n\\n/** Make use fonts */\\n\\nhtml,\\nbody,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\np,\\ntable,\\nol,\\nul,\\nli,\\n.h1,\\n.h2,\\n.h3,\\n.h4,\\n.h5,\\n.body1,\\n.body2,\\n.body3,\\n.body4 {\\n  font-family: 'BreezeSans', Arial, sans-serif;\\n}\\n\\ncode,\\n.mono1,\\n.mono2 {\\n  font-family: 'Cousine', monospace;\\n  font-size: 16px;\\n}\\n\\n/* ! tailwindcss v3.1.8 | MIT License | https://tailwindcss.com */\\n\\n/*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: #e5e7eb; /* 2 */\\n}\\n\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n*/\\n\\nhtml {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  -o-tab-size: 4;\\n     tab-size: 4; /* 3 */\\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 4 */\\n}\\n\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\n\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\n\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr:where([title]) {\\n  -webkit-text-decoration: underline dotted;\\n          text-decoration: underline dotted;\\n}\\n\\n/*\\nRemove the default font size and weight for headings.\\n*/\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/*\\n1. Use the user's configured `mono` font family by default.\\n2. Correct the odd `em` font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/*\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\n\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  font-weight: inherit; /* 1 */\\n  line-height: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\n\\nbutton,\\n[type='button'],\\n[type='reset'],\\n[type='submit'] {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n\\n:-moz-focusring {\\n  outline: auto;\\n}\\n\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nlegend {\\n  padding: 0;\\n}\\n\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\n\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\n/*\\nSet the default cursor for buttons.\\n*/\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n\\n:disabled {\\n  cursor: default;\\n}\\n\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n  background-color: #fff;\\n  border-color: #6b7280;\\n  border-width: 1px;\\n  border-radius: 0px;\\n  padding-top: 0.5rem;\\n  padding-right: 0.75rem;\\n  padding-bottom: 0.5rem;\\n  padding-left: 0.75rem;\\n  font-size: 1rem;\\n  line-height: 1.5rem;\\n  --tw-shadow: 0 0 #0000;\\n}\\n\\n[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {\\n  outline: 2px solid transparent;\\n  outline-offset: 2px;\\n  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: #2563eb;\\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\\n  border-color: #2563eb;\\n}\\n\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  color: #6b7280;\\n  opacity: 1;\\n}\\n\\ninput::placeholder,textarea::placeholder {\\n  color: #6b7280;\\n  opacity: 1;\\n}\\n\\n::-webkit-datetime-edit-fields-wrapper {\\n  padding: 0;\\n}\\n\\n::-webkit-date-and-time-value {\\n  min-height: 1.5em;\\n}\\n\\n::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {\\n  padding-top: 0;\\n  padding-bottom: 0;\\n}\\n\\nselect {\\n  background-image: url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e\\\");\\n  background-position: right 0.5rem center;\\n  background-repeat: no-repeat;\\n  background-size: 1.5em 1.5em;\\n  padding-right: 2.5rem;\\n  -webkit-print-color-adjust: exact;\\n          print-color-adjust: exact;\\n}\\n\\n[multiple] {\\n  background-image: initial;\\n  background-position: initial;\\n  background-repeat: unset;\\n  background-size: initial;\\n  padding-right: 0.75rem;\\n  -webkit-print-color-adjust: unset;\\n          print-color-adjust: unset;\\n}\\n\\n[type='checkbox'],[type='radio'] {\\n  -webkit-appearance: none;\\n     -moz-appearance: none;\\n          appearance: none;\\n  padding: 0;\\n  -webkit-print-color-adjust: exact;\\n          print-color-adjust: exact;\\n  display: inline-block;\\n  vertical-align: middle;\\n  background-origin: border-box;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n          user-select: none;\\n  flex-shrink: 0;\\n  height: 1rem;\\n  width: 1rem;\\n  color: #2563eb;\\n  background-color: #fff;\\n  border-color: #6b7280;\\n  border-width: 1px;\\n  --tw-shadow: 0 0 #0000;\\n}\\n\\n[type='checkbox'] {\\n  border-radius: 0px;\\n}\\n\\n[type='radio'] {\\n  border-radius: 100%;\\n}\\n\\n[type='checkbox']:focus,[type='radio']:focus {\\n  outline: 2px solid transparent;\\n  outline-offset: 2px;\\n  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);\\n  --tw-ring-offset-width: 2px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: #2563eb;\\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);\\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\\n}\\n\\n[type='checkbox']:checked,[type='radio']:checked {\\n  border-color: transparent;\\n  background-color: currentColor;\\n  background-size: 100% 100%;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n}\\n\\n[type='checkbox']:checked {\\n  background-image: url(\\\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e\\\");\\n}\\n\\n[type='radio']:checked {\\n  background-image: url(\\\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e\\\");\\n}\\n\\n[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {\\n  border-color: transparent;\\n  background-color: currentColor;\\n}\\n\\n[type='checkbox']:indeterminate {\\n  background-image: url(\\\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e\\\");\\n  border-color: transparent;\\n  background-color: currentColor;\\n  background-size: 100% 100%;\\n  background-position: center;\\n  background-repeat: no-repeat;\\n}\\n\\n[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {\\n  border-color: transparent;\\n  background-color: currentColor;\\n}\\n\\n[type='file'] {\\n  background: unset;\\n  border-color: inherit;\\n  border-width: 0;\\n  border-radius: 0;\\n  padding: 0;\\n  font-size: unset;\\n  line-height: inherit;\\n}\\n\\n[type='file']:focus {\\n  outline: 1px solid ButtonText;\\n  outline: 1px auto -webkit-focus-ring-color;\\n}\\n\\n* {\\n  scrollbar-color: initial;\\n  scrollbar-width: initial;\\n}\\n\\n*, ::before, ::after {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n\\n::backdrop {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../libs/webb-ui-components/src/css/radix-ui.css\",\"webpack://./../../libs/webb-ui-components/src/css/typography.css\",\"webpack://./../../node_modules/tailwindcss/base.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"html {\\n  @apply bg-white;\\n  scrollbar-color: #00000080 transparent;\\n  scrollbar-width: auto;\\n}\\n\\nhtml[class*='dark'] {\\n  @apply bg-gray-900;\\n  scrollbar-color: #ffffffb3 transparent;\\n  scrollbar-width: auto;\\n}\\n\\n::-webkit-scrollbar {\\n  height: 8px;\\n  width: 8px;\\n}\\n\\n::-webkit-scrollbar-track {\\n  @apply bg-transparent;\\n}\\n\\n::-webkit-scrollbar-thumb {\\n  @apply rounded-full bg-black/50 dark:bg-white/70;\\n}\\n\\n::-webkit-scrollbar-thumb:hover {\\n  @apply bg-black/60 dark:hover:bg-white/80;\\n}\\n\\nbutton {\\n  /* Disables tap highlight color on Chrome */\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n/* Input darkmode fix for checkbox / radio */\\n.dark [type='checkbox']:checked,\\n.dark [type='radio']:checked {\\n  background-color: currentColor;\\n}\\n\",\"/** Load fonts */\\n\\n/* Font Family Breeze Sans */\\n\\n@font-face {\\n  font-family: 'BreezeSans';\\n  src: url('fonts/BreezeSans-Regular.ttf') format('truetype');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n\\n@font-face {\\n  font-family: 'BreezeSans';\\n  src: url('fonts/BreezeSans-Medium.ttf') format('truetype');\\n  font-weight: 600;\\n  font-style: normal;\\n}\\n\\n@font-face {\\n  font-family: 'BreezeSans';\\n  src: url('fonts/BreezeSans-Bold.ttf') format('truetype');\\n  font-weight: 800;\\n  font-style: normal;\\n}\\n\\n/* Cousine */\\n\\n@font-face {\\n  font-family: 'Cousine';\\n  src: url('fonts/Cousine-Regular.ttf') format('truetype');\\n  font-weight: 400;\\n  font-style: normal;\\n}\\n\\n@font-face {\\n  font-family: 'Cousine';\\n  src: url('fonts/Cousine-Bold.ttf') format('truetype');\\n  font-weight: 800;\\n  font-style: normal;\\n}\\n\\n/** Make use fonts */\\nhtml,\\nbody,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\np,\\ntable,\\nol,\\nul,\\nli,\\n.h1,\\n.h2,\\n.h3,\\n.h4,\\n.h5,\\n.body1,\\n.body2,\\n.body3,\\n.body4 {\\n  font-family: 'BreezeSans', Arial, sans-serif;\\n}\\n\\ncode,\\n.mono1,\\n.mono2 {\\n  font-family: 'Cousine', monospace;\\n  font-size: 16px;\\n}\\n\",\"@tailwind base;\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./tailwind.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[3]!./tailwind.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };\n\t__webpack_require__.i.forEach(function(handler) { handler(execOptions); });\n\tmodule = execOptions.module;\n\texecOptions.factory.call(module.exports, module, module.exports, execOptions.require);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// expose the module execution interceptor\n__webpack_require__.i = [];\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && !queue.d) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = 1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"vendors-node_modules_webb-tools_wasm-utils_wasm-utils_js\":\"eb11d846\",\"vendors-node_modules_webb-tools_wasm-utils_njs_wasm-utils-njs_js\":\"3f026346\",\"_1888\":\"6dec04d7\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-b33d15\":\"67cc9b33\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-1b855d\":\"13075d53\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-24c336\":\"1c6b0a15\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-af70bc\":\"0c290169\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-e6c2de\":\"8e9b8324\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-76f95c\":\"d6d5d3b7\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-c36fd5\":\"2e23a8c2\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-7302ae\":\"56e5f05c\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-b744da\":\"472616bd\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-f141ab\":\"9d480b9d\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-b4a0c9\":\"62b0ae19\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-3ccc16\":\"7ebfded3\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-164bd4\":\"af4ce75f\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-595201\":\"adf09498\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-671a08\":\"9dd28912\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-96b51d\":\"b8504c44\",\"node_modules_svgr_webpack_lib_index_js_svgo_titleProp_ref_libs_webb-ui-components_src_icons_t-c929e1\":\"e64dc9c3\",\"src_pages_Authorities_tsx\":\"0f70f9c0\",\"src_pages_AuthorityDetailDrawer_tsx\":\"00fe59ce\",\"src_pages_AuthorityDetailPage_tsx\":\"3cd4d876\",\"src_pages_AuthoritiesHistory_tsx\":\"df1fc94b\",\"src_pages_Keys_tsx\":\"fcdca348\",\"src_pages_KeyDetailDrawer_tsx\":\"950f98e3\",\"src_pages_KeyDetailPage_tsx\":\"28631faf\",\"src_pages_Proposals_tsx\":\"fc4b5b31\",\"src_pages_ProposalDetailDrawer_tsx\":\"70704fae\",\"src_pages_ProposalDetailPage_tsx\":\"af447c2c\",\"src_pages_ComponentsShowcase_tsx\":\"41d24fca\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"@nepoche/stats-dapp:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.v = (exports, wasmModuleId, wasmModuleHash, importsObj) => {\n\tvar req = fetch(__webpack_require__.p + \"\" + wasmModuleHash + \".module.wasm\");\n\tif (typeof WebAssembly.instantiateStreaming === 'function') {\n\t\treturn WebAssembly.instantiateStreaming(req, importsObj)\n\t\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n\t}\n\treturn req\n\t\t.then((x) => (x.arrayBuffer()))\n\t\t.then((bytes) => (WebAssembly.instantiate(bytes, importsObj)))\n\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n};","__webpack_require__.p = \"\";","__webpack_require__.i.push((options) => {\n\tconst originalFactory = options.factory;\n\toptions.factory = function (moduleObject, moduleExports, webpackRequire) {\n\t\t__webpack_require__.$Refresh$.setup(options.id);\n\t\ttry {\n\t\t\toriginalFactory.call(this, moduleObject, moduleExports, webpackRequire);\n\t\t} finally {\n\t\t\tif (typeof Promise !== 'undefined' && moduleObject.exports instanceof Promise) {\n\t\t\t\toptions.module.exports = options.module.exports.then(\n\t\t\t\t\t(result) => {\n\t\t\t\t\t\t__webpack_require__.$Refresh$.cleanup(options.id);\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t},\n\t\t\t\t\t(reason) => {\n\t\t\t\t\t\t__webpack_require__.$Refresh$.cleanup(options.id);\n\t\t\t\t\t\treturn Promise.reject(reason);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t__webpack_require__.$Refresh$.cleanup(options.id)\n\t\t\t}\n\t\t}\n\t};\n})\n\n__webpack_require__.$Refresh$ = {\n\tregister: () => (undefined),\n\tsignature: () => ((type) => (type)),\n\truntime: {\n\t\tcreateSignatureFunctionForTransform: () => ((type) => (type)),\n\t\tregister: () => (undefined)\n\t},\n\tsetup: (currentModuleId) => {\n\t\tconst prevModuleId = __webpack_require__.$Refresh$.moduleId;\n\t\tconst prevRegister = __webpack_require__.$Refresh$.register;\n\t\tconst prevSignature = __webpack_require__.$Refresh$.signature;\n\t\tconst prevCleanup = __webpack_require__.$Refresh$.cleanup;\n\n\t\t__webpack_require__.$Refresh$.moduleId = currentModuleId;\n\n\t\t__webpack_require__.$Refresh$.register = (type, id) => {\n\t\t\tconst typeId = currentModuleId + \" \" + id;\n\t\t\t__webpack_require__.$Refresh$.runtime.register(type, typeId);\n\t\t}\n\n\t\t__webpack_require__.$Refresh$.signature = () => (__webpack_require__.$Refresh$.runtime.createSignatureFunctionForTransform());\n\n\t\t__webpack_require__.$Refresh$.cleanup = (cleanupModuleId) => {\n\t\t\tif (currentModuleId === cleanupModuleId) {\n\t\t\t\t__webpack_require__.$Refresh$.moduleId = prevModuleId;\n\t\t\t\t__webpack_require__.$Refresh$.register = prevRegister;\n\t\t\t\t__webpack_require__.$Refresh$.signature = prevSignature;\n\t\t\t\t__webpack_require__.$Refresh$.cleanup = prevCleanup;\n\t\t\t}\n\t\t}\n\t}\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = (typeof self !== 'undefined' ? self : this)[\"webpackChunk_nepoche_stats_dapp\"] = (typeof self !== 'undefined' ? self : this)[\"webpackChunk_nepoche_stats_dapp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\n__webpack_require__.O(undefined, [\"vendors-node_modules_ngneat_falso_index_esm_js-node_modules_babel_polyfill_lib_index_js-node_-40ed30\"], () => (__webpack_require__(\"../../node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js\")))\n__webpack_require__.O(undefined, [\"vendors-node_modules_ngneat_falso_index_esm_js-node_modules_babel_polyfill_lib_index_js-node_-40ed30\"], () => (__webpack_require__(\"../../node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ErrorOverlayEntry.js?sockHost=0.0.0.0&sockPort=3000&sockProtocol=http\")))\n__webpack_require__.O(undefined, [\"vendors-node_modules_ngneat_falso_index_esm_js-node_modules_babel_polyfill_lib_index_js-node_-40ed30\"], () => (__webpack_require__(\"../../node_modules/@babel/polyfill/lib/index.js\")))\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_ngneat_falso_index_esm_js-node_modules_babel_polyfill_lib_index_js-node_-40ed30\"], () => (__webpack_require__(\"./src/index.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["RouterProvider","WebbUIProvider","routes","App","constants","Divider","Logo","Typography","NavLink","Footer","logoConfig","path","Object","keys","footerNavs","map","key","idx","socialConfigs","Icon","name","linkProps","bottomLinks","link","FooterNavItem","header","links","restLink","Button","Collapsible","CollapsibleButton","CollapsibleContent","Dropdown","DropdownBasicButton","DropdownBody","Input","MenuItem","ThemeSwitcherMenuItem","cx","useCallback","useState","Header","connectedEndpoint","setConnectedEndpoint","webbApiConfig","endpointUserInput","setEndpointUserInput","verifyEndpoint","maybeEndpoint","fetch","req","ok","setEndpoint","endpoint","verified","localStorage","setItem","headerNavs","window","open","val","toString","SettingItem","children","NavButton","isActive","CommonWealth","DiscordFill","GithubFill","TelegramFill","TwitterFill","commonExternalProps","target","href","dapp","network","developer","resources","company","isDev","process","env","NODE_ENV","defaultEndpoint","createColumnHelper","getCoreRowModel","getPaginationRowModel","useReactTable","useAuthorities","Avatar","CardTable","KeyValueWithButton","Progress","Table","fuzzyFilter","getUnicodeFlagIcon","useMemo","Link","columnHelper","columns","accessor","cell","props","getValue","parseInt","id","AuthoritiesTable","dataProp","data","pageIndex","pageSize","setPagination","pagination","query","offset","perPage","filter","authorities","totalItems","pageInfo","count","pageCount","Math","ceil","items","table","state","filterFns","fuzzy","onPaginationChange","manualPagination","undefined","title","info","variant","useAuthority","useStatsContext","AvatarGroup","DrawerCloseButton","TitleWithInfo","ArrowLeft","CheckboxBlankCircleLine","Close","Expand","Key","LinkIcon","Mail","QRCode","Spinner","shortenString","useLocation","useParams","twMerge","headerConfig","enableColumnFilter","firstElements","au","row","original","publicKey","AuthorityDetail","pathname","authorityId","activeSession","metaData","isPage","includes","authorityQuery","authority","stats","isStatsLoading","isLoading","keyGens","DetailsView","location","account","hidden","keyGenThreshold","inTheSet","nextKeyGenThreshold","numberOfKeys","uptime","reputation","Row","hasDivider","Col","className","AmountInput","Card","ChainInput","FixedAmount","RecipientInput","RelayerInput","ShieldedAssetInput","TokenInput","values","BridgeInputsShowCase","fixedValue","recipientValue","Showcase","fixedAmountState","recipientState","value","setValue","recipient","setRecipient","symbol","balance","balanceInUsd","nextVal","token1Symbol","token2Symbol","useDonutColor","DropdownMenu","Label","Doughnut","DonutDataType","DonutChartContainer","setTimeRange","statsMap","timeRange","menuOptions","selectIndex","indexOf","donutColors","labels","i","chartData","datasets","label","backgroundColor","bg","borderColor","borderWidth","chartOpts","responsive","plugins","legend","display","position","text","opt","textColor","ChartLabel","color","SessionKeyStatus","useKey","useSubQLtime","Chip","KeyCard","LabelWithValue","TimeLine","TimeLineItem","TimeProgress","ArrowRight","forwardRef","useNavigate","KeyDetail","ref","keyId","navigate","prevAndNextKeyResp","prevAndNextKey","error","isFailed","keyDetail","commonCardClsx","time","onNextKey","nextKeyId","onPreviousKey","previousKeyId","isDone","isCurrent","session","start","end","compressed","uncompressed","history","hist","at","hash","status","Generated","Signed","Rotated","height","length","author","Error","numberOfValidators","KeyGenAuthoredTable","KeyStatusCard","React","KeyStatusCardContainer","keyType","now","titleInfo","keyGenAuthorities","reduce","acc","cur","add","Set","Number","size","getFacetedMinMaxValues","getFacetedRowModel","getFacetedUniqueValues","getFilteredRowModel","getSortedRowModel","useKeys","Filter","Slider","useEffect","common","titleComponent","signatureThreshold","auth","Array","from","totalAuthorities","KeygenTable","columnFilters","setColumnFilters","globalFilter","setGlobalFilter","setTotalItems","pageQuery","keysStats","item","keygenThreshold","onColumnFiltersChange","onGlobalFilterChange","globalFilterFn","headers","getHeaderGroups","headerGroup","column","getCanFilter","keygenFilterCol","signatureFilterCol","nextValue","getFilterValue","setFilterValue","ApolloClient","ApolloProvider","InMemoryCache","StatsProvider","Layout","storedEndpoint","getItem","apolloClient","cache","uri","randNumber","useProposal","Block","ExchangeLine","ExternalLinkLine","TokenIcon","shortenHex","ProposersTable","ProposalDetail","proposalId","proposalDetails","passThreshold","min","max","proposal","counters","details","forCount","abstain","abstainCount","against","againstCount","all","allCount","nextProposalId","nextAndPrevStatus","previousProposalId","handleNextProposal","handlePrevProposal","Overview","abstainPercentage","againstPercentage","chain","proposalData","forPercentage","timeline","txHash","type","classNames","PercentageCard","percentValue","useProposals","getChipColorByProposalType","proposers","ProposalsTable","proposalsStats","VoteStatus","useVotes","Tabs","formatDistanceToNow","vote","Abstain","Against","For","addSuffix","voteStatus","setVoteStatus","votes","tabsValue","tabsLabels","onChange","tab","selectedTab","find","gql","Apollo","defaultOptions","AccountsGroupBy","AccountsOrderBy","AuthoritiesGroupBy","AuthoritiesOrderBy","BlocksGroupBy","BlocksOrderBy","EventsGroupBy","EventsOrderBy","ExtrinsicsGroupBy","ExtrinsicsOrderBy","KeygenThresholdsGroupBy","KeygenThresholdsOrderBy","ProposalCountersGroupBy","ProposalCountersOrderBy","ProposalItemsGroupBy","ProposalItemsOrderBy","ProposalStatus","ProposalTimelineStatusesGroupBy","ProposalTimelineStatusesOrderBy","ProposalType","ProposalVotesGroupBy","ProposalVotesOrderBy","ProposerThresholdsGroupBy","ProposerThresholdsOrderBy","ProposersGroupBy","ProposersOrderBy","PublicKeysGroupBy","PublicKeysOrderBy","SessionProposersGroupBy","SessionProposersOrderBy","SessionValidatorsGroupBy","SessionValidatorsOrderBy","SessionsGroupBy","SessionsOrderBy","SignatureThresholdsGroupBy","SignatureThresholdsOrderBy","UnsignedProposalsQueueItemsGroupBy","UnsignedProposalsQueueItemsOrderBy","UnsignedProposalsQueuesGroupBy","UnsignedProposalsQueuesOrderBy","ValidatorsGroupBy","ValidatorsOrderBy","PageInfoMetaFragmentDoc","ValidatorMetaFragmentDoc","SessionAuthValidatorNodeFragmentDoc","SessionAuthValidatorFragmentDoc","SessionAuthFragmentDoc","ProposalListViewFragmentDoc","ProposalsVoteListViewFragmentDoc","ValidatorListingDocument","useValidatorListingQuery","baseOptions","options","useQuery","useValidatorListingLazyQuery","useLazyQuery","ValidatorSessionsDocument","useValidatorSessionsQuery","useValidatorSessionsLazyQuery","ValidatorOfSessionDocument","useValidatorOfSessionQuery","useValidatorOfSessionLazyQuery","MetaDataDocument","useMetaDataQuery","useMetaDataLazyQuery","LastBlockDocument","useLastBlockQuery","useLastBlockLazyQuery","ProposalCounterDocument","useProposalCounterQuery","useProposalCounterLazyQuery","ProposalsDocument","useProposalsQuery","useProposalsLazyQuery","ProposalsCounterDocument","useProposalsCounterQuery","useProposalsCounterLazyQuery","ProposalsOverviewDocument","useProposalsOverviewQuery","useProposalsOverviewLazyQuery","ProposalVotesDocument","useProposalVotesQuery","useProposalVotesLazyQuery","ProposalDetailsDocument","useProposalDetailsQuery","useProposalDetailsLazyQuery","EnsureProposalsDocument","useEnsureProposalsQuery","useEnsureProposalsLazyQuery","PublicKeysDocument","usePublicKeysQuery","usePublicKeysLazyQuery","PublicKeyDocument","usePublicKeyQuery","usePublicKeyLazyQuery","SessionKeyIdsDocument","useSessionKeyIdsQuery","useSessionKeyIdsLazyQuery","CurrentSessionAuthoritiesDocument","useCurrentSessionAuthoritiesQuery","useCurrentSessionAuthoritiesLazyQuery","SessionKeysDocument","useSessionKeysQuery","useSessionKeysLazyQuery","SessionThresholdHistoryDocument","useSessionThresholdHistoryQuery","useSessionThresholdHistoryLazyQuery","SessionThresholdsDocument","useSessionThresholdsQuery","useSessionThresholdsLazyQuery","randBic","randBrand","randCountryCode","arrayFrom","getNewAuthority","detaillUrl","useAuthoritiesSeedData","sizeArg","DATA","fetchAuthoritiesData","Promise","r","setTimeout","rows","slice","useDarkMode","resolveConfig","fullConfig","tailwindConfig","webbColors","theme","colors","isDark","Open","green","Rejected","red","blue","Accepted","purple","randEthereumAddress","randHexaDecimal","randRecentDate","getNewProposal","rand","floor","random","join","getTime","useProposalsSeedData","fetchProposalsData","ReactDOM","render","document","getElementById","mapAuthorities","mapSessionAuthValidatorNode","useCurrentMetaData","useActiveSession","useThresholds","setData","call","variables","sessionId","e","subscription","observable","res","allAuth","sessionValidators","authSet","nextAuthSet","isNext","proposersCount","totalCount","sessionTimeStamp","block","timestamp","threshold","keyGen","String","current","Date","proposer","signature","authoritySet","pending","next","loading","Boolean","message","subscribe","unsubscribe","reqQuery","setAuthorities","validators","nodes","v","edges","validator","hasPrevious","hasPreviousPage","hasNext","hasNextPage","setStats","setKeyGens","callKeyGen","queryKeyGen","callValidatorOfSession","queryValidatorOfSession","validatorId","sessionValidatorId","node","number","sessionValidator","counter","aggregates","distinctCount","isBest","isNextBest","pendingKeyGenThreshold","useSessionHistory","sessionHistory","setSessionHistory","sessions","isReady","useStaticConfig","sessionFrame","sessionHeight","blockTime","startDateTime","endTime","page","setPage","PerPage","publicKeys","filteredData","n","useActiveKeys","setKeys","SessionId","activeKey","nextKey","callSessionKeys","sessionKeysQuery","setKey","setPrevAndNextKey","stage","sessionAuthorities","sessionIds","console","log","s","prev","mapProposalListItem","useProposalsOverview","range","proposalsOverview","setProposalsOverview","endRange","lessThanOrEqualTo","startRange","greaterThanOrEqualTo","openProposals","thresholds","proposerThreshold","NaN","sessionProposers","openProposalsCount","rejectedProposalsCount","reject","signedProposalsCount","signed","acceptedProposalsCount","accepted","proposalStats","rejected","p","proposalsPage","setProposalsPage","proposalItems","targetSessionId","votesReqQuery","setProposalDetails","setNextAndPrevStatus","ensureProposals","ensureProposalsQuery","ids","proposals","proposalItem","votesFor","allVotes","totalVotes","expectedVotesCount","chainId","proposalTimelineStatuses","statusItem","blockNumber","setVotes","equalTo","proposalVotes","voterId","useContext","sessionNumber","nextSession","SubQlTime","lastBlockTime","lastSynced","date","diff","dateStr","sync","statsContext","createContext","updateTime","_time","currentBlock","lastSession","lastProcessBlock","ctx","setTime","setMetaData","staticConfig","setIsReady","blocks","lastBlock","lastBlockTimestamp","metaDataQuery","fetchPolicy","unSub","_metadata","targetHeight","lastProcessedHeight","startPolling","stopPolling","lazy","Suspense","PageAuthorities","PageAuthorityDetailDrawer","PageAuthorityDetail","PageAuthoritiesHistory","PageKeys","PageKeyDetailDrawer","PageKeyDetail","PageProposals","PageProposalDetailDrawer","PageProposalDetail","PageComponentsShowcase","CSuspense","element","redirectTo","getChipColorByKeyType","Executed","FailedToExecute","Removed","AnimatePresence","cloneElement","createElement","HashRouter","Router","useRoutes","usePageTitle","withTitle","component","Inner","content","Redirect","to","Routes","config","_config","inner","forEach","useModal","noop","useSetting","defaultValue","_setValue","storaged","SettingContext","browser","changeEndpoint","closeSetting","openSetting","setTheme","settingVisible","SettingProvider","close","setBrowser","reload","localEndpoint","searchParams","URLSearchParams","search","urlEndpoint","get","test","navigator","userAgent","LoggerService","appLogger","appMode","isProduction","isDevelopment","isLocalFixtures","LOCAL_FIXTURES","withLocalFixtures","dev","ArkworksProvingManagerThread","CircomProvingManagerThread","useRef","createStore","initializeStore","manipulations","_setState","stateRef","setState","_manipulates","useMemorized","useLayoutEffect","useApiQueryStore","useUIConfig","StoreContext","StoreProvider","apiQuery","ui","useStore","namespace","context","breadcrumb","setTitle","useSubMenu","setSubMenu","set","useReducer","initState","pageTitle","subMenu","reducer","action","storage","Storage","dispatch","_value","JSON","stringify","copyToClipboard","useCopyable","isCopied","setIsCopied","_timeout","_setTimeout","copy","timeoutObj","clearTimeout","copiedText","defaultStatus","callback","setStatus","toggle","_callback","update","AvatarPrimitive","Identicon","getAvatarSizeInPx","alt","outerClassName","darkMode","fallback","sourceVariant","src","valueProp","sizeClassName","typoVariant","valueAddress","substring","childrenProp","total","Children","toArray","child","isValidElement","totalAvatars","extraAvatars","mergedClsx","index","InputWrapper","amount","onAmountChange","onMaxBtnClick","ChevronRight","chainType","trim","toLowerCase","onChangeProp","onClick","toFixed","address","setAddress","clipboard","readText","addr","externalLink","relayerAddress","getRoundedAmountString","asset","parseFloat","toUpperCase","token","ButtonSpinner","useButtonProps","getButtonClassNameByVariant","asProps","as","isDisabled","isFullWidth","leftIcon","loadingText","rightIcon","spinner","spinnerPlacement","restProps","tagName","buttonProps","Component","mergedClassName","contentProps","disabled","ButtonContent","placement","isTrivialHref","rel","role","tabIndex","meta","handleClick","event","preventDefault","stopPropagation","handleKeyDown","onKeyDown","primary","base","hover","active","md","sm","secondary","utility","commonClsx","cardClsx","leftTitle","titleProps","CheckBox","inputProps","isChecked","spacing","labelClsxProp","labelClassName","wrapperClassName","inputClsx","inputHoverClsx","inputCheckedClsx","inputDisabledClsx","mergedInputClsx","spacingClx","labelClsx","mergedLabelClsx","getChipClassName","classNameProp","baseClsx","yellow","CollapsiblePrimitive","ChevronDown","FileCopyLine","Tooltip","TooltipBody","TooltipTrigger","CopyWithTooltip","isUseSpan","textToCopy","onCopy","SeparatorPrimitive","DialogPrimitive","Drawer","Root","DrawerTrigger","Trigger","DrawerContent","DrawerTitle","Title","DrawerDescription","Description","DropdownMenuPrimitive","DropdownButton","icon","iconProp","triggerText","FilterIcon","Search","clearAllFilters","onSearchChange","searchText","rankItem","columnId","addMeta","itemRank","passed","debounceTime","errorMessage","htmlSize","isInvalidProp","isInvalid","isReadOnly","isRequired","leftIconProp","rightIconProp","initialValue","timeout","paddingX","inputClsxBase","inputClsxHover","inputClsxFocus","inputClsxDisabled","iconClsx","eve","keyValue","fullDetailUrl","instance","keyVal","startTime","aut","hasShortenValue","isHiddenLabel","labelVariant","valueVariant","LabelPrimitive","valueTooltip","createIcon","defaultLogoSize","width","viewBox","fillClassName","maskType","displayName","defaultProps","fill","stroke","clsxProp","NetworkThresholdsCard","thresholdType","viewHistoryUrl","randSoonDate","useNetworkThresholdsSeedData","ChevronLeft","getPaginationItems","Pagination","boundaryCount","canNextPage","canPreviousPage","itemsPerPage","nextPage","currentPage","previousPage","setPageIndex","siblingCount","totalPages","paginationDisplayItems","showingItemsCount","ProgressPrimitive","root","indicator","lg","prefixLabel","suffixLabel","hasValue","displayValue","prefix","suffix","SliderPrimitive","hasLabel","onValueChange","SliderThumb","Stats","SwitchPrimitive","Switcher","mergedClxs","TData","THeader","flexRender","TableComp","isDisplayFooter","isPaginated","tableProps","totalRecords","isPlaceholder","columnDef","getContext","getRowModel","getVisibleCells","getFooterGroups","footerGroup","footer","getState","getPrePaginationRowModel","getPageCount","getCanPreviousPage","getCanNextPage","setSelectedTab","onTabChange","tabs","Tab","Half2Icon","MoonLine","SunLine","ThemeSwitcherButton","isDarkMode","toggleThemeMode","preferredTheme","currentTheme","default","CheckboxCircleLine","externalUrl","extraContent","calculateDateProgress","formatDateToUtc","dateProgress","setDateProgress","timerRef","timer","setInterval","progress","clearInterval","InformationLine","titleClassName","TokenSelector","TooltipPrimitive","button","isDefaultOpen","isDisableHoverableContent","isOpen","WebbUIErrorBoudary","hasError","errorInfo","logger","debug","whiteSpace","componentStack","setPreferredTheme","matchMedia","matches","documentElement","classList","remove","nextThemeMode","_nextThemeMode","DefaultTokenIcon","useDynamicSVGImport","ImportedIconRef","setLoading","setError","onCompleted","onError","_name","importIcon","SvgIcon","useSeedData","factoryFn","seedItems","fetchData","WebbUIContext","useWebbUI","ArrowDropDownFill","d","ArrowDropUpFill","AuctionLine","BankLine","colorUsingStroke","CheckboxFill","ChevronUp","Coin","Copyright","EditLine","ExchangeFunds","Graph","Menu","ShuffleLine","getIconSizeInPixel","sizeInPx","getFillColor","getStrokeColor","pathDefinition","restOptions","_path","_size","_className","Comp","hasErrorBoudary","toggleMode","WebbUIEErrorBoundaryElement","getFontWeightClassName","getTextAlignClassName","defaultComponent","h1","h2","h3","h4","h5","body1","body2","body3","body4","mono1","mono2","para1","para2","fw","ta","_component","textAlign","fontWeight","isMonospaceVariant","isHeadingVariant","headingKeys","monoKeys","differenceInMilliseconds","isValid","startDateStr","endDateStr","currentTime","startDate","endDate","diffBetweenStartAndEnd","abs","diffBetweenStartAndNow","parseISO","format","utcToZonedTime","dateArg","dateISO","toISOString","timeZone","startPages","endPages","siblingsStart","siblingsEnd","numbro","num","digits","average","totalLength","mantissa","optionalMantissa","trimMantissa","thousandSeparated","roundingFunction","round","randAccount32","randomEnum","anEnum","enumValues","randomIndex","randomEnumValue","_","hexStr","chars","hexLower","isStartWith0x","startsWith","startStr","endStr","split","str"],"sourceRoot":""}