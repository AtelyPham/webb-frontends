{"version":3,"file":"src_pages_Keys_tsx.fcdca348.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA8E;AAClB;AACQ;AACpC;AACU;AAE0B;AACP;AAC7D,IAAMQ,IAAI,GAAG,SAAPA,IAAI,GAAS;EAAA;EACjB,qBAAkDD,8DAAa,EAAE;IAAzDE,KAAK,kBAALA,KAAK;IAAEC,QAAQ,kBAARA,QAAQ;IAAEC,SAAS,kBAATA,SAAS;IAAOC,IAAI,kBAATC,GAAG;EAEvC,eAAgCV,8CAAO,CAGpC,YAAM;MACP,OAAO;QACLW,UAAU,EAAEF,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI;QACjCG,OAAO,EAAEH,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAG;MAC5B,CAAC;IACH,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;IARFE,UAAU,YAAVA,UAAU;IAAEC,OAAO,YAAPA,OAAO;EAU3B,uBAAiBf,0KAAe,EAAE;IAA1BgB,IAAI,oBAAJA,IAAI;EAEZ,IAAIL,SAAS,IAAIG,UAAU,KAAK,IAAI,IAAIC,OAAO,KAAK,IAAI,EAAE;IACxD,oBACE;MAAK,SAAS,EAAC,+CAA+C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC5D,oBAAC,sEAAO;MAAC,IAAI,EAAC,IAAI;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,MACjB;EAEV;EAEA,IAAIL,QAAQ,EAAE;IACZ,oBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,8EAAU;MAAC,OAAO,EAAC,OAAO;MAAC,SAAS,EAAC,+BAA+B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAClED,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,kBAAkB,CACjB,CACT;EAEV;EAEA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7B,oBAAC,+DAAsB;IAAC,GAAG,EAAEO,IAAK;IAAC,OAAO,EAAC,SAAS;IAAC,IAAI,EAAEF,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACzE,oBAAC,+DAAsB;IAAC,GAAG,EAAEE,IAAK;IAAC,OAAO,EAAC,MAAM;IAAC,IAAI,EAAED,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAC/D,eAEN;IAAK,SAAS,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACnB,oBAAC,oDAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACX,eAEN,oBAAC,oDAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACN;AAEV,CAAC;AAAC,GA/CIP,IAAI;EAAA,QAC0CD,0DAAa,EAY9CP,0KAAe;AAAA;AAAA,KAb5BQ,IAAI;AAiDV,iEAAeA,IAAI,EAAC;AAAA;AAAA","sources":["webpack://@nepoche/stats-dapp/./src/pages/Keys.tsx"],"sourcesContent":["import { useStatsContext } from '@nepoche/stats-dapp/provider/stats-provider';\nimport { Spinner } from '@nepoche/webb-ui-components/icons';\nimport { Typography } from '@nepoche/webb-ui-components/typography';\nimport { useMemo } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { KeygenTable, KeyStatusCardContainer } from '../containers';\nimport { PublicKey, useActiveKeys } from '../provider/hooks';\nconst Keys = () => {\n  const { error, isFailed, isLoading, val: data } = useActiveKeys();\n\n  const { currentKey, nextKey } = useMemo<{\n    currentKey: PublicKey | null | undefined;\n    nextKey: PublicKey | null | undefined;\n  }>(() => {\n    return {\n      currentKey: data ? data[0] : null,\n      nextKey: data ? data[1] : null,\n    };\n  }, [data]);\n\n  const { time } = useStatsContext();\n\n  if (isLoading || currentKey === null || nextKey === null) {\n    return (\n      <div className='flex items-center justify-center min-h-screen'>\n        <Spinner size='xl' />;\n      </div>\n    );\n  }\n\n  if (isFailed) {\n    return (\n      <div>\n        <Typography variant='body1' className='text-red-100 dark:text-red-10'>\n          {error ?? 'Unexpected error'}\n        </Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div className='flex space-x-4'>\n        <KeyStatusCardContainer now={time} keyType='current' data={currentKey} />\n        <KeyStatusCardContainer now={time} keyType='next' data={nextKey} />\n      </div>\n\n      <div className='mt-4'>\n        <KeygenTable />\n      </div>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Keys;\n"],"names":["useStatsContext","Spinner","Typography","useMemo","Outlet","KeygenTable","KeyStatusCardContainer","useActiveKeys","Keys","error","isFailed","isLoading","data","val","currentKey","nextKey","time"],"sourceRoot":""}