{"version":3,"file":"src_pages_Authorities_tsx.0f70f9c0.js","mappings":"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","sources":["webpack://@nepoche/stats-dapp/./src/pages/Authorities.tsx"],"sourcesContent":["import { ColumnDef, createColumnHelper, getCoreRowModel, Table as RTTable, useReactTable } from '@tanstack/react-table';\nimport { useStatsContext } from '../provider/stats-provider';\nimport {\n  Avatar,\n  AvatarGroup,\n  Button,\n  Card,\n  CardTable,\n  Chip,\n  KeyValueWithButton,\n  LabelWithValue,\n  Stats,\n  Table,\n  TimeProgress,\n  TitleWithInfo,\n} from '@nepoche/webb-ui-components';\nimport { fuzzyFilter } from '@nepoche/webb-ui-components';\nimport { Spinner } from '@nepoche/webb-ui-components';\nimport { Typography } from '@nepoche/webb-ui-components';\nimport { ComponentProps, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Outlet } from 'react-router-dom';\n\nimport { AuthoritiesTable } from '../containers';\nimport { DiscreteList, UpcomingThreshold, useThresholds } from '../provider/hooks';\nimport { getChipColorByKeyType } from '../utils';\n\nconst columnHelper = createColumnHelper<UpcomingThreshold>();\n\nconst columns: ColumnDef<UpcomingThreshold, any>[] = [\n  columnHelper.accessor('stats', {\n    header: 'Status',\n    cell: (props) => <Chip color={getChipColorByKeyType(props.getValue())}>{props.getValue<string>()}</Chip>,\n  }),\n\n  columnHelper.accessor('session', {\n    header: 'Session',\n  }),\n\n  columnHelper.accessor('keyGen', {\n    header: 'Keygen',\n  }),\n\n  columnHelper.accessor('signature', {\n    header: 'Signature',\n  }),\n\n  columnHelper.accessor('authoritySet', {\n    header: () => (\n      <Typography variant='body1' fw='bold' ta='right' className='!text-inherit'>\n        Authority Set\n      </Typography>\n    ),\n\n    cell: (props) => {\n      const authorities = props.getValue<DiscreteList>();\n      if (!authorities.count) {\n        return (\n          <Typography variant='body1' ta='right'>\n            -\n          </Typography>\n        );\n      }\n\n      return (\n        <AvatarGroup total={authorities.count} className='justify-end'>\n          {authorities.firstElements.map((au, idx) => (\n            <Avatar sourceVariant={'address'} key={`${au}${idx}`} value={au} />\n          ))}\n        </AvatarGroup>\n      );\n    },\n  }),\n];\n\nconst Authorities = () => {\n  const thresholds = useThresholds();\n\n  const [threshold, upComingThresholds] = useMemo(() => {\n    if (thresholds.val) {\n      return thresholds.val;\n    }\n    return [null, null];\n  }, [thresholds]);\n\n  const statsItems = useMemo<ComponentProps<typeof Stats>['items']>(() => {\n    const threshold = thresholds.val?.[0];\n    return [\n      {\n        titleProps: {\n          title: 'Keygen',\n          info: 'Keygen',\n        },\n        value: threshold?.keyGen ?? 'loading..',\n      },\n      {\n        titleProps: {\n          title: 'Signature',\n          info: 'Signature',\n        },\n        value: threshold?.signature ?? 'loading..',\n      },\n    ];\n  }, [thresholds]);\n\n  const data = useMemo(() => (upComingThresholds ? Object.values(upComingThresholds) : []), [upComingThresholds]);\n\n  const table = useReactTable<UpcomingThreshold>({\n    columns,\n    data,\n    getCoreRowModel: getCoreRowModel(),\n    filterFns: {\n      fuzzy: fuzzyFilter,\n    },\n  });\n\n  const { keyGen, publicKey, signature } = threshold ?? {};\n  const isLoading = thresholds.isLoading || keyGen === undefined || signature === undefined || publicKey === undefined;\n  const { time } = useStatsContext();\n\n  return (\n    <div className='flex flex-col space-y-4'>\n      <Card>\n        <TitleWithInfo title='Network Thresholds' info='Network Thresholds' variant='h5' />\n\n        {isLoading ? (\n          <div className='flex items-center justify-center min-w-full min-h-[235px]'>\n            <Spinner size='xl' />\n          </div>\n        ) : (\n          <>\n            <Stats items={statsItems} className='pb-0' />\n\n            <TimeProgress startTime={publicKey.start ?? null} endTime={publicKey.end ?? null} now={time} />\n\n            <div className='flex items-center justify-between'>\n              <div className='flex items-center space-x-2'>\n                <Chip color='green'>{publicKey.isCurrent ? 'Current' : 'Next'}</Chip>\n                <LabelWithValue label='session:' value={publicKey.session} />\n                <Typography variant='body2' fw='semibold'>\n                  /\n                </Typography>\n                <KeyValueWithButton size='sm' keyValue={publicKey.compressed} />\n              </div>\n\n              <Link to='history'>\n                <Button variant='link' size='sm'>\n                  View history\n                </Button>\n              </Link>\n            </div>\n          </>\n        )}\n      </Card>\n\n      <CardTable\n        titleProps={{\n          title: 'Upcoming Thresholds',\n          info: 'Upcoming Thresholds',\n          variant: 'h5',\n        }}\n      >\n        {isLoading ? (\n          <div className='flex items-center justify-center min-w-full min-h-[235px]'>\n            <Spinner size='xl' />\n          </div>\n        ) : (\n          <Table tableProps={table as RTTable<unknown>} />\n        )}\n      </CardTable>\n\n      <AuthoritiesTable />\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Authorities;\n"],"names":["createColumnHelper","getCoreRowModel","useReactTable","useStatsContext","Avatar","AvatarGroup","Button","Card","CardTable","Chip","KeyValueWithButton","LabelWithValue","Stats","Table","TimeProgress","TitleWithInfo","fuzzyFilter","Spinner","Typography","useMemo","Link","Outlet","AuthoritiesTable","useThresholds","getChipColorByKeyType","columnHelper","columns","accessor","header","cell","props","getValue","authorities","count","firstElements","map","au","idx","Authorities","thresholds","val","threshold","upComingThresholds","statsItems","titleProps","title","info","value","keyGen","signature","data","Object","values","table","filterFns","fuzzy","publicKey","isLoading","undefined","time","start","end","isCurrent","session","compressed","variant"],"sourceRoot":""}